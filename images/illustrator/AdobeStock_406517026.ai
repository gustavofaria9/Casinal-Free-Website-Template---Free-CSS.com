%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: titans_stickers_cargo-temp_01.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Kroshka-looser
%%CreationDate: 1/5/2021
%%BoundingBox: 0 0 2135 1164
%%HiResBoundingBox: 0 0 2134.7305 1163.0733
%%CropBox: 0 0 2134.7305 1163.0733
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 72 8%%BeginData: 20291 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9A8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFFFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9A8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFFFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9A8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD09FFA9FFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFFFFFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFD05FFAFFFA9FF
%AFFFA9FFAFFFA9A8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFAFFD05FFAFFFFFFFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FD05FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFAFFFA8AFA8FFFF
%FFA8AFA8FFA8AFA8FFA8AFFFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFAFFF
%FFFFA8FFA9FFA9FFA9FFA9FFA9FFA9FD07FFAFFFAFAF7D7E7EFFFFFFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%C3FFAFFFA9FFA9FFA9FFA8FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFAFFFAFAF
%A8FFA9AFFFFFA9FFA9FFA9FFA9FFA9A8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8FFA8FFFFAFA8FFA8AFA8AFA8AFA8FD05FFAFFFA8FFA8AFA8FFA8A8A8
%FFA8FFA8AFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFFFC3C3FFA8AFA8AFA8FFA8FFA9FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8FFA8AFA8AFA8AFA9AFAEFFA8AFA8FFA8AFA8FFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFFFFFAFFFFFFFA9FFA9FD09FFAFFFA9AF84A8A8AFFD04
%FFAFFFFFFFA9FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFC3BCC3FFFFFFA9FD07FFA9FFAFFFA9FFAFFFA9FFAFFFFF
%FFAFFFAFFFFFFFAFFFFFFFA9FFAFFFA9FFAFA8AFA8FFA8AFA8FFA8AFA8FF
%A8AFA8FFA8FFAFFFAFFFA9FFA9FD05FFA8FFAFFFA8AFA8847EA8A8FFA8FF
%A8AFA8AFFFFFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AF
%A8FFA8AFA8FFA8FFFFFF9AB59AFFFFFFCFCFC9CDC8CFCFFFAFFFA8AFA8FF
%A8AFA8FFAFFFA8FFAFFFA8AFA8AFA8FFA8AFA8FFA8AFA8FFFFA9FFA9FFA9
%FFA9FFA9FFA9FFA9FFA9FFAFFFAFFD07FFAFFFAFFFA8A87EAFA8FFAFFFAF
%FFA9AFA8FFAFFFFFFFA9FFA9FFA9FFA9FFA9FFA9FFA9FD09FFAFFFAFFFA9
%FFA9FFA9FFFFFF4C779ABCBCCFCECDC8CDCDCDC7C8A0CAFD04FFA8FFA9FF
%A8FFFFAFA8AFAFAFFD06FFA9FFA9FFA9FFA9A8FFA8AFA8FFA8AFA8FFA8AF
%A8FFA8AFA8FFFFFFA8FFA9FFA8FFA8AFA8FF7EA884FFAFFFA8AFA9A984AF
%A9FFFFFFA9FFA8FFA9AFA8FFA8AFA8FFA8AFA8AFFFFFA8FFC9C9C9CFCAFF
%CAFFCFFFCAFFA8AFA8FFA85252C394BC9FC8C8C89FA07599759F9FC9CAFF
%FFFFA8FFA8AFA8FFA8FFA8FFA8AFA8AFA8FFA8FFA8AFA8FFA8AFFFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFFFFFAFFFFFFFA9AFA884A8FD05FFAFAFA9
%AF847D53FFFFFFAFFFA9FD07FFA9FFA9FFAFFFA9FFFFFFA1CAFFC8C9CFC8
%C8C2C9C2C9C2C9FFFFA9FFAFFFFFFF7D7D9AC8C2C89FA075A0A0C8C8CDC8
%CDC8CFFFFFAFFFA9FFFFFFAFFFAFFFAFAFAFFFAFFFAFFFA9FFAFFFA9A8FF
%A8AFA8FFA8AFA8FFA8AFA8FFA8FD05FFA8AFAFA87EA9A8FFAFFF847D84AF
%A9A95A84537EFFFFA8AFA8FFFFCA9ABCBCCAFFFFA8AFA8FFA8AFA8FFAFCA
%A1FFC2C9CAC99FC29FC29FC2C2FFA9AFA8FFA9FFAF5227C39FC29F756FA0
%C8CDC8CDC8C89FC2A0FFA8FFA8AFA8FFFFAFA8AFA8AFA8FFFFAFA8FFA8AF
%A8FFA8AFFFA9FFA9FFA9FFA9FFA9FFA9FFA8FD07FFA9AFAFFFAFFF848584
%59227EFFFFFFA9A8FFFFFFA8FFA9FFFFCAB5BCC3BCB5CFFFFFA9FFA9FFA9
%FFFF7EA8AF59C9C2C2A0C2C2C2A0C2C2C9FFFFA9FFA9FFAFFF7DA2C2C9C2
%C899999FC8C2C89FC299A099C9FFFFA9FFA9FFA8FFFFFFAFFD05FFA9FFA9
%FFA9FFA9FFA9A8AFA8FFA8AFA8FFA8AFA8AFA8FFA8FFFFFFA8FFA8FFA8FF
%A9FF845A5AA97D7DA8FFA8FFFFFFA8FFA8AFA8FFA8FF9ABCCAFFA8BC9AFF
%A8FFA8AFA8FFFFFFA8845A59A0C29FC29FC29FC29FC2C8FFA8FFA8AFA8FF
%A9FFFFC9CACAA7C99FC29FC29F9999A09999A7FFA8AFA8FFA8AFA8FFA9FF
%A9FFA8AFA8FFA8AFA8FFA8AFA8FFFFA9FFAFFFA9FFAFFFA9FD07FFAFFD09
%FFA885A8FFFFFFA9FFA9FFA9FFAFFFA9FFAFFFFFBCC3FFFFFFC3C3FFFFAF
%FFA9FFAFFFFFFFA83053C8C2C8C2C8C2C2C2C8C2C9FFFFAFFFA9FFAFFFFF
%FFC2CACAFFCFCFC9C9C2C299C29FA099FFFFFFAFFFA9FFA9FFA9FFA9FFA9
%FFA9FFAFFFA9FFAFFFA9FFAFA8AFA8FFA8AFA8FFA8AFA8FFAFFFA8FD05FF
%AFFFA8FFA8FFA9FFFFFFAFFFA8AFA8FFA8AFA8FFA8AFA8FFA9FF9ABCCAFF
%CABCC3FFA8FFA8AFA8FD04FFCA2E7DFD04C29FC29FC29FC2C9FFA8FFA8AF
%A8FFA8FFC9C29FC2A7CFFFFFCAC89F9999BC99BCA1CACAFFAFFFA9AFA8FF
%A9AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFFFA9FFA9FFA9FFA9FFA9FD07FFAF
%FFA8FFA9FFA9FFA9FFA9FFAFFFA8FFA9FFA9FFA9FFA9FFA9FFA9FFFFCA93
%BCC3BC93CAFFFFA9FFA9FFA9FFFFA8BCC39AC3BCC3C2C8C2C8C2C2C1CFFF
%FFA9FFA9FFA9FFFFCA9FC2C1C2C2C9CAFFA0C2999A93FD04BCC3C3CACAFD
%07FFA9FFA9FFA9FFA9FFA9FFA9FFA9A8FFA8AFA8FFA8AFA8FFA8FFA8FFA8
%AFA8AFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFFFC393BC93BCCAFFA8AFA8FFA8FFFF8406779AC3BCBC9AC9CACFCACFC9
%C9CAFFA8AFA8FFA8AFA8FFFFFFA7C29FC29FC2A0C2757675756F76709A93
%BCBCBC9AC3C3C3A8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFFFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFA9FFFFC3BCBCBCFFAFFFA9FFAFFFFFFFFD042F7DCFCA
%FD09FFAFFFA9FFAFFFA9FFAFFD04FFCFC2C8C1C2A076759975A0525276C3
%A1779ABCBCBCC3FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9A8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8FFA8FFA8AFA8FFA8FFCABC93C3AFFFA8AFA8FFA8FF7D2F2F2F0684FF
%FFAFFFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFFFFFC9C9C19F75
%A0A0CACAA87DCAFF53279A9AFFFFFFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFFFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFFFFFAFFFA9FFA9FFAFFFC3BCCAFFA8FFA9FFA8FF
%FF592E2F282F84FFA9FFA8FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A8FD04FFCFC9CFFD08FF7E7DCAFFFFFFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9A8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8FFCFA17DFFA8FFA8AFA8AFA9FFCAFFA8AFA8FFA8
%AFA9AF282F282F28A8AFAFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8AFA8FFAFFFAFFFA8AFA8AFA8FFA9FFFFFFAFAFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%FFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFFFFFC3FFFFFFA9FFA9FFAFFF
%AFFFFFFFA9FFAFFFA9FF84FD052FA8FFA9FFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%A9FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8FFCAA1A8FFA8FFA8AFA8FFA8AFA8FFA8FFAFFFFFCA9B7DA1CAFF
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8FFFF5A282F282F2FFFA9FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8FFA9FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFFFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFFFCA75FFFFFFA9FFA9FFA9FFA9FFA9FFFFCF
%CFC3B5BC76BCBCC3FFFFA9FFA9FFA9FFA9FFA9FFAFFFFFFF2F2F2E2F2F53
%FFFFA8FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA8FFFFFFCFFFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9A8FFA8AFA8FFA8AFA8FFA8AFA8AFA8FFFFFFC2CAFFFFA8AFA8FFA8
%AFA8FFA8FFA95A597D76BCB5BC93BC93C3FFFFA8AFA8FFA8AFA8FFFFFFA8
%7E2E2F06592F2F2FFFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8FFA9FFA6C8FFFFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFFFFFCFCA
%CAFFFFFFA9FFAFFFA9FFAFFFA9FF5A36305AA2CABCC39ABCB5FFFFFFA9FF
%AFFFA9FFFF842F2F282F065AFF592E5AFFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFA9FFAFFD06FFC3C9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9A8FFA8AFA8FFA8AFA8FFA8AFA8FF
%FFCFA8CFCFCFCAFFA9AFA8FFA8AFA8FFA8FFA8C359362F85FFFFCABC93BC
%9AFFAFAFA8FFA8AFFFA82E2F2F595984A8FF2F2F53FFA9AFA8FFA8AFA8FF
%A8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFFFFF
%A8A98460A7C9A0FFAFFFA8AFA8FFA8AFA8FFA8AFA8FFA8AFFFA9FFA9FFA9
%FFA9FFA9FFA9FFFFFFCFCFCAFFCFCFCAFFA9FFA9FFA9FFA9FFFFCA9A5A36
%5A7DCACAC393BCBCBCC3FFA9FFA9FFA9FFA8FD07FFA8532E7EFFFFA9FFA8
%FD05FFAFFFFFFFAFFD05FFA9FD05FFAFFD05FFA8FFA9FFFFFF8460366060
%C8A6A7CEFFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9A8AFA8FFA8AFA8FFA8AF
%A8AFA9FFCAFFA8CFCAFFCACFA9AFA8AFA8FFA8AFA8FFC376303653C393BC
%93BC93BC93BCFFFFA8AFA8FFA8FFA9FFA9FFA8FFFFAF282F59FFA8FFA8FF
%FFFF84A9A8FFA885A8FFAFAF84AFFFFFAFAF84AFA8FFA8A984FFFFFFA8FF
%FFC39A60366082C8C78382C8A8FFA8FFA8AFA8FFA8AFA8FFA8AFA8FFFFA9
%FFAFFFA9FFAFFFA9FFAFFFFFFFCFCFCAFFCFCFCAFFA9FFA9FFAFFFA9FFFF
%CA765A365A7DBCBCBC9ABC9ABCBCFFFFFFA9FFAFFFA9FFA9FFA9FFA9FFA8
%532884FFFFAFFFFFAF606060AFFF84358BFFAF3660608BFF85608460FFAF
%FD0460FD04FFCABCC3A18AA7CEC8CDA6CEC884FFFFAFFFA9FFAFFFA9FFAF
%FFA9FFAFA8AFA8FFA8AFA8FFA8AFA8FFFFFFC9CFA8CFCAFFCAFFA9FFA8AF
%A8FFA8AFA8FFCA9A2F36305AA1BCBCBC93BC93BCCAFFA8AFA8FFA8AFA8FF
%A8AFA8FFFFAF2E2F7EFFA8FFFFFF3584FD04FF608436FFA8608460608435
%AFA8AFA86060FFA86084FFFFCABCC2C3FFC9C8A7CAA6C8C7A72FA8FFFFA8
%AFA8FFA8AFA8FFA8AFA8FFFFA9FFA9FFA9FFA9FFA9FFA9FFCAC2BCC9CFFF
%CFCACAFFA8FFA9FFA9FFA9FFFFFFC39A767D53C393BCBCBCB5BCBCFFAFFF
%A9FFA9FFA9FFA9FFA9FFA8FFFF2F53FFFFFFA9FFAF6084FFFFFF84608460
%A8AF606036AF8460FF8B3C8B608BFFFF368BFFFFC3C2C3FFCFCAA7CDA7CA
%A7CE7D3559FFA9FFA9FFA9FFA9FFA9FFA9FFA9A8FFA8AFA8FFA8AFA8FFA8
%AFAFCABCC29ACACFFFA0C3FFFFA8AFA8AFA8AFA9FFFFFFC3C393BCB5BC93
%9A93C3A1FFFFAFA8FFA8AFA8FFA8AFA8FFA8AFA8FF7DA8FFFFA8AFFFFF5A
%6084AFA960358435848460846084AF3584843C848435AF843C84FFCABCBC
%FFFFCEA6A8A7C99FC9A8A82F35A8FFA8FFA8AFA8FFA8AFA8FFA8AFFFAFFF
%A9FFAFFFA9FFAFFFA9FFCFC3BCC3A0CFCFCABCCAFFFFAFFFA9FD08FFCA9A
%A19ABC9ABCCAFFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD05FFAFFFA9FFFF
%FF606060AF60AFFF8B60AF60FF8484FFAF606060AFFF85606084FFFFC3BC
%FFFFFFC8CDC8CEA7C9C8CFFF8476C3FFFFAFFFA9FFAFFFA9FFAFFFA9A8FF
%A8AFA8FFA8AFA8FFA8AFFFA876C2BCC3BCA176C39AC3CAFD0BFFAFAFFD04
%845AAFA9AFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8FD05FFA9
%FD07FFAFFFFFFFA8FFFFFFA8FD09FFBCCAFFFF59527CCDC8C8A6A8FFFFCA
%BC9ACAAFFFA8AFA8FFA8AFA8FFA8AFFFA9FFA9FFA9FFA9FFA9FFAFFF532E
%76C3BCC3C2C3BCC39A9A767DFD09FFAFA98B85FD04AFFFA8FFA9FFA9FFA9
%FFA9FFA9FFA8FFAFFFA8FFA9FFA9FFAFFD1DFFC3CAFFFFA8532F5352A0C8
%CDC9FFFFFFC3BCC3FFAFFFA9FFA9FFA9FFA9FFA9A8AFA8FFA8AFA8FFA8AF
%A8FFFF59272E2852769A769A9A52277727A8FD08FFA8AF848BA8AF84FFFF
%AFA8FFA8AFA8FFA8AFA8FFA8FFCBFFFFFFA8FFA8AFA8FD1CFFA8529A7DFF
%FF7E28532E2F28587CCFFD04FF9ABCC3FFA8AFA8AFA8FFA8AFA8FFFFA9FF
%AFFFA9FFAFFFA9FFAFFF52522E522852282E7DFFFF7DA8A87DFD08FFAFA9
%AF84AFA9AFAFFFA9FFAFFFA9FFAFFFA9FFAFFFFFFF60FFFFFFAFFFA9FFAF
%FD0BFFCFFFCAFFCFFFCFFFCFFFCFFD05FFFD047DA8FF7D5353532F532F53
%A8FD05FFBCBCCAFFAFFFA9FFAFFFA9FFAFA8AFA8FFA8AFA8FFA8AFA8FFFF
%532752282E275228A8FFFF7D7D7E7DFD08FFA9AF84AFA8AF84AFFFAFA8FF
%A8AFA8FFA8AFA8FFAF84356084FFA8FFA8AFA8FD0BFFA7C2A0C29FCDC8C8
%9FC8C8C8CAFD04FF84527D52FFFF7D28532F5328532E84FD06FF9ABCCAFF
%A8AFA8FFA8AFA8FFFFA9FFA9FFA9FFA9FFA9FFA9FF52522852285228527E
%FFFFA87DFF52FD09FFFD07AFFFAFFFA9FFA9FFA9FFA9FFAF843C603660FF
%FFA8FFA9FFA9FD0AFFCA9FC8C2C8C8CDC8C8C8CDC8CFFD04FFA85228A8FF
%FF53532F5353532F5353FFFFFFA9FFFFFFC3C3CAFFA9FFA9FFA9FFA9A8FF
%A8AFA8FFA8AFA8FFA8FFA853272E2753282E277DFFFFA853A852A8FD07FF
%A8AF84AFA8AF84AFAFFFA8AFA8FFAFFFA9FFFFFFA86035603585FFAFA8FF
%A8AFFFCAA0C9A6CEC8C8C8CFC9C29FC29FC8C7CDC8C8C7CDCAFD05FF527E
%FFFFA8532E53288453532E537EFFA8FFA8AFA9FFCACAAFFFA8AFA8FFA8AF
%FFAFFFA9FFAFFFA9FFAFFFAFFF525228527D59285253FFFFFF52FF53AFFD
%04FFC9C9C2CFAFAFAFFFAFAFAFFFFFFFA9FFFFFFCFFFCFFFFFAF3C603685
%A8FFA9FFAFFFA9FFC9C2C1C8CDC8C8CDCECAC1C8C2C8C8CDC8CDC8CDC8FD
%06FF7DFD04FF53532F53FFA82E532F7EFFFFAFFFA9FD05FFAFFFA9FFAFFF
%A9A8FFA8AFA8FFA8AFA8FFA8FFA852282E28A97D282753FFFFFF7DA8A1A0
%C9C2C2A0C9C3C9A8AF84FFA9AF84AFFFFFA8AFA8FFCACAC3C9C2C2596036
%6084FFFFFFA8FFA8AFFFCA9FC29FCDC8CDC7CFC9C29FC2C2C8C8CDC8C8C8
%CDCFFD05FF52FFFFFFA8532E5353FFA8532E532FFFA9FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFFFA9FFA9FFA9FFA9FFA9FFFFFF2E522852FFA8285252FF
%FFFF7DA0C2C29FC2C1CFFFFFFFAF85AFFFFFA9AFAFFFAFFFA9FFFFFFCFC9
%C3C9C2845A6060C9C9FFFFFFA9FFA9FFC9C2C2C8C8CDCDCDCECFC1C2A0C8
%C8CDC8CDC8CDC8FD05FFA87DFFFFFFA82E532E84FFFF7D532E53A8FFA8FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9A8AFA8FFA8AFA8FFA8AFA8FFA82E272E52
%FF7D2E2753FFFFFF7E75C29FC29FC2A0C9A0C2A8AF84FFFFAF84AFAFFFA8
%FFA8AFAFCFC2C2C2C9C2A77D8399C2A0C9CFFFA8FFFFCA9FC29FA69FA69F
%A7A1A09FC29FA69FA69FA69FA6A8FD04FF7D52FFFFFF7D2F2E53A8FFFFAF
%2E5328A8FFAFA8FFA8AFA8FFA8AFA8FFA8AFA8FFFFA9FFAFFFA9FFAFFFA9
%FFFF7D2852287EFFA8285253FFFFFFA87CC2C8C2C8C2C2C1C8C2AEAFAFFF
%FFAFAFAFFFFFFFAFFFA9FFC9C8A084A8FFC9C9C2C9C2C9C9FFAFFFFFFFC2
%C8C2C2517C5276517C51A0C2A0527C5176527C51A8FD04FF2852FFFFFF7E
%2E5353FD04FF592F53A8FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFA8AFA8FF
%A8AFA8FFA8AFFFA9282E2852A8FF7D2E277DFD04FF52C2C2C29FC2A0C29F
%C2A8AFA8FFFFAF84AFAFFFA8FFA8FFCFC9C2C25960A8C99FC29FC2A0FFFF
%FFA8FFC9C29FC2A0C8C8CDC2C8C8CDC2C29FCDC8C89FC8C8CDA0C8C2C2C8
%7652FFFFFF5353287EFD04FF535328A8FFAFA8FFA8AFA8FFA8AFA8FFA8AF
%A8FFFFA9FFA9FFA9FFA9FFAFFF52522E2E7DFFFFA8282E7DFD04FF7D9FC8
%C2C2C2C8C2C2C1AEAFAFFFFFFFAF84FFFFFFA9FFFFCFC2C9C2C8A0C9C2C2
%9FC29FC9FFFFA9FFFFCFC1C2C2C8C8CDC8CDC8CDC8C8C2C8C8CDC8C8C8CD
%C8C89FC2C2C8A57DFFFFA8532F53A8FFA9FFFF592F53A8FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9A8FFA8AFA8FFA8AFA8FF7E28282852FFFFFF7D2827
%84FD04FF53A09FC29FC29FC29FC2A7AFA8FFFFFF84AFA8FFA8AFA8FFC9C2
%A0C8C2C2A0C899A099C2CAFFA8FFA8FFA7C29FC29FCDC8C8C7CDC8CD9FC2
%9FC8C7CDC8C8C7CD9FC29FC29FC82DA8FFA8285353FFA8AFA8FF53532EA8
%A9AFA8AFA8FFA8AFA8FFA8AFA8FFA8AFFFAFFFA9FFAFFFA9FFFF5328522E
%FD04FF7E2852A8FD04FF8475C8C2C8C2C8C2C2C2CFAFFD04FFAF85AFFFFF
%A9FFFFFFC9C9C2C8C2C9C2C29FC2A0FFAFFFAFFFFFCFC2C2C2C8C8CDC8CD
%C8CDC8C8C2C8C8CDC8CDC8CDC8C8C2C8C2C8C852A8FF7D532F84FFFFAFFF
%FF7E2F53A8FFA9FFA9FFAFFFA9FFAFFFA9FFAFFFA9A8FFA8AFA8FFA8AFFF
%A8272E27A8FD04FF532828A8FD04FF7E76C1C2A0C29FC2C1C2A8AFA8FFFF
%FFAFAF84FFA9AFA8FFFFFFCFCFC9C9A0C2999F99C9FFAFA8FFA8FFC9C29F
%C29FCDC8CDC8CDC8CD9FC2C2C8C8CDC8CDC8CDC2C29FC2C2C851A8FF5328
%53A8FFA8FFA9FF53532FFFA9FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFFFA9FF
%A9FFA9FFFFFF2E2E28A8FFFFA9FFFF7D2852A8FD04FFAF76C8C2C8C2C299
%A076AFA9A8FD04FFAFAFFFFFA9FFA8FFAFFD04FFCFFD04C9CAFFA9FFA8FF
%FFCFC1C8C2C8C8CDC8CDC8CDC8C8A0C8C8CDC8CDC8CDC8C8C2C2C2C8C852
%53FF535359FFAFFFA9FFFF7E2E59FFFFA8FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9A8AFA8FFA8AFA8FFA82852A8FFFFA8AFA8FF522E28FD05FFA87675A051
%76527D7DA884AFAFFFFFFFAFAF84FFA8AFA8AFA8FFA8AFA8FFAFFFAFFFFF
%FFA8AFA8AFFFCF9F9F99FD049FC2FD059FC29FC8C2C89FC8C1C89FC89FC2
%9FC851287D5328A8FFAFA8AFA8FF592F53FFA8AFA8FFA8AFA8FFA8AFA8FF
%A8AFA8FFFFA9FFAFFFA9FFFFA828FFFFFFA9FFAFFFFF532853FD06FF7D52
%277EFD05FFAFAFFD05FFAFAFFFFFA9FFA9FFAFFFA9FFA9FFA9FFAFFFA9FF
%AFFFFFFFA69F9FC29FC29FC29FC29FC29FC8C8C8C9CF9FC8C8C8C1C8C8C8
%C2C8C87C527E2F59FFFFA9FFA9FFFF7E287EFFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFA8AFA8FFA8AFA8FFFFA8A8FFA8AFA8FFA9FF53287DFD06FF7D
%592859FFA9AFA8FF7D53FFFFAFFFFFFF597DFFFFA8AFA8FFA8AFA8FFA8AF
%A8FFA8AFA8FFA9FFA1C2A0C29FC8A0C8A5CDC8C8C7C8C8C8C7CDC8C8C7CD
%C8C8C7CDFD05C8CD7653A8FFA8FFA8AFA8FF592E7DFFA8AFA8FFA8AFA8FF
%A8AFA8FFA8AFA8FFFFA9FFA9FFA9FFA8FFFFFFA9FFA9FFA9FFFFFF52A8FD
%06FFA87D7DFFFFFFA9FFA87D7DFFA9FFA9FFFFA852A8FFFFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFFFFFCF7D277DFFFFFF7D527DCFFFCFFFCFFFCFFF
%CFFFCFFFCFFFCFFF7D7D7DFFFF7D28FFFFFFA9FFA9FFFFA82784FFFFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9A8FFA8AFA8FFA8AFA8AFA8AFA8FFA8AFA8
%FFFFFFA8FD09FFAFAFA8AFA9FFFFFFA9AFA8FFA8FD05FFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA9FFA87DA8FFA9FFA87DA8FFA9FFA9FFA9FFA9
%FFA9FFA9FFA9FFAFA959A9FFFFFFA8A8FFA8AFA8FFA8FFA8FFA8FFA8AFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFAFFFAFFFAFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFFFFFA9FFAFFFFFFF
%AFFFA9FFA9FFA9FFA9FFA9FFA9FFA9FD05FFAFFFFFFFAFFFA9FFAFFFA9FD
%05FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9A8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFFFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FFA9FF
%A9FFA9A8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8
%FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8
%AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFA8AFA8FFFFA9FF
%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF
%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF
%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF
%A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF
%A8FFA9FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator CC 2017 (Windows)"
   xmp:CreateDate="2021-01-05T14:11:07+02:00"
   xmp:ModifyDate="2021-01-05T14:11:07+02:00"
   xmp:MetadataDate="2021-01-05T14:11:07+02:00"
   xmpMM:OriginalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
   xmpMM:DocumentID="xmp.did:ffd81b42-9f4c-5a4b-8f02-8c31ea08dc66"
   xmpMM:InstanceID="xmp.iid:ffd81b42-9f4c-5a4b-8f02-8c31ea08dc66"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Basic RGB"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00"
   pdfx:CreatorVersion="21.0.0">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">titans_stickers_cargo</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Kroshka-looser</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="140"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9E5e0OxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxVvFWyjgVKkD3GKVuKHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq3Q0r2xS1ih&#xA;2KuxV2KuxV2KuxVFwWSSRK7ScS9Qgp4bb5EyZAIeWJ43KOKEZIFBCzFC9IZZPsIW9wMFppELp8tK&#xA;yMsY9zU4ONPCvEFknUtKfuGDiK2Glv7ZZfRh9NZSvqcAQX4Vpyp1pXvgpHH3JTPrXm17p4LLS4Ug&#xA;DMv1y8nCigNA6wwrIzA9QCyfRkhGPUrxlM54a20c5CrKaLKEqFLU3Kg9sET0SdxaFybF2KuxV2Ku&#xA;xV2KuxVbeXrafo2o6kkayS2cDSRq9SpIBO9PllWaRjG3K0eEZMsYnkSArmS1vbeO/sHWa0mUMrpu&#xA;Ae9adPfDjmJBhnwSxyMZCiFPLGhU+rz8eXptTxpgsJoqWFDsVdiqJQRQQCeUBmc0iQmg+ZyJ32WU&#xA;hEWVo1C6ILCRTxCs0UacgFINd/8AJ774OENfiy71WSP1Y2ZkEVwih2Vd1ZT3GILaDfPmg8mh2Kux&#xA;V2KuxV2Ko61q9m6n/dZ5Kf15CXNlzC/lDNGBMTVfssOpGDcIEgRuptcWEBUcUVnNEMhFSfAA47le&#xA;IdEPd6zMiRmCGW59VzGotwKKQaEsWK8QN/8AbxEUGRQ0UmvTRtJcwQ6eP3TKHf13oJCZlcD01H7s&#xA;AKQxoxPUAcpbIKA1NNFkaaa/vZ3tzUtD6rRwoGjEZHwcNqAn4mO5PtSyMJdzDxAm1paTLEi2lktv&#xA;Ci0jLkIAp32C1NMga6lkBI9FcQAEetdVP++4F/Cp5fwwX3BkId5buvXdVURMkKfZBBr8ziKZFCZJ&#xA;i7FV6rGI5ZppVgt4VLzTSEBVUb1JOAmkgOebSltra5N4BDdp6lu/BqOpANR4bMOuY2XVwx1xGrcn&#xA;HpJzvhHJpJtLegW+j36cqr+vIR7Qwn+IMpaHKP4SuIs+19bnw/eL/XLBrMX86PzDD8rk/mn5F0kR&#xA;RVYMro9eLoeSmnXfL4TEhYaZQMTRSzzZf6lp3k3UrzTLEaleUERtWRpV9NyFkZok+J1VGJIGRmL2&#xA;bMBqQN1vzeV+Wdf81eWvQuxbyQWt0EM1rKr+iXYf3RL/ALYA23qOh3BzVzvFI8P0vaYhj12EDLtk&#xA;r4+/3HuL1eHzlZSRF41itGArJ6hG3j8R4rmp1PbWY7QiB9roT2Zwc90ovfzJ021lNLxrmZdjFAvP&#xA;8B8OYePUawy4uIj38vlybBo4kVX6/wBaM0Xzo+rz8LvRZ7WFvsXoK0Ne5U0/j8s3OLtqMKGQi/L9&#xA;Ti5uzq3BZAbPmvO3cTJ7dR9GbnDqseUXEgh1s8Uo80NmQ1I482FuECkSRNGCxIAO1egPhlayux5h&#xA;SWUl4fUnCF0Mboi1YcexB5e/bDTWJcrK+yMZKMrM5SFhKWJoBUcQAfliWWKrHuQeTZOxV2KuxVsA&#xA;k0AqT0GKUVbWUpkVpUpGNzy2yJkyEUa7xAFOY4HbggHTw75WkkJfJps0qSwxu6W0iFFC/u5EDClU&#xA;dSCCOxyziHxahA3tySjUNPs9EgfUk0sXEsZJ+sTP6jqZXDMeTF2ALKv3DwGWQHEatjkJiLpjPmLW&#xA;/wAxdS0WObyoqC69dknigERlWMKChpPVaFian5e+WeHCJqTHDMyDM7bSwdIt49XmI1aS3T606MWR&#xA;Jyg5lB04h60rlPiG9uTYcUeqQXv5Z+WNRuILjXLiXU2tm5RRjlGnjxYBjUfTlpzy6CmMMXD1tk1x&#xA;cNK5PRP2U7ADKQKbCbSbzbr13omk2/6PQNqmpS+jbMQDxA2JAOxNSAK+OYmqymIocy7rsbQwzzJn&#xA;9EBZSfUtL/MHy/ZHWzrRvWh4vd2jlmjCkgHiG+EjxoFPhmNKOSA4rt2uHPotTPwvD4b5Hr+Pmyq2&#xA;vYdR02z1OFfTW8jDmPrxbow+g5sMM+KNvM6zTnDllA9Cuy1xVnmkXlrpBaERnTI6rrIZGaY2zrSS&#xA;WIqdjEG5kcTUDbfrWIidxPXk3iZxkTH8Jv5MHt/OJvldLSRbi10e5WPTrhkZS8JiRlEivxJZWUip&#xA;Armo7agcMse24Dteycgz+ITykVPUNSutQuPXn4iTiF/drxFB7A++aLNmOSVl3WHDHGKCHEso6O33&#xA;tlLbT0ayUpotinT4XP3tXOv7MFYYvJdoG8pVoJ3hcMp2/aHiMziLcIGmE+bvy+E/mi686NqXqWrQ&#xA;rGdOdC3xcFhVAeVOAb97Tjs/xZga+fDhl7nZ9nH97Gu/9C3XfJWoTWc9tZyFmZvRrIpjJdQXbiDs&#xA;V4rs1d65ojoZRlY33ru3dvHWxkN9tr79kj8tWd5ocPGeFDOzFxzWvwHZSpIDAHrtmDqY8Z3sOSMY&#xA;kKv5I7UfO94sjRW0CIV2LsS5r7D4cxo6OPUtY0w6lMvy7vdV1TzE81zcO8VrC78B8KcmoigqKDox&#xA;zddk4IjJYHIOJ2iIwx0BzLMXryPIUNdxnVPNqsM6BDDMC0RNQRsynxGRIXYiiuWCBd47vilQ1OHx&#xA;VAIrXxofDBv3MBjrkWnlijh9C3B4H7bt9pqYQOpZgACgh8kh2KuxV2Kq9nMkM3JxUUpUdRXvgkLZ&#xA;RNIh7u1HZ5T/AJRoMhwldlNtQkG0aLGPYVOS4F4lF7md/tSN99P1YaCLK5LuZQVY+ohFCj/ECPpx&#xA;4Qm2/rkirwiVYU/lRQMHCvEoMzMSWNSepOSQ1ih2KpX5t0OfWtET6mSNT01zcWgHVx1ZR79Ke4GY&#xA;mqxGQscw7rsXWxw5Kn9E9iwXWvzI1/V9JOlSxRRmWiXEkasHkoelK0WpG9M189TKQp6nTdi4cOTx&#xA;ASa5XyD022shp2l2GmjraQIjn/LoOR+k5tsEOGIDw+tz+LllPvJXKpZgo6k0GWuKxL8wvzZstA1c&#xA;aFbHnOUAvrmnMQ8hVRTu1DU7dDkTpck8ZlDm5Gn1OGGUDLfCwnyxbW0Wn3C6QZLq0kuC5ZFZwr8Q&#xA;OANOy0zT6/HkyzByx9QFPUdm4dJCMvClcSe/l5Mz0ryhqt9bmZ43thtxE6hC1f5Qan76Zgy7NyS+&#xA;kAfNdT2hhgaG/u3RLeRNXU/AFcDwKfxIyk9mZh0+1pHaeI9WWSRGG1tIGHF44VEi1rRqb9PfOl0k&#xA;DHHEHoA85qZ8WQkd6jmS463VdOl1TSBZ20qRzCT1GV6gPQGgqPnmv7Q00ssKiXYaDURxTuTFGfzH&#xA;oUnGUPGlRTl8UZpX7LD5noc58nPpzvf6HfAYc42r9KtqfmW0vdLmiktil03EK+zKFVg1Qx+Jf2hQ&#xA;eOTzayOSBHD6vx+Piww6OWOYN+l5LfatK1xI8B5RBir1Uij1IIqaeGMMQiBxB2GHUQ3scVJj5e85&#xA;X2kXarazyxXNyhdo4gkilUDt8fMUB4ozAdafMZscGKUY8Udh+pOXNpM0hjlHe65Hmelh6BB+aFxF&#xA;bxy6tp/qwSRrJFPwkty6N0cMwKMD/k0zJjqpgbhwcvYmCZrHOpd2x/anFp598m3UayRyXHrPQR2X&#xA;pM0rsdgqcAykk/5WXjWRPvdbk7BzxO/Dw99iv1/Yn1wiL6bKjR+ogdonpyQn9lqFhUfPMqBsOmyR&#xA;ANDdRyTB2KuxV2KuxV2KuxVekUkleClqdaDElNLWVlNGBBHUHFWsUOxV2Kuu50sdLuNQlge4EQHp&#xA;wIQpck06mgGVZcogLLfgwnJKhzXBhLa21yIXt/rMSymCTd05CvFqdx3ycTbVIU6ORo3DqaEZIhAK&#xA;RX3kC2vfNVrrtrJHFaCRZ7+2aoPqIeVUAFPjI+KtPHvmvnpfWCHo9P22Y6aWKVmVVE+Xn7uifzye&#xA;pM79idvl2zPAecJaW4gtIbi+uDS3sonuJm8FjUsfwGJF7d6Rtu+Stb1S61TU7rUJm/0m+neZz1AL&#xA;sWI+QGwzcxjwgAOqJskl9Afkcr2n5emVNmub6Z69eionf/jHmt1e+T4OfptofFmsksshq7FvnlAD&#xA;aSswobxVrFXYqrpdyBDHIBLEdmjccgR9OQlAEUWcZkGwlWo+VtA1BG4F7B32cR/EhB60Xt/ntmsz&#xA;dk45Gx6fc7LD2rkiKO6FsvIXkexj4LYm8PIMWuGJBYU3Kiinp3XL4aCA3O582qXaGTkNvcjD5Y8k&#xA;tfpqL6Fai8SP0VdY1C+meo4CidNunTbpmX4dDhHJxRmPFxX6u9J9e/LHRda81R+YW1KW2QW/1ZrN&#xA;FUUX0mhpG37C8X+zQiuRlGxTbi1BhIS6gg/EfjdkljbabpdvBa6bbpHHbRiGOZlBl4jxY774YYgA&#xA;xz6qeSRJPNtmZmLMasepOWuO1ih2KuxV2KuxV2KqsEDyk0oFXdnPQDBKQDKMSUt83Q6hcada6XpF&#xA;7cWct3Pwmv7XirIqqSfiYNx3p92YObNZFO10OCFSM+Qj8U2vUdGjVmaTiir6zU5PTqx4hVqfYZmQ&#xA;5OrnzQ2TYNjrilIPMH5j6R5f1qbSZbGSR4PTLT/CyuHQP3IK/a67/LBLS6icRLFwnvBJHy2Y/mcU&#xA;JGM7+DAdd8x+avMEclw01ymmyNxRLMyJAvBgQpPGhbofi3/DNbmObDP1j4cw9nodPotTgAxS4Tf1&#xA;bCf9ia+V/wAy9UtbxLPWpjd6c1FlaQVljB2Dhh8RpTetfbKsWqkD6uTla7sLFOH7ocMx8i9LljVe&#xA;LRsJIZAHikU1DKdwQRm2jKw8NOBiaKnkmClqOo6RpNqt3q99DYW7V9MysAz068F+03XtiLJoCyk0&#xA;BZeW/mJ+cOg3mhXmheXo5pzegRT6hIPSQR1Bbgp+NuQHHcL1zLw6aQkJScXLqIkEReVXmg39ppWn&#xA;6vcJwttSadLOvVhblA7/AOqWeg+RzMEwZEdzimJEQe99EfldB6H5aaKp+1KZ5W/2U706/wCTTNZn&#xA;N5C7DCP3YZJlbN2KuxV2KuxV2KuxV2Kt4qqpaXLiojNPfb9eDiDLhLV/dW+li1jlh9eW6coAKk7C&#xA;p4gA9swNXqp464Y8VlzNNpfEvyDd3EsU7Iv2eoHzzPibDhyG6jhYuxV2KuxV2KuxVMQnp28cY6sO&#xA;b/PtmHnl0cvDHa0NZ7pI3ZpXp9DEfwzGbyulcvbNX9mbiny4Cv45mac7ONqByQuZLjKtsoa4jU9C&#xA;wrgPJI5vFPzC1a4vPMeoQyqv7i6lVXp8RCH0lH/AoMy+xo2ZzJ3vhryDb7QxGOOGAGxgJ31s80z8&#xA;o+d7nyzoYislivBcTPLNBJyVkfiq7MD04qO2YPa2oyQzbx9NbHvdl7Pdl4tThPrPEOfkxzWdWm1P&#xA;WLjUpYjG107M6L8QUH7I2r06Zopy4iS95psIxY4wH8Ip6f8AlhrL6h5fuNPlbm+msrW7/wDFUlfh&#xA;r/kkHNjocliu55L2j0ghkGQfx/eGT5sHmEB5h8peUvMUyT6zBJctHCsEEfJlEQD82ZOJFGfYMa9A&#xA;B41EJSibDKYjIUUJp/5eflvYyK0OgxOQa1nL3H/Cys4yyWbIerWMUB0YJ/zkbxSby9DGAsCRXHpo&#xA;oAUAmIbAewGZGh6tOs6PQvJ8HoeRvLsXjYxS+P8AeqH/AONsxshucve3wHoHuTO5uLCxtPrmoTej&#xA;ATxQAVZz4KMiASaDHLljjjxSNBT0fVdH1mZ4LMTpJGgkJlUAFSabUJxnGUebXp9VDKajazTNa0LV&#xA;L6SxtJJRcIGZWkChG4mhpTc+OGUJRFlGHV48kuGN2oXnmfy3Z3c1pMbgyQMUldUBUEGh74RimRbD&#xA;Jr8UJGJvZE3ereX7O0hvJrwtBcryt0jWrsO+3anvgEZE1Tbk1WKERInY8m9N1XRdTS4e3eWAWih5&#xA;zOoUKpqa/gcEoyjzXDqseS6scPO0Gvm3yq0oi9WdULcRcslIyf1/hkvCm0jtHDdWffWydjTpmYcW&#xA;UxncSA7EHK+NzuFjGuedEtGktNGjEkyni1445bjr6a9/nmJHVRlkEejtM/ZWXHpZZR9YFgfffwSS&#xA;KHzRq8jG9vZooyassjEfdECoH3DJdo9qYdLHaPEfs/0zzGk0Wq1JuUjCP2/JOYYZo9atpuReOxt1&#xA;CNJ8XxVIHXvQbnOSh2gY4eMf3ssh+AoH9g+L1MeMTOIf3XAL7ydxz+/4J/He22o2dvqdq3K3vEDr&#xA;3ow2ZT7gimdtC635uosEWORaySHYq7FXYq7FXYqlHnvUdTsbuze1maGNoyDx6EgjqDt3zUauREtn&#xA;qOxsGPJCQkLNojyhrseo2Bik+C8t2ZZUJ3cE1Ei+Iau/gcGOdhx9fpTimaHpPJdomtQX0l5pc8ix&#xA;ahBdS+nGdhIgJHw+JFN8ytNlHItGv0MoxjOI9JiPgmDwyo3F1IOZtunpFWFrIZRIwKou4rtU5GRZ&#xA;RDDPOf5Uyazq76jp9zHAbghriKXkAG6FlKhq8utCOvfK8WXLikTjIo8wXZnJps+KMNRGRMPplE71&#xA;3dzy+aw1PTobjT7iJoWeRHcsm4eIOo4k/sn1D89sx9fqsuYDjjVe93nYmi0enlKWLKJGQ5GUbHw2&#xA;+5T0iz1DUdUttNWNRLcyCJJuXwAnuw+0B9+a2MOI0Hos+o8KBnIbDuex+UPKQ8sWt4JrlLi8vOKs&#xA;sQPBFSp6mhJPLwzaabTmG5eI7Y7VGpoRFRj+lN8zXROxV2KsY/ML8v5POM+iTJcxRQ2HqJexSSGN&#xA;3RylBGwSUA/D1IyeLMcd0OaMmITq+jKjBb28FtZ239xaQxwRCvL4UHECvfYZWL5lme4JZ570+7J0&#xA;u9htzdW1g5M8AFarVDuB2PChyeCQ3He67tPHL0SA4hE7j5Kt151s7nSL9rOGeOeKD4DIgX4pDwAW&#xA;hO6k1wDARIWyn2hGWOXCCCB97FrW01bRH0XVpoEW3Bpyi5GQxyEs3qA9+LkCmZBIlYdbCGTCYZCN&#xA;vt3711/Y6jcaj5ke1kZI0LPLGFqJUElaA+3XGMgBG1y45ynlMT+3dEKGs7nRddSxebTIoBG8Sjm0&#xA;ToXD9f8AKPIE5HmDG92weiUMvDcAPlz/ALXW8uva1+l7SKe4uLZrblbmZOFWWWNuPhUryA3xIjGi&#xA;sTlzccQSRw7X7x+11xqYu/K1v5eh06f9JoyoU9MgKyNUv8271Hc4iNT4r2WWbiwDEInj9yf+YdQm&#xA;0Tyra2POt9LCluGHYKgEjD5dB881WszUDXV7HsLRcco8XKAF+9Q8t6NBommfpG+4x39zRLdZKAoW&#xA;HwqoP7TdTmFL9xhlkI9QDm9o63x8nhxPoH2qU3JavN8QG5lGzD3OaXBqISvw5cBPOE94H4uLLGeR&#xA;F+Y5qdvp99qVleRW7/vbiGX03JoUYoVjB+mlcyNLosc8wMoyhKJ4q/hI8mOryHgMYkHar62kn5T6&#xA;jdqLzy/eq0YJM1msmxWVdpEAO+/X6DnV5c0OMAHd02h0WeOEynEiAO1+f6PPzZuQQaHqOuSZtYod&#xA;irsVdirsVeJ/nb5o1mx/MFoLS8kFtbQQH6oWYwl2Uklo68SSG69ch4MZxqQcvDqp4Z8UCx+H8xrO&#xA;eAw6lYclYUkVCrow71R6frzCl2dIG4yd7Dt+EhWSHy3+wst8v6RreuaCl75W0w+irelbC4kjhjHA&#xA;0YjizkcfDb2yv8rPj9Z+Ibj2vhGI+GKI2ET+y028p+c/zGtpNKn1m4tZNIl1k6Bd2gR2uIp/iQcp&#xA;CegcDfkczo4wBXN53NmGQ8VCPu/te04Gp2KsR1OMs3Opoko5JsVZWcBqg+2+ZkXSZhv8V1np+npf&#xA;QTrbRLIjqQ6oARv4jBImiyxY4iYNDmmV2tLmQf5Vfv3yqPJ2kuajhYtgEmg3Phil13JZafB9Y1Kd&#xA;baP9lTu7eyqNzgFk0GGXJHGLmaXyJGBHJE3qQzKJIn8VYVGILKwRY5FYOuFKf5Q3OxVZNcQQKHmk&#xA;WJSaBnYKK+FTkZTEdyaZRgZchakmo6e7cUuoWY9AJFJ/XlZ1GMfxR+YZHDMdD8lzXtmrKrTxhm+y&#xA;pdQTTw3wfmsX86PzC+FLuKoksTmiOrEdaEH9WThmhP6SD7ixMSOYQmuarFpGi3+qzI0kVhby3Lon&#xA;2mWJC5A6+GWgWxeeaX5s/TXm6w/TOnGMF1tIVhlWWCG6eD65Gjs3BpCYurKtAwAOUnAZT4jyHJ2E&#xA;daMeDgx/VL6j+gMX/P8A1q4m8wWWkq5FtaQCdkB2M0rMKkeyKKfM5s9LAcJLp8x3Ytov5leYdP8A&#xA;q9vdyDUNPjarwzGkrKFNFE1GNA1G3BO1K0zU632dw5LlD0TPy+Tk4O0Jw57h7z+XetWeuaD+lreB&#xA;oDNI0bo5UsDHt+yT41yvRaGemhwTlxH9DPJmGQ2BSTeetCu9P1GPzJpYIKsHuQorwcft0/lbo39u&#xA;DUYzE8Yd/wBl6qOSBwZPh7u79Se6ZqltremrqNuOMg+G7g7o/f6D2P8AbmZgzCYdJr9HLBPhPLoq&#xA;ZkOA7FXYq7FW1+0Pnil88fnv/wCTK1D/AIxW/wDyYXJY+TKXNhs2h3UWjWutvvbXU89rGKdGgWNy&#xA;a/5Xq7f6pyd9GNPff+cbtQ9bynqFixq1peF1Hgk0a0H/AASNlGUbtkUs80W8tpa/mLZQLSbS9Rsf&#xA;MVmQaVabhJKw+XptU4jopezJqFm1rFdGZI4ZkWSNnYLVWFR1PgcolMR5mmyMDLkLQVx5q0CCvK8R&#xA;yO0dZPxUEZiz1+GP8X6XJhoc0v4f0IG34T3MZH2JGBHyJrm0Erjfk6Dg/eUe9ZQxy0PVG3+g5Lm1&#xA;8ij9QFLpvcA/hlUeTs5c3QWgkiaV2KovcAsT9AwTnwphDiXW0umozEXa8iCFbZSte/xVFco/NQPU&#xA;OR+UyDoXlPmGUyazdj6xJdLHIyLNKeTEKadtqeFM2+P6Q8VqjeQ7k79WfeVRfN5ZjS8iaMwUa2kb&#xA;o8Mm60PtX9WYmWuPZ3/Z/F4QEhy5e5G5Fy1vmLzXJpN7HbrbCYPEJeRYr1ZhSlD/AC5ptZrzhnw1&#xA;e1u40ehGaPFdbtjzPcNb28qWoYylC45H4VYVJ6ds1Z9oDZHCNvNl+QFkGXJAecL03egxuU4cbpRS&#xA;tf8AdbnDm1x1On4iKqdfYW/QYuDMR/R/SGMaF/x0o/k3/ETmm1H0O01H0MiltY5Z4ZmJDQcigFKH&#xA;kKGuYQmQCO9wIzIBHenegf30v+qP150Hs79cvc4Gt5BNL2zt72zns7lPUtrmN4ZkP7SSKVYfSDnV&#xA;uveXfk55GgSCPzJcXst7Gk92NGglAAiQN9UM7Efbkkht1WuwC/OuWTl0YxDz384Lr6x+YWqUNVh9&#xA;GJf9jCnL/hq5n6cegONk+pK7ryXdReS7LzUQWiuLmS3KnoqLQRuPm6up+jDxgzpeE8Ns5/ILzKbf&#xA;Vrry/M37m+U3FsPCaIfGB/rRiv8Ascp1UNrZ4Zb09b+tzCVmf4g1Q8bbqR4UzG4RTMSINoKw0Cys&#xA;9SF/pNwbFJCPrti1DG61r8Nfs09vwzF/L8Mri7SXaJy4+DIOIjkeo/Wipyhmcp9gk0zLDqip4UOx&#xA;V2KqttGZJlHRR8THsAMBOzIB8tfmVr1rr/njVtUtDW1mlVIXHRkhjWFX/wBkI65bAUFJ3Z75t0A6&#xA;V+QWhR3EYF093HdsSKFTcrK4H/ItlByuJuTIjZPP+cZ4aaRrc2/x3EKe3wIx/wCN8GZYJj5+ge18&#xA;/h1+GDV9K4Tj/fjWs5DK3iCk67e2aftUyGIGJI9TteyxE5CCAdkv7AdgKD5DYZzRNvRAUn8Pm36t&#xA;FGlnp1rDIqgNKV5MWAoW+Hh1zYx7Q4AOGEQXXy0HETxTkQybSCZLi3Y9SORp0+zXOrBvGD5B4yMf&#xA;3xHmV+px8Lx/BqMPp6/jk4HZr1EamURffE0T/wA8anIRc27AKx5400u5edFeKBSyBh+0eg+/MfV8&#xA;IgSXK0nEZgBgFxNYySpHdIgeQ/DLX0yD0qXFKfTnP4NJPNZjG6+DvdV2ji0xAnLh4rrqELrPl9dP&#xA;YcpGjLcSqycWBVv2g6mhH0Zuj2xPF6ckd3mT7MY83qxT9PnuyHRPNOqqYrORoLmKgUKKkhR4BRWg&#xA;A981ODtDNdGi9Ln7OwiPpBjTLLmBPXjjQBXcDmAaqCfDOjiTW7zcgL2Yd53u7e41kCE19CMQyVBF&#xA;HV2JG/zzle1Mgll26CvtL1HZmMxxb9Tf2BLP8Yz2yrbxeXdWvEiVUFzbRQNE5CgEoXmRqV23Gan8&#xA;kJbnJjjfQk3/ALlxs+QxmRwnn+OqF1Dzzc6jo4trbyvrZYXAkLGG240VGUja4JrU5scWCEMJxnJj&#xA;4uK+Z7q/mscWYwycRjL6a6d/vUrPV5rIQ3v6MvLmVhRrCBI2uFLKa8laRU+Hv8WYc8IlceKI8zdf&#xA;c7DUZP3XFR3Rj/mBOjpG3lbXA8leC+jbb06/8fGVjs4Hfxcfzl/xLrRlJF8Mvs/WyPyb5uW8vp4b&#xA;vSr7SEEXNbjUVgiiYhgOClJpCW3r0zbdkYoYZSJyQNjof1gOPn4sgAEZfJM/PHnC00PyhqusW0qX&#xA;MtpDSJI3BPqSsIoyeNdgzgnOhx5sc5UJAn3uHPHKIsghR/KeWGX8uPL7QxtEgtEQq3UshKu23ZmB&#xA;Yexy6fNrHJ88+brs6n5v1W4hrJ9YvZRCBuSvqFUp9FM2mMVEOJI2X0d/g20k8hp5WloE+prAXHQT&#xA;KoPqf8jfizW+J6+JyeH00+efy7kePzzobIeJN3EpI8GPFh9IObHN9JcaHMPo+6AFxJT+Y/rzAHJu&#xA;PNSwodirsVdirsVYP+c/nH/D3lj9EWr8dW1pSrkfaitejn2L/YH0+GMRZZ8g81/J78t5fNGsLqF9&#xA;ERoNg4acsNp5BuIV8R3f2+eSyTpYh6X/AM5Hz+n5JsoF2MuoR1224pDKf10yvFzZSX/8452vpeR7&#xA;qcje4v5WB33VYo1H4g45eax5Jh+btuI5vLepnYQ3slm/+rdwNT6OcKZr9fDiwSHx+Tm6GfDmj8mO&#xA;5yb1LsVej6AtZIj/ACxV/AD+Od1H+7HuD5/Afvpe8ovWo/7uX5qf1jJ4iurjyKyb4rO2f/JK/dtj&#xA;1LZA3AIXVrO8utGWGyX1C0nKdQQDReg3+g5ru0cc5xqIdn2dkhCdyLDLyxdD6V3AVPZZFIP0VzQ+&#xA;vHLrE/J30o480aNSj80q1qYkxw16Dkf1D+OUzkTzciEQOTIPy4sqTXmpuNrdPShJ/nfc/cB+ObTs&#xA;nFcjLudV2vmqIj37swgdnu42Y1YsKk50J5PPDmwLzB/x3L7/AIzP+vOK1n97L3l7HSf3UfcnOif8&#xA;cyH/AGX/ABM5ps/1lxtR9ZRcUMUS8I1CrWtB4nKzInm1GRPNj+m/8dxv9aT+OZmX+7+Tm5f7v5Mg&#xA;eGJ3SRlBeOvBvCvXMMSI2cISIFJV5k/uIf8AWP6syNNzLk6XmUq0yOOW7EEqh4J1eOaNt1ZGUgqR&#xA;4Zk5SQLHMN+oiDA2jfIHmeW0/Jye+kRYW0eO5tbfjUVMJKRcqn7RYgH3zvoDiI83jyaBebflH5e/&#xA;TPnK2klXlaad/plwT0rGf3YNfGSm3hXNhnnUfe42MWX0Na3Ekt7UseJrRe1MwJCg3g7vnH8vLVZP&#xA;zH0uFQOMd2zKN9hEGcf8RzPyn0Foh9T6EuDWeQ+LH9eYQ5Np5qeFDsVdirsVVIAhmTmaLyFcB5JD&#xA;yvVPy01Dzj+Z+uza/NNpun2noPZrT1Dc2oBU+jJ8KIBwqwoSpah33xE6GzMjd6haw2en2MOnaZCL&#xA;TT7ZQkMCbAAdz3JPU164gd7EyeX/APORkk50by9EEZ0Mk8kkgBIUgIqBj25czTDj5lJ5M4/JXT3s&#xA;vy30pZEKSzetNIpFD8cz8eoB+wFyvId2ceSJ/Nm1M3kW/uE4+rpzQ6hFzIArayrKwqe7IrAfPK5Q&#xA;4gY94pnGXCRLuNvK/LuqeYvMfmOby/a2MWk38EP1iRdSaYP6fwkUjSMb0kU0Zhtmpj2IALlL5B2s&#xA;u2Cfpj82a235ZaxcOFvfMyxs3WKwtEUD5STNP+rMmHZeGPQn3n9VONLtPNLkQPcGW6Cmm3N7L6c6&#xA;z3Glt6TqslWjkZSpEqqacuPZhmzycg6bTxNklONQiM1o6qOTLuoG+4yEDRbc8eKJSqxvbS+0tmtJ&#xA;47kW07wzGJg4R13ZG4k0Za7jLD9TDCDwbtKzKaqSD4jbCzVjds6enOizxnqsgByueKMhRDOGWUTY&#xA;KXz6D5XuHLzaaC53JWSRf+IsuYh7Nwnp97mR7SzD+L7kTb2+n2Vn9T0+EwwFzIyli3xEU6kk9syM&#xA;GnjiFR5OPn1EspuXNu5vINN0+W/lKmUI/wBUib9uRVJUbeJFMr1epGKBJ59PMstLpzklQeZ32paj&#xA;eXs9y1qFaZy5UHYFjXaucdlyGcjKub1eKPBER7kw07WdejtFih071UjJHMEncmvb55hZcYuyWjLC&#xA;JNk0ijrfman/AByf15X4ce9h4cO9fpdnem6S5ZfRlcFnEiOEUuKkbVOX3GQ4SQB3/wBltuTJHgrm&#xA;mD3OpLLJGsIkEZADqrBWqK1UsV/HKZYoA/Vf49zTGMCLukFdrfXwWOWBovTY0+A7+9QWFMnjMY8i&#xA;3YzCO4KHsdNvoL2KSSEhFarEUO30E5PJkiYkAssmaJiQC83vF816D5V1/SNRhki03UdUilsyxBQr&#xA;WV5KUJ48mSEgHO97M1mHLQjIGQjyeT1OKUbsbW9O/KTy/wDofyaL2VaXmtMJjtuLddoh9O7f7LMz&#xA;NLil7mmAqPvZrYf71x/T+o5VLkyjzeI/lZaB/wA12ZVolq144pWgFHj/AON8y85/dteP6ns7GrE+&#xA;JrmMzaxQ7FXYq7FXYqq/Wp/T9PmeFKU26fPBQTZUsKEPrGk6LruktpOt2pvLBnWT0xI8ZDLuN42R&#xA;tvnkSN7DIFM9PmtbCzitIjNJFCoVGmcySUGwBdiWb5k5HgLLjXX02mahZT2N7bme0uUaKeFgCGRh&#xA;Qg7jHgK8YSPRPLHlXy/JNNouniG7uF4TXkrvNOU2+H1JWdqfCNq02yVHqgy7k1t5Uj5q4JSRSrFG&#xA;KsK+DAgj6MMhaAaQOk6NoOiRXiaPavbtqEv1i8lkmlmeSU9WZpnkap+eCj1SZI2C4khfkh+YPQ4S&#xA;LYg0gtJ0Py5pGoXupabaSW15qLvNeATztDJLIeTOYWcxA17hMiYllxBEZNg7FXYq7FVZJoiiRTwx&#xA;zRqagOoYivWlcryYoy5i22GWUeRpjPl38vdD0HWrzVkv7vUfrIdYLG7bnDCHYMaAj4iKUB8Pvys6&#xA;eB/hj8g2fmJ/zpfMpprmh2msWkUUNy+jXVvMJ4bqzRNyFKlZI2BV1IboR1ocH5THd8ET8AxOeR5k&#xA;onSrGw0rTLbToQb1bZAhu7ukk0jdSzse5JyP5HCdzCP+lC+PMciUV61v/wAskH/ADH8hh/mR/wBK&#xA;F/MT7z83etb/APLJB/wAx/IYf5kf9KF/MT7z83evAP8Aj0h/4AY/kMP8yP8ApQv5ifefmker+U7L&#xA;VNYi1P8ASt5YxUhF5psBAim9B/UTi1C0fI7PxI5DbD+Uxjbgj8gvinvKJ81eXPL3miyhtNQSa3Ft&#xA;MtzbXFqwSSOVKhWFQyHYn7SnJ49PHGbiAD7mMshlzTKd1ZYkDtL6aBDK4UMxH7RCBV39gBlsRTCR&#xA;tbBJ6cqvSvE9MJCAUn0XyZ5d0bzDe69p1xeQXOoSPLd2xaN4HMjFyArIxUcjtxYfdgPERTIEJtIw&#xA;aRmAoCSQPDJBiVuKHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FVT/AEf/AC/wwbp2d/o/+X+GO67O/wBH/wAv8Md12d/o/wDl/hju&#xA;uzv9H/y/wx3XZ3+j/wCX+GO67O/0f/L/AAx3XZ3+j/5f4Y7rs7/R/wDL/DHddnf6P/l/hjuuzv8A&#xA;R/8AL/DHddnf6P8A5f4Y7rs7/R/8v8Md12d/o/8Al/hjuuzv9H/y/wAMd12d/o/+X+GO67O/0f8A&#xA;y/wx3XZ3+j/5f4Y7rs7/AEf/AC/wx3XZ3+j/AOX+GO67O/0f/L/DHddnf6P/AJf4Y7rs7/R/8v8A&#xA;DHddnf6P/l/hjuuzv9H/AMv8Md12d/o/+X+GO67O/wBH/wAv8Md12d/o/wDl/hjuuzv9H/y/wx3X&#xA;Z3+j/wCX+GO67O/0f/L/AAx3XZ3+j/5f4Y7rs//Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:34333844-fbd9-9249-a56b-597a21c162c7"
    stRef:documentID="xmp.did:34333844-fbd9-9249-a56b-597a21c162c7"
    stRef:originalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:c34f1c8f-02fe-d843-a83c-f0ce1fe52db4"
      stEvt:when="2018-04-28T20:30:28+03:00"
      stEvt:softwareAgent="Adobe Illustrator CC 22.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:34333844-fbd9-9249-a56b-597a21c162c7"
      stEvt:when="2021-01-05T14:11:03+02:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2017 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:ffd81b42-9f4c-5a4b-8f02-8c31ea08dc66"
      stEvt:when="2021-01-05T14:11:07+02:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2017 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="2134.730600"
    stDim:h="1163.073300"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="R=255 G=255 B=255"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=204 G=204 B=204"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="204"
         xmpG:green="204"
         xmpG:blue="204"/>
        <rdf:li
         xmpG:swatchName="R=242 G=242 B=242"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="242"
         xmpG:green="242"
         xmpG:blue="242"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                            
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1163.07 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1163.07 li
2134.73 1163.07 li
2134.73 0 li
cp
clp
2134.73 1163.07 mo
0 1163.07 li
0 0 li
2134.73 0 li
2134.73 1163.07 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.87451 .913725 .94902 rgb
f
534.667 500.262 mo
534.558 500.488 li
534.615 500.369 li
534.667 500.262 li
cp
1 1 1 rgb
f
1082.95 817.014 mo
1050.68 806.29 li
1050.55 806.044 li
1049.64 804.013 1049.73 801.422 1050.23 798.87 cv
1053.47 793.306 1053.95 786.442 1051.32 780.378 cv
1019.19 706.316 li
1016.88 701.005 1012.44 696.915 1006.96 695.056 cv
1001.47 693.196 995.459 693.742 990.399 696.557 cv
917.228 737.264 li
910.118 741.219 906.018 749.002 906.777 757.102 cv
906.803 757.385 906.856 757.66 906.894 757.939 cv
905.035 761.003 903.049 763.943 900.268 765.921 cv
898.597 767.109 896.787 767.94 894.937 768.674 cv
851.835 765.504 li
842.262 764.798 833.489 770.823 830.703 780.003 cv
830.167 781.77 829.88 783.56 829.826 785.336 cv
823.2 788.277 818.458 794.605 817.732 802.115 cv
816.813 811.639 822.601 820.534 831.681 823.551 cv
835.739 824.899 li
837.972 828.69 839.067 832.856 839.896 837.342 cv
817.811 903.794 li
814.239 914.545 820.058 926.156 830.808 929.729 cv
941.626 966.558 li
943.339 967.127 945.121 967.467 946.923 967.57 cv
1018.57 971.668 li
1018.96 971.69 1019.35 971.702 1019.75 971.702 cv
1028.53 971.701 1036.4 966.079 1039.2 957.658 cv
1064.35 882.005 li
1064.47 881.952 1064.6 881.901 1064.72 881.849 cv
1067.31 881.958 li
1074.71 882.268 1081.71 878.568 1085.61 872.272 cv
1089.05 866.722 1089.62 859.915 1087.26 853.934 cv
1092.79 850.517 1096.52 844.57 1096.95 837.789 cv
1097.55 828.487 1091.8 819.953 1082.95 817.014 cv
cp
f
1019.74 951.189 mo
948.095 947.092 li
984.923 836.273 li
1056.57 840.371 li
1019.74 951.189 li
cp
.886275 .564706 .329412 rgb
f
948.095 947.092 mo
837.276 910.264 li
874.104 799.444 li
984.923 836.273 li
948.095 947.092 li
cp
.976471 .686275 .470588 rgb
f
984.923 836.273 mo
1000.2 858.584 li
1068.18 861.465 li
1056.57 840.371 li
984.923 836.273 li
cp
f
874.104 799.444 mo
838.149 804.086 li
959.389 844.378 li
984.923 836.273 li
874.104 799.444 li
cp
1 .776471 .623529 rgb
f
874.104 799.444 mo
945.748 803.543 li
1056.57 840.371 li
984.923 836.273 li
874.104 799.444 li
cp
.937255 .505882 .215686 rgb
f
945.748 803.543 mo
976.677 803.311 li
1076.48 836.479 li
1056.57 840.371 li
945.748 803.543 li
cp
.976471 .686275 .470588 rgb
f
945.748 803.543 mo
925.233 791.47 li
850.33 785.961 li
874.104 799.444 li
945.748 803.543 li
cp
1 .776471 .623529 rgb
f
958.286 868.829 mo
956.566 873.753 947.699 875.136 938.48 871.916 cv
929.261 868.697 923.183 862.095 924.902 857.171 cv
926.622 852.246 935.489 850.863 944.708 854.083 cv
953.926 857.303 960.005 863.904 958.286 868.829 cv
cp
.788235 .490196 .286275 rgb
f
950.868 763.054 mo
927.2 755.188 li
1000.37 714.481 li
1032.51 788.543 li
1012.85 782.012 li
994.696 836.648 li
984.923 836.273 li
932.131 818.729 li
950.868 763.054 li
cp
.360784 .745098 .776471 rgb
f
931.567 878.976 mo
898.814 865.358 li
905.019 850.436 li
937.771 864.053 li
931.567 878.976 li
cp
.788235 .490196 .286275 rgb
f
957.723 866.849 mo
955.72 871.665 946.788 872.531 937.771 868.782 cv
928.755 865.034 923.069 858.091 925.072 853.273 cv
927.074 848.457 936.007 847.592 945.023 851.34 cv
954.039 855.089 959.725 862.032 957.723 866.849 cv
cp
1 1 1 rgb
f
930.897 876.152 mo
898.145 862.536 li
904.349 847.613 li
937.101 861.23 li
930.897 876.152 li
cp
.360784 .745098 .776471 rgb
f
1887.29 359.065 mo
1878.32 351.985 1865.87 351.454 1856.35 357.724 cv
1849.91 361.952 li
1846.49 364.195 1842.29 364.807 1838.38 363.632 cv
1747.15 336.225 li
1740.98 332.414 1735.79 326.951 1732.84 320.411 cv
1731.96 318.456 1730.69 315.338 1729.76 312.016 cv
1737.78 278.743 li
1739.6 271.184 1737.22 263.229 1731.55 257.913 cv
1729.67 256.157 1727.53 254.778 1725.24 253.802 cv
1579.01 189.902 li
1574.41 187.892 1569.25 187.546 1564.43 188.923 cv
1476.59 213.983 li
1427.2 177.537 li
1424.8 172.565 1422.94 167.332 1420.58 162.356 cv
1420.32 160.339 li
1418.75 148.147 1408.72 138.899 1396.45 138.319 cv
1396.36 138.315 li
1383.66 137.757 1372.59 147.212 1371.18 159.846 cv
1367.81 189.829 1369.31 197.546 1369.87 200.459 cv
1370.02 201.212 1370.28 202.329 1370.69 203.699 cv
1370.55 206.535 1370.48 209.377 1370.08 212.213 cv
1369.96 213.111 1369.8 214.003 1369.63 214.893 cv
1363.07 222.101 1358.98 231.57 1358.75 241.885 cv
1358.35 260.287 1369.81 276.106 1386.3 281.96 cv
1388.82 285.284 1392.17 288.373 1394.98 291.311 cv
1397.66 306.814 1408.72 319.116 1423.2 323.736 cv
1424.72 326.347 1426.12 329.078 1427.19 331.887 cv
1420.18 360.947 li
1417.73 371.133 1422.94 381.612 1432.54 385.808 cv
1578.95 449.791 li
1583.55 451.8 1588.71 452.146 1593.53 450.769 cv
1669.92 428.977 li
1673.24 429.168 1676.55 429.626 1679.85 430.143 cv
1687.13 435.458 1696.1 438.434 1705.51 438.172 cv
1711.33 438.498 1717.69 437.344 1723.91 435.355 cv
1730.03 437.658 1735.98 440.438 1742.13 442.601 cv
1750.33 451.565 1762.28 456.741 1775.07 456.015 cv
1775.76 455.976 1776.46 455.919 1777.16 455.845 cv
1793.79 455.51 1813.89 442.844 1822.72 433.922 cv
1825.21 431.4 1827.32 428.69 1829.05 425.866 cv
1830.33 425.545 1831.6 425.183 1832.85 424.757 cv
1838.17 424.904 1843.54 424.173 1847.39 423.452 cv
1851.6 422.662 1864.42 420.257 1889.46 395.081 cv
1894.32 390.198 1896.87 383.455 1896.45 376.58 cv
1896.04 369.703 1892.69 363.316 1887.29 359.065 cv
cp
1 1 1 rgb
f
1399.28 222.822 mo
1399.28 222.822 1413.91 222.671 1430.5 230.122 cv
1447.1 237.574 1441.83 248.67 1433.2 254.281 cv
1424.57 259.892 1407.26 264.934 1399.24 262.766 cv
1391.23 260.599 1383.85 223.987 1399.28 222.822 cv
cp
.807843 .286275 .286275 rgb
f
1424.66 236.897 mo
1423.54 235.708 1422.06 234.806 1420.65 234.124 cv
1417.99 232.842 1414.21 232.167 1413.24 235.903 cv
1412.6 238.399 1414.3 240.73 1414.48 243.155 cv
1414.51 243.563 1414.62 243.908 1414.8 244.193 cv
1414.54 244.56 1414.4 245.012 1414.42 245.547 cv
1414.48 246.717 1415.61 247.838 1416.82 247.69 cv
1417.18 247.646 1417.55 247.584 1417.91 247.506 cv
1421.67 246.908 1426.92 246.303 1427.08 241.62 cv
1427.15 239.436 1426.14 237.837 1424.66 236.897 cv
cp
.94902 .360784 .360784 rgb
f
1420.35 243.234 mo
1420.11 254.278 1410.96 263.036 1399.92 262.793 cv
1388.87 262.552 1380.11 253.402 1380.36 242.358 cv
1380.6 231.314 1389.75 222.557 1400.79 222.799 cv
1411.84 223.041 1420.59 232.19 1420.35 243.234 cv
cp
1 1 1 rgb
f
1415.36 243.125 mo
1415.16 252.248 1407.6 259.482 1398.48 259.283 cv
1389.36 259.083 1382.12 251.525 1382.32 242.401 cv
1382.52 233.278 1390.08 226.044 1399.2 226.244 cv
1408.33 226.443 1415.56 234.001 1415.36 243.125 cv
cp
.262745 .290196 .34902 rgb
f
1402.48 242.843 mo
1402.43 245.137 1400.53 246.956 1398.23 246.906 cv
1395.94 246.856 1392.16 244.912 1392.21 242.618 cv
1392.26 240.324 1396.12 238.547 1398.42 238.598 cv
1400.71 238.648 1402.53 240.548 1402.48 242.843 cv
cp
.94902 .360784 .360784 rgb
f
1433.11 264.343 mo
1433.11 264.343 1447.67 262.884 1464.86 268.823 cv
1482.05 274.763 1477.79 286.286 1469.7 292.645 cv
1461.61 299.004 1444.82 305.572 1436.64 304.13 cv
1428.46 302.688 1417.84 266.882 1433.11 264.343 cv
cp
.807843 .286275 .286275 rgb
f
1462.85 276.529 mo
1461.51 272.322 1456.52 271.379 1452.79 272.576 cv
1450.64 273.266 1451.01 275.988 1452.57 276.787 cv
1452.29 277.666 1452.24 278.601 1452.45 279.487 cv
1452.51 279.736 li
1452.67 280.25 1452.92 280.741 1453.26 281.191 cv
1453.13 282.405 1453.94 283.653 1455.57 283.661 cv
1457.78 283.671 1460.15 283.195 1461.74 281.545 cv
1463.02 280.224 1463.4 278.263 1462.85 276.529 cv
cp
.94902 .360784 .360784 rgb
f
1455.92 282.79 mo
1456.67 293.812 1448.33 303.351 1437.31 304.097 cv
1426.29 304.843 1416.75 296.513 1416.01 285.491 cv
1415.26 274.47 1423.59 264.93 1434.61 264.184 cv
1445.63 263.438 1455.17 271.768 1455.92 282.79 cv
cp
1 1 1 rgb
f
1450.94 283.127 mo
1451.55 292.232 1444.67 300.112 1435.57 300.729 cv
1426.46 301.345 1418.58 294.463 1417.97 285.358 cv
1417.35 276.254 1424.23 268.373 1433.34 267.757 cv
1442.44 267.141 1450.32 274.022 1450.94 283.127 cv
cp
.262745 .290196 .34902 rgb
f
1438.08 283.997 mo
1438.24 286.287 1436.51 288.269 1434.22 288.423 cv
1431.93 288.579 1427.99 286.98 1427.84 284.69 cv
1427.68 282.401 1431.37 280.287 1433.66 280.132 cv
1435.95 279.977 1437.93 281.708 1438.08 283.997 cv
cp
.94902 .360784 .360784 rgb
f
1487.68 295.559 mo
1491.05 288.981 1505.17 262.066 1505.17 262.066 cv
1502.14 258.6 1498.47 255.845 1494.34 253.932 cv
1404.7 187.791 li
1402.84 186.416 1401.62 184.338 1401.32 182.04 cv
1398.89 163.093 li
1398.66 161.326 1397.2 159.979 1395.42 159.9 cv
1395.4 159.9 li
1393.35 186.915 li
1392.89 193.084 1395.07 199.162 1399.35 203.624 cv
1487.68 295.559 li
cp
f
1393.51 184.913 mo
1395.4 159.9 li
1394.01 159.838 1392.8 160.866 1392.65 162.255 cv
1391.85 169.321 1389.77 189.573 1391.08 196.344 cv
1391.36 197.761 1392.47 201.209 1395.26 204.99 cv
1413.92 230.358 1481.1 299.725 1481.1 299.725 cv
1483.16 300.86 1485.95 299.554 1486.96 296.983 cv
1487 296.895 1487.25 296.388 1487.68 295.559 cv
1400.75 205.071 li
1395.57 199.688 1392.94 192.356 1393.51 184.913 cv
cp
.807843 .286275 .286275 rgb
f
1767.53 395.195 mo
1767.53 395.195 1781.8 391.937 1799.59 395.691 cv
1817.39 399.446 1814.6 411.409 1807.36 418.726 cv
1800.12 426.042 1784.28 434.648 1775.98 434.234 cv
1767.69 433.82 1752.7 399.614 1767.53 395.195 cv
cp
f
1800.9 406.644 mo
1800.72 404.079 1798.08 402.632 1795.75 402.636 cv
1793.36 402.64 1790.73 403.66 1788.84 405.104 cv
1786.9 406.585 1785.5 408.853 1786.45 411.33 cv
1786.99 412.719 1788.11 413.583 1789.43 413.929 cv
1789.88 414.282 1790.48 414.44 1791.17 414.248 cv
1791.34 414.247 li
1791.43 414.241 1791.53 414.233 1791.62 414.223 cv
1791.89 414.239 1792.16 414.198 1792.4 414.113 cv
1796.01 413.438 1801.18 410.453 1800.9 406.644 cv
cp
.94902 .360784 .360784 rgb
f
1792.46 410.662 mo
1794.57 421.505 1787.49 432.006 1776.65 434.118 cv
1765.8 436.229 1755.3 429.15 1753.19 418.307 cv
1751.08 407.463 1758.16 396.962 1769 394.851 cv
1779.84 392.74 1790.35 399.818 1792.46 410.662 cv
cp
1 1 1 rgb
f
1787.56 411.616 mo
1789.3 420.573 1783.45 429.249 1774.5 430.992 cv
1765.54 432.736 1756.86 426.889 1755.12 417.931 cv
1753.38 408.974 1759.22 400.298 1768.18 398.554 cv
1777.14 396.811 1785.81 402.658 1787.56 411.616 cv
cp
.262745 .290196 .34902 rgb
f
1774.91 414.078 mo
1775.35 416.33 1773.88 418.512 1771.63 418.951 cv
1769.38 419.389 1765.27 418.293 1764.83 416.041 cv
1764.39 413.788 1767.79 411.232 1770.04 410.793 cv
1772.29 410.354 1774.47 411.825 1774.91 414.078 cv
cp
.94902 .360784 .360784 rgb
f
1587.61 429.991 mo
1441.19 366.01 li
1472.11 237.73 li
1618.53 301.711 li
1587.61 429.991 li
cp
.94902 .635294 .360784 rgb
f
1472.11 237.73 mo
1570.36 209.7 li
1716.77 273.681 li
1618.53 301.711 li
1472.11 237.73 li
cp
1 .882353 .392157 rgb
f
1526.5 261.497 mo
1624.75 233.467 li
1658.64 248.278 li
1560.4 276.308 li
1526.5 261.497 li
cp
.827451 .521569 .290196 rgb
f
1716.77 273.68 mo
1697.63 353.097 li
1685.85 401.961 li
1651.54 411.75 li
1587.61 429.992 li
1618.53 301.71 li
1716.77 273.68 li
cp
f
1666.02 350.82 mo
1659.96 350.858 1654 351.063 1648.06 352.302 cv
1642.9 353.372 1637.81 354.924 1632.59 355.656 cv
1630.75 355.917 1628.83 356.14 1627 355.749 cv
1626.62 355.669 1626.27 355.679 1625.96 355.755 cv
1625.86 355.745 1625.76 355.74 1625.67 355.743 cv
1624.31 355.807 1623.61 356.924 1623.52 358.143 cv
1623.14 363.666 1626.26 368.653 1629.46 372.875 cv
1631.17 375.123 1633 377.268 1634.69 379.526 cv
1636.46 381.9 1637.91 384.48 1639.32 387.08 cv
1643.7 395.169 1647.4 403.563 1651.54 411.75 cv
1685.85 401.961 li
1697.63 353.097 li
1687.17 351.522 1676.6 350.758 1666.02 350.82 cv
cp
.686275 .392157 .243137 rgb
f
1526.5 261.497 mo
1517.71 297.966 li
1551.49 313.247 li
1560.4 276.308 li
1526.5 261.497 li
cp
.666667 .419608 .247059 rgb
f
1543.27 268.823 mo
1640.44 240.326 li
1639.61 239.964 li
1542.44 268.461 li
1543.27 268.823 li
cp
.262745 .290196 .34902 rgb
f
1609.23 413.565 mo
1605.55 414.794 li
1611.61 389.62 li
1615.23 388.669 li
1609.23 413.565 li
cp
f
1614.9 383.038 mo
1616.37 385.774 li
1617.82 388.473 li
1613.31 389.666 li
1608.67 390.893 li
1611.81 386.938 li
1614.9 383.038 li
cp
f
1623.03 408.962 mo
1619.65 410.089 li
1625.46 385.979 li
1628.78 385.106 li
1623.03 408.962 li
cp
f
1628.54 379.692 mo
1629.86 382.337 li
1631.15 384.947 li
1627.01 386.042 li
1622.76 387.167 li
1625.67 383.405 li
1628.54 379.692 li
cp
f
1700.54 376.968 mo
1700.54 376.968 1715.02 374.802 1732.48 379.898 cv
1749.93 384.994 1746.24 396.71 1738.47 403.456 cv
1730.7 410.201 1714.25 417.579 1706.01 416.536 cv
1697.77 415.493 1685.42 380.247 1700.54 376.968 cv
cp
.807843 .286275 .286275 rgb
f
1733.12 393.342 mo
1732.93 390.777 1730.29 389.33 1727.97 389.334 cv
1725.57 389.339 1722.94 390.358 1721.05 391.802 cv
1719.11 393.284 1717.71 395.551 1718.67 398.029 cv
1719.2 399.417 1720.32 400.281 1721.65 400.628 cv
1722.1 400.98 1722.69 401.139 1723.38 400.946 cv
1723.55 400.945 li
1723.64 400.939 1723.74 400.931 1723.84 400.922 cv
1724.11 400.937 1724.37 400.896 1724.61 400.812 cv
1728.22 400.137 1733.39 397.151 1733.12 393.342 cv
cp
.94902 .360784 .360784 rgb
f
1724.23 394.283 mo
1725.51 405.255 1717.65 415.189 1706.68 416.47 cv
1695.71 417.751 1685.77 409.896 1684.49 398.923 cv
1683.21 387.951 1691.07 378.017 1702.04 376.736 cv
1713.01 375.455 1722.94 383.311 1724.23 394.283 cv
cp
1 1 1 rgb
f
1718.34 402.543 mo
1718.34 402.554 li
1716.24 408.174 1711.14 412.448 1704.77 413.19 cv
1695.71 414.248 1687.5 407.759 1686.44 398.695 cv
1685.58 391.305 1689.73 384.49 1696.21 381.646 cv
1697.67 381.002 1699.26 380.561 1700.94 380.365 cv
1710 379.307 1718.21 385.799 1719.27 394.864 cv
1719.58 397.554 1719.23 400.169 1718.34 402.543 cv
cp
.329412 .403922 .54902 rgb
f
1718.34 402.543 mo
1718.34 402.554 li
1715.98 406.965 1711.58 410.187 1706.24 410.809 cv
1697.58 411.82 1689.74 405.621 1688.73 396.966 cv
1687.99 390.644 1691.1 384.754 1696.21 381.646 cv
1697.67 381.002 1699.26 380.561 1700.94 380.365 cv
1710 379.307 1718.21 385.799 1719.27 394.864 cv
1719.58 397.554 1719.23 400.169 1718.34 402.543 cv
cp
.262745 .290196 .34902 rgb
f
1707.75 394.361 mo
1708.18 396.617 1706.69 398.79 1704.44 399.214 cv
1702.18 399.64 1698.08 398.519 1697.66 396.264 cv
1697.23 394.009 1700.64 391.473 1702.9 391.048 cv
1705.15 390.623 1707.33 392.106 1707.75 394.361 cv
cp
.94902 .360784 .360784 rgb
f
1824.49 396.836 mo
1624.92 353.185 li
1624.23 353.637 1623.66 354.278 1623.3 355.055 cv
1622.14 357.577 1623.51 360.542 1626.19 361.278 cv
1626.19 361.278 1769.3 396.65 1831.89 403.075 cv
1835.51 403.446 1840.22 402.815 1843.41 402.216 cv
1852.94 400.426 1868.63 385.393 1874.15 379.841 cv
1875.23 378.757 1875.12 376.977 1873.92 376.031 cv
1862.02 386.825 li
1851.86 396.036 1837.88 399.766 1824.49 396.836 cv
cp
.807843 .286275 .286275 rgb
f
1873.92 376.032 mo
1859.35 389.249 li
1850.87 396.937 1839.19 400.053 1828.01 397.608 cv
1759.99 382.73 li
1705.23 370.753 li
1624.92 353.184 li
1625.6 352.735 1626.41 352.471 1627.26 352.449 cv
1688.31 343.463 li
1693.68 343.314 1699.04 344.124 1704.13 345.86 cv
1749.3 359.432 li
1789.85 371.613 li
1832.16 384.325 li
1842.18 387.334 1853.03 385.755 1861.77 380.009 cv
1868.2 375.786 li
1869.96 374.628 1872.26 374.729 1873.92 376.032 cv
cp
.94902 .360784 .360784 rgb
f
1789.85 371.613 mo
1749.3 359.432 li
1733.12 354.572 li
1719.77 357.866 1708.32 361.284 1694.22 365.117 cv
1692.03 365.712 1689.85 366.311 1687.67 366.911 cv
1705.23 370.753 li
1759.99 382.73 li
1773.34 385.652 li
1773.53 385.583 1773.73 385.527 1773.91 385.455 cv
1783.13 381.877 1791.34 378.375 1800.39 374.779 cv
1789.85 371.613 li
cp
1 .482353 .482353 rgb
f
1487.25 328.12 mo
1486.7 329.748 1484.02 338.093 1475.22 334.304 cv
1466.21 330.422 1467.19 321.635 1469.35 312.663 cv
1471.95 301.851 1476.5 296.778 1483.88 299.955 cv
1492.28 303.576 1491.1 311.45 1490.59 314.178 cv
1484.97 311.759 li
1485.16 310.586 1486.06 306.494 1482.57 304.987 cv
1479 303.452 1477.03 307.673 1475.18 315.314 cv
1473.67 321.611 1472.84 327.777 1476.52 329.361 cv
1479.9 330.818 1481.14 326.903 1481.59 325.684 cv
1487.25 328.12 li
cp
1 1 1 rgb
f
1503.54 330.866 mo
1503.9 323.966 1504.08 318.888 1504.35 315.486 cv
1504.21 315.428 li
1503.09 318.334 1500.88 322.919 1498.22 328.575 cv
1503.54 330.866 li
cp
1495.97 333.331 mo
1492.37 341.057 li
1486.68 338.607 li
1502.07 308.38 li
1509.44 311.553 li
1508.81 348.139 li
1502.86 345.574 li
1503.3 336.49 li
1495.97 333.331 li
cp
f
1521.82 332.683 mo
1524.48 333.829 li
1527.91 335.306 1529.62 334.33 1530.43 330.955 cv
1531.13 328.079 1530.22 325.852 1527.32 324.601 cv
1524.1 323.213 li
1521.82 332.683 li
cp
1520.65 337.524 mo
1517.22 351.761 li
1511.57 349.33 li
1519.62 315.94 li
1529.33 320.122 li
1535.09 322.604 1537.59 327.175 1536.16 333.132 cv
1534.99 337.961 1532.04 338.987 1530.21 338.966 cv
1532.38 341.233 1533.01 343.931 1531.82 348.861 cv
1531.5 350.194 li
1530.59 353.988 1530.41 355.479 1530.24 357.372 cv
1524.75 355.007 li
1524.66 353.277 1525.21 350.599 1525.91 347.723 cv
1526.2 346.507 li
1527.27 342.044 1526.67 340.115 1523.08 338.572 cv
1520.65 337.524 li
cp
f
1553.64 367.45 mo
1549.31 365.587 li
1549.42 364.51 1549.51 363.72 1549.73 362.629 cv
1547.67 364.662 1545.29 364.487 1542.61 363.333 cv
1535.99 360.482 1535.09 353.238 1537.71 342.389 cv
1540.64 330.199 1545.81 326.637 1552.62 329.57 cv
1561.21 333.27 1559.82 341.228 1559.43 343.249 cv
1553.82 340.833 li
1554.05 339.446 1554.58 335.998 1551.23 334.555 cv
1547.57 332.979 1545.32 337.674 1543.58 344.904 cv
1541.7 352.689 1541.54 357.336 1545.15 358.894 cv
1548.16 360.19 1549.66 358.152 1550.84 353.232 cv
1551.29 351.361 li
1547.02 349.522 li
1548.25 344.42 li
1558.16 348.688 li
1553.64 367.45 li
cp
f
1567.77 354.689 mo
1565.86 362.611 1565.86 367.814 1569.19 369.247 cv
1572.69 370.756 1574.74 366.822 1576.73 358.564 cv
1578.6 350.806 1578.51 346.307 1575.07 344.823 cv
1571.68 343.362 1569.56 347.248 1567.77 354.689 cv
cp
1582.52 361.184 mo
1579.58 373.393 1575.15 377.352 1567.84 374.204 cv
1561.02 371.264 1558.95 364.594 1561.93 352.237 cv
1564.84 340.19 1569.88 337.004 1576.42 339.82 cv
1583.32 342.796 1585.32 349.591 1582.52 361.184 cv
cp
f
1296.8 250.425 mo
1293.17 246.321 1288.05 243.84 1282.59 243.532 cv
1109.36 233.752 li
1105.72 233.098 1102.08 232.428 1098.39 232.372 cv
1092.79 232.287 1087.17 232.345 1081.58 232.634 cv
1074.2 233.017 1064.38 233.255 1057.31 237.158 cv
1047.73 239.483 1040.66 246.889 1036.33 259.208 cv
1035.9 260.433 1035.6 261.669 1035.39 262.909 cv
1034.47 264.797 1033.52 266.686 1032.39 268.527 cv
1029.07 273.916 1023.12 276.895 1019.73 282.313 cv
1008.28 291.63 1001.79 304.132 1000.86 318.831 cv
1000.08 331.226 1003.48 342.083 1005.52 348.568 cv
1005.9 349.812 li
1006.14 350.573 1006.3 351.427 1006.43 352.323 cv
1006.32 354.126 1006.15 355.925 1005.79 357.708 cv
1004.56 363.793 1002.1 369.567 1000.72 375.622 cv
999.71 380.029 998.958 384.492 997.807 388.857 cv
986.959 413.443 972.358 462.416 965.583 485.919 cv
946.006 493.487 923.56 501.641 912.584 504.384 cv
909.576 505.136 906.85 506.537 904.55 508.424 cv
897.537 509.378 889.861 511.762 884.973 519.69 cv
881.361 525.552 876.968 537.118 876.124 539.377 cv
871.47 551.835 868.582 561.373 873.849 570.672 cv
877.611 577.313 884.689 581.374 892.295 581.289 cv
896.444 581.239 899.785 580.091 902.562 578.437 cv
908.474 578.854 914.441 577.495 920.21 576.048 cv
928.419 573.99 936.636 572.412 945.002 571.109 cv
955.154 569.528 965.531 570.115 975.772 570.114 cv
979.301 570.113 982.831 570.111 986.361 570.108 cv
991.474 571.338 996.33 573.196 999.902 577.432 cv
1011.12 590.731 1005.49 611.039 1012.64 626.198 cv
1012.78 626.436 li
1012.8 627.332 1012.82 627.984 1012.85 628.365 cv
1013.08 631.751 1014.12 634.889 1015.77 637.602 cv
1015.77 642.484 1016.76 647.636 1020.47 652.438 cv
1023.96 656.957 1029 659.842 1034.65 660.559 cv
1036.24 660.76 1038.15 660.84 1040.19 660.84 cv
1046.97 660.84 1055.13 659.961 1057.08 659.737 cv
1061.71 659.211 1065.65 658.584 1068.78 657.875 cv
1083 654.659 1087.48 646.352 1088.74 639.95 cv
1089.3 637.135 1089.26 634.249 1088.66 631.482 cv
1090.98 628.239 1092.36 624.323 1092.48 620.169 cv
1092.85 613.803 1099.51 539.268 1110.11 422.91 cv
1112.73 420.593 1115.32 418.219 1118.19 416.326 cv
1138.6 415.439 1161.15 408.905 1176.32 397.547 cv
1184.65 397.138 1192.94 396.178 1201.28 396.884 cv
1201.95 396.941 1202.54 396.858 1203.05 396.678 cv
1272.55 400.601 li
1283.75 401.229 1293.42 392.707 1294.17 381.483 cv
1301.9 265.373 li
1302.26 259.909 1300.42 254.527 1296.8 250.425 cv
cp
f
915.859 540.004 mo
917.333 539.551 921.697 536.028 919.927 534.105 cv
918.595 532.657 925.625 526.317 923.021 526.946 cv
915.274 528.82 904.039 527.851 902.436 530.452 cv
899.02 535.993 889.254 560.812 892.049 560.778 cv
893.726 560.758 904.068 543.637 915.859 540.004 cv
cp
.25098 .282353 .34902 rgb
f
1069.26 259.715 mo
1069.26 259.715 1065.97 256.239 1062.27 257.048 cv
1058.57 257.857 1056.34 264.151 1055.68 266.015 cv
1055.03 267.878 1057.68 272.146 1059.91 272.847 cv
1062.15 273.548 1073.93 262.385 1069.26 259.715 cv
cp
.360784 .745098 .776471 rgb
f
1073.07 263.696 mo
1073.07 263.696 1077.83 259.026 1076.94 256.69 cv
1076.06 254.425 1072.24 254.417 1070.1 255.429 cv
1067.95 256.441 1060.42 267.754 1060.42 267.754 cv
1060.42 267.754 1067.97 262.874 1073.07 263.696 cv
cp
.262745 .290196 .34902 rgb
f
1055.93 632.988 mo
1052.73 632.131 1052.37 629.41 1051.04 626.985 cv
1050.95 626.822 1050.49 623.111 1050.49 622.809 cv
1050.5 621.502 1046.66 618.645 1044.8 621.66 cv
1041.13 627.604 1037.35 619.828 1037.52 622.039 cv
1038.02 628.617 1034.69 639.886 1037.23 640.209 cv
1042.66 640.897 1068.09 638.657 1068.62 635.983 cv
1068.94 634.379 1061.46 634.472 1055.93 632.988 cv
cp
.25098 .282353 .34902 rgb
f
1093.67 293.571 mo
1120.1 306.782 1113.59 373.415 1113.59 373.415 cv
1113.59 373.415 1176.52 361.478 1173.21 370.05 cv
1163.6 394.933 1096.63 403.973 1087.72 387.74 cv
1079.12 372.056 1073.47 283.473 1093.67 293.571 cv
cp
.94902 .486275 .47451 rgb
f
1093.67 293.571 mo
1079.79 286.63 1080 330.292 1084.1 363.466 cv
1097.13 363.515 1109.59 360.479 1115.49 358.863 cv
1114.58 336.253 1115.7 304.58 1093.67 293.571 cv
cp
.94902 .94902 .94902 rgb
f
1033.74 372.623 mo
1024.77 366.393 1029.22 355.809 1025.5 343.762 cv
1022.2 333.059 1013.39 308.827 1038.16 294.442 cv
1056.88 283.568 1089.82 287.881 1099.93 296.32 cv
1118.09 311.476 1091.61 367.626 1092.86 372.788 cv
1092.86 372.788 1063.37 378.499 1033.74 372.623 cv
cp
f
1039.09 373.836 mo
1066.25 378.67 1093.36 379.268 1093.36 379.268 cv
1093.33 379.146 1098.06 362.973 1098.23 362.439 cv
1099.42 356.206 1097.99 321.001 1096.71 311.913 cv
1095.81 305.498 1093.32 292.412 1089.66 291.252 cv
1086.52 290.26 1082.98 289.452 1079.21 288.885 cv
1082.12 295.607 1088.78 311.888 1086.27 314.887 cv
1085.27 316.083 1082.14 316.728 1078.32 317.046 cv
1070.01 317.743 1058.42 316.907 1058.42 316.907 cv
1050 289.84 li
1045.71 290.885 1041.68 292.394 1038.16 294.441 cv
1037.51 294.817 1036.89 295.202 1036.3 295.588 cv
1049.73 315.713 1039.59 361.263 1039.09 373.836 cv
cp
.219608 .388235 .556863 rgb
f
1034.82 460.386 mo
1034.66 463.848 1032.81 619.715 1033.31 626.951 cv
1034.99 626.845 1044.99 627.319 1055.47 625.302 cv
1061.58 624.124 1069.04 620.618 1071.98 619.552 cv
1071.98 614.498 1094.15 372.096 1094.15 372.096 cv
1094.15 372.096 1068.04 369.058 1054.18 377.729 cv
1040.31 386.401 1035.92 436.459 1034.82 460.386 cv
cp
f
1073.42 265.37 mo
1073.42 265.37 1074.9 262.311 1072.87 261.364 cv
1069.69 259.884 1070.02 260.364 1067.99 260.963 cv
1066.44 261.422 1063.62 264.786 1060.84 267.328 cv
1059.03 268.986 1058.9 270.833 1059.19 271.799 cv
1060.45 275.952 1062.54 278.181 1062.54 278.181 cv
1062.54 278.181 1073.21 270.455 1073.42 265.37 cv
cp
.498039 .388235 .388235 rgb
f
1063.52 272.84 mo
1060.46 288.737 li
1059.97 291.309 1067.81 293.74 1071.05 291.858 cv
1072 291.308 1072.1 289.591 1071.68 287.666 cv
1069.04 277.132 li
1063.52 272.84 li
cp
1 .52549 .478431 rgb
f
1069.57 279.249 mo
1067.68 278.663 1065.11 277.827 1065.11 277.827 cv
1065.11 277.827 1064.67 280.941 1066.94 283.606 cv
1068.15 285.017 1069.72 285.816 1071.29 286.127 cv
1069.57 279.249 li
cp
.776471 .423529 .403922 rgb
f
1064.37 267.017 mo
1062.3 275.292 li
1061.84 278.056 1063.68 280.54 1066.45 280.882 cv
1068.67 281.157 1070.08 280.966 1072.84 280.254 cv
1075.14 279.662 1076.16 277.329 1075.94 274.365 cv
1075.66 270.521 1074.27 267.134 1073.42 265.37 cv
1072.51 263.481 1070.85 262.556 1069.15 262.656 cv
1067.24 262.77 1068.08 265.222 1064.37 267.017 cv
cp
1 .52549 .478431 rgb
f
1073.34 277.214 mo
1070.71 277.064 1069.02 281.167 1064.14 278.17 cv
1063.23 277.611 1062.65 276.046 1062.35 275.111 cv
1062.3 275.292 li
1061.84 278.056 1063.68 280.54 1066.45 280.882 cv
1068.67 281.157 1070.08 280.966 1072.84 280.254 cv
1074.24 279.893 1075.17 278.881 1075.63 277.477 cv
1075.17 277.613 1074.14 277.26 1073.34 277.214 cv
cp
.776471 .423529 .403922 rgb
f
1064.36 270.776 mo
1064.15 270.311 1064.02 269.816 1063.92 269.313 cv
1063.73 268.354 1063.22 266.989 1061.89 268.06 cv
1059.95 269.617 1060.84 274.28 1063.36 274.05 cv
1065.24 273.879 1064.88 271.947 1064.36 270.776 cv
cp
1 .52549 .478431 rgb
f
1096.32 370.109 mo
1273.7 380.122 li
1281.43 264.011 li
1104.05 253.999 li
1096.32 370.109 li
cp
.94902 .635294 .360784 rgb
f
1112.94 264.07 mo
1271.27 273.007 li
1264.81 370.05 li
1106.48 361.113 li
1112.94 264.07 li
cp
1104.05 253.999 mo
1096.32 370.109 li
1273.7 380.122 li
1281.43 264.011 li
1104.05 253.999 li
cp
1 .733333 .443137 rgb
f
1112.18 275.547 mo
1270.51 284.373 li
1270.68 281.893 li
1112.34 273.068 li
1112.18 275.547 li
cp
.909804 .588235 .345098 rgb
f
1110.91 294.566 mo
1269.25 303.392 li
1269.41 300.912 li
1111.08 292.087 li
1110.91 294.566 li
cp
f
1109.65 313.585 mo
1267.98 322.411 li
1268.14 319.932 li
1109.81 311.106 li
1109.65 313.585 li
cp
f
1108.38 332.605 mo
1266.71 341.43 li
1266.88 338.951 li
1108.55 330.125 li
1108.38 332.605 li
cp
f
1107.12 351.624 mo
1265.45 360.449 li
1265.61 357.97 li
1107.28 349.145 li
1107.12 351.624 li
cp
f
1114.48 266.249 mo
1114.48 266.249 1109.4 258.042 1104.05 253.999 cv
1104.05 253.999 1108.19 261.144 1114.48 266.249 cv
cp
.94902 .635294 .360784 rgb
f
1281.43 264.011 mo
1281.43 264.011 1273.67 269.253 1270.37 273.981 cv
1270.37 273.981 1275.83 270.935 1281.43 264.011 cv
cp
f
1263.58 368.697 mo
1263.58 368.697 1268.76 372.664 1273.7 380.122 cv
1273.7 380.122 1268.1 375.337 1263.58 368.697 cv
cp
f
917.559 524.284 mo
918.194 524.649 910.726 534.424 917.247 552.271 cv
942.148 550.04 967.931 547.417 986.953 542.953 cv
1003.96 538.963 1014.95 534.542 1024.87 510.904 cv
1052 446.266 1080.16 379.804 1080.16 379.804 cv
1033.62 372.623 li
1033.62 372.623 1021.84 386.008 1018.14 393.722 cv
1004.93 421.212 982.522 501.319 982.522 501.319 cv
982.522 501.319 937.08 519.404 917.559 524.284 cv
cp
.219608 .388235 .556863 rgb
f
1039.4 303.846 mo
1050.96 309.786 1068.54 360.438 1081.98 361.35 cv
1097.96 362.433 1153.77 340.283 1158.1 353.686 cv
1161.89 365.418 1116.75 384.096 1085.09 387.564 cv
1054.08 390.963 1028.78 344.051 1024.84 321.658 cv
1022.23 306.806 1031.66 299.874 1039.4 303.846 cv
cp
1 .52549 .478431 rgb
f
1155.32 349.912 mo
1155.32 349.912 1160.82 348.049 1162.62 347.083 cv
1164.43 346.117 1168.4 343.183 1167 346.643 cv
1165.6 350.103 1161.8 350.363 1163.25 352.541 cv
1164.69 354.72 1169.31 353.961 1174.87 356.711 cv
1178.04 358.279 1175.22 361.729 1169.14 362.601 cv
1161.94 363.634 1154.24 364.248 1151.84 357.37 cv
1149.44 350.492 1155.32 349.912 1155.32 349.912 cv
cp
f
1039.84 302.847 mo
1032.1 298.875 1020.76 306.905 1023.37 321.757 cv
1025.1 331.585 1030.6 347.345 1039.34 361.056 cv
1043.68 359.441 1059.31 351.629 1066.31 342.694 cv
1057.76 327.317 1047.37 306.715 1039.84 302.847 cv
cp
1 1 1 rgb
f
1069.56 273.452 mo
1069.56 273.452 1072.71 273.276 1074.43 272.893 cv
1074.43 272.893 1074.47 274.2 1072.67 274.676 cv
1070.86 275.152 1069.56 273.452 1069.56 273.452 cv
cp
f
1025.72 511.284 mo
1026.17 511.309 1026.49 511.082 1026.67 510.609 cv
1038.61 480.57 1049.52 449.96 1059.11 419.629 cv
1059.2 419.334 1059.19 419.098 1059.08 418.926 cv
1058.95 418.732 1058.7 418.61 1058.38 418.592 cv
1057.94 418.567 1057.14 418.757 1056.87 419.622 cv
1047.33 449.788 1036.53 480.106 1024.76 509.736 cv
1024.61 510.107 1024.62 510.44 1024.78 510.726 cv
1024.97 511.043 1025.34 511.262 1025.72 511.284 cv
cp
.164706 .254902 .388235 rgb
f
1054.66 435.08 mo
1054.78 435.086 1054.92 435.067 1055.07 435.021 cv
1061.17 433.202 1066.37 428.535 1068.62 422.841 cv
1068.77 422.469 1068.76 422.136 1068.59 421.85 cv
1068.41 421.532 1068.04 421.313 1067.66 421.292 cv
1067.21 421.267 1066.89 421.494 1066.71 421.966 cv
1064.66 427.13 1060.22 431.282 1055.13 432.801 cv
1054.16 433.09 1054.06 433.992 1054.05 434.17 cv
1054.03 434.573 1054.17 435.052 1054.66 435.08 cv
1054.66 435.08 li
cp
f
1072.02 271.495 mo
1072.36 271.124 1072.69 270.752 1073.03 270.382 cv
1073.41 269.96 1074.04 270.506 1073.65 270.929 cv
1072.64 272.042 li
1072.26 272.463 1071.63 271.917 1072.02 271.495 cv
cp
.839216 .407843 .337255 rgb
f
981.665 513.87 mo
981.753 513.867 li
982.929 513.819 983.841 512.828 983.793 511.654 cv
983.791 511.592 983.554 505.488 984.57 501.899 cv
984.89 500.768 984.233 499.592 983.102 499.271 cv
981.967 498.948 980.794 499.608 980.474 500.74 cv
979.272 504.986 979.528 511.551 979.54 511.829 cv
979.587 512.974 980.53 513.87 981.665 513.87 cv
cp
.164706 .254902 .388235 rgb
f
1086.65 321.007 mo
1059.78 322.146 li
1059.78 322.146 1062.7 334.622 1075.46 334.903 cv
1088.22 335.184 1086.65 321.007 1086.65 321.007 cv
cp
.298039 .529412 .760784 rgb
f
1087.17 364.943 mo
1088.06 364.943 1088.81 364.252 1088.87 363.352 cv
1088.93 362.413 1088.22 361.602 1087.28 361.541 cv
1079.66 361.043 1076.23 356.099 1076.19 356.049 cv
1075.67 355.27 1074.61 355.066 1073.83 355.593 cv
1073.05 356.12 1072.85 357.18 1073.38 357.958 cv
1073.55 358.218 1077.79 364.334 1087.06 364.939 cv
1087.17 364.943 li
cp
.776471 .423529 .403922 rgb
f
1123.25 285.487 mo
1155.17 287.266 li
1156.23 271.297 li
1124.31 269.518 li
1123.25 285.487 li
cp
1 1 1 rgb
f
1854.63 304.984 mo
1854.63 304.985 li
1869.86 314.72 1887.17 319.742 1904.82 319.742 cv
1911.56 319.742 1918.35 319.01 1925.09 317.527 cv
1949.48 312.162 1970.32 297.618 1983.77 276.574 cv
1997.23 255.533 2001.68 230.511 1996.31 206.118 cv
1990.95 181.726 1976.4 160.883 1955.36 147.43 cv
1934.32 133.976 1909.29 129.523 1884.9 134.888 cv
1860.51 140.253 1839.67 154.797 1826.22 175.84 cv
1812.76 196.881 1808.31 221.903 1813.68 246.297 cv
1819.04 270.689 1833.59 291.531 1854.63 304.984 cv
cp
f
1942.64 214.021 mo
1940.02 203.489 1936.27 193.646 1931.66 185.072 cv
1937.04 182.151 1941.9 178.901 1946.07 175.404 cv
1956.3 183.659 1964.12 195.025 1967.9 208.465 cv
1942.64 214.021 li
cp
1946.46 252.356 mo
1947.05 242.636 1946.33 232.129 1944.28 221.47 cv
1969.54 215.914 li
1971.75 229.7 1969.42 243.297 1963.6 255.083 cv
1958.35 253.66 1952.57 252.75 1946.46 252.356 cv
cp
1943.8 269.545 mo
1944.61 266.488 1945.24 263.274 1945.71 259.938 cv
1950.65 260.244 1955.35 260.917 1959.68 261.952 cv
1954.42 270.006 1947.39 276.911 1939.01 282.028 cv
1940.94 278.414 1942.55 274.24 1943.8 269.545 cv
cp
1882.2 273.908 mo
1884.02 276.741 1885.95 279.392 1887.97 281.827 cv
1891.07 285.565 1894.28 288.678 1897.55 291.147 cv
1887.8 290.021 1878.52 286.701 1870.37 281.6 cv
1873.86 278.843 1877.84 276.262 1882.2 273.908 cv
cp
1867.35 238.394 mo
1869.97 248.926 1873.72 258.768 1878.33 267.342 cv
1872.96 270.264 1868.09 273.514 1863.92 277.01 cv
1853.69 268.755 1845.87 257.39 1842.09 243.95 cv
1867.35 238.394 li
cp
1863.53 200.059 mo
1862.94 209.778 1863.67 220.286 1865.71 230.945 cv
1840.45 236.501 li
1838.24 222.715 1840.57 209.118 1846.39 197.333 cv
1851.64 198.755 1857.42 199.665 1863.53 200.059 cv
cp
1866.19 182.869 mo
1865.38 185.926 1864.75 189.141 1864.28 192.477 cv
1859.34 192.171 1854.64 191.498 1850.31 190.462 cv
1855.58 182.409 1862.6 175.503 1870.98 170.386 cv
1869.05 174 1867.44 178.175 1866.19 182.869 cv
cp
1922.02 170.588 mo
1918.92 166.849 1915.71 163.737 1912.44 161.267 cv
1922.19 162.394 1931.47 165.713 1939.63 170.815 cv
1936.13 173.572 1932.15 176.153 1927.79 178.506 cv
1925.97 175.674 1924.04 173.023 1922.02 170.588 cv
cp
1900.68 188.84 mo
1894.78 162.033 li
1903.55 162.352 1912.97 169.899 1920.86 181.914 cv
1914.62 184.704 1907.81 187.053 1900.68 188.84 cv
cp
1907.9 221.664 mo
1902.32 196.293 li
1910.25 194.315 1917.84 191.668 1924.78 188.498 cv
1929.05 196.372 1932.66 205.61 1935.19 215.661 cv
1907.9 221.664 li
cp
1915.12 254.483 mo
1909.54 229.112 li
1936.83 223.11 li
1938.75 233.292 1939.35 243.194 1938.78 252.132 cv
1931.15 252.167 1923.15 252.949 1915.12 254.483 cv
cp
1916.76 261.936 mo
1923.98 260.566 1931.15 259.841 1937.99 259.755 cv
1935.87 273.972 1930.48 284.775 1922.66 288.743 cv
1916.76 261.936 li
cp
1909.31 263.574 mo
1915.21 290.381 li
1906.45 290.063 1897.02 282.516 1889.13 270.501 cv
1895.38 267.711 1902.18 265.362 1909.31 263.574 cv
cp
1902.09 230.751 mo
1907.67 256.122 li
1899.74 258.099 1892.15 260.747 1885.21 263.917 cv
1880.94 256.042 1877.33 246.804 1874.8 236.754 cv
1902.09 230.751 li
cp
1894.87 197.932 mo
1900.45 223.302 li
1873.16 229.305 li
1871.24 219.123 1870.64 209.221 1871.21 200.283 cv
1878.84 200.247 1886.84 199.466 1894.87 197.932 cv
cp
1893.23 190.479 mo
1886.01 191.849 1878.84 192.573 1872.01 192.66 cv
1874.13 178.443 1879.51 167.64 1887.33 163.672 cv
1893.23 190.479 li
cp
1944.31 164.712 mo
1927.88 154.209 1908.35 150.732 1889.31 154.921 cv
1870.27 159.109 1854 170.462 1843.5 186.889 cv
1833 203.314 1829.52 222.847 1833.71 241.889 cv
1837.9 260.93 1849.25 277.2 1865.68 287.703 cv
1882.11 298.205 1901.64 301.683 1920.68 297.494 cv
1939.72 293.305 1955.99 281.952 1966.49 265.526 cv
1976.99 249.1 1980.47 229.567 1976.28 210.526 cv
1972.09 191.485 1960.74 175.214 1944.31 164.712 cv
cp
.74902 .901961 .909804 rgb
f
821.567 322.13 mo
820.597 322.389 819.66 322.738 818.784 323.155 cv
820.058 322.246 821.518 321.613 823.096 321.31 cv
822.569 321.548 822.059 321.821 821.567 322.13 cv
cp
855.099 262.547 mo
841.666 256.771 826.877 255.042 812.33 257.546 cv
797.785 260.051 784.426 266.628 773.699 276.565 cv
745.916 302.301 741.867 345.099 764.281 376.115 cv
820.368 453.725 li
825.764 461.192 834.207 465.438 843.176 465.438 cv
844.792 465.438 846.424 465.3 848.059 465.02 cv
858.772 463.175 867.325 455.548 870.38 445.114 cv
870.38 445.112 li
897.275 353.212 li
908.022 316.484 889.891 277.507 855.099 262.547 cv
cp
1 1 1 rgb
f
830.525 363.195 mo
813.364 366.151 797.056 354.635 794.101 337.474 cv
791.145 320.313 802.661 304.005 819.823 301.05 cv
836.984 298.094 853.292 309.61 856.247 326.771 cv
859.203 343.933 847.687 360.24 830.525 363.195 cv
cp
846.996 281.391 mo
837.595 277.348 826.896 275.852 815.812 277.76 cv
804.729 279.669 795.146 284.658 787.638 291.613 cv
767.326 310.429 764.689 341.659 780.907 364.101 cv
836.993 441.71 li
840.764 446.928 848.886 445.529 850.693 439.351 cv
877.588 347.451 li
885.364 320.878 872.433 292.328 846.996 281.391 cv
cp
.94902 .360784 .360784 rgb
f
830.4 159.126 mo
827.288 156.306 824.059 153.685 820.554 151.138 cv
820.295 150.934 820.03 150.734 819.758 150.54 cv
819.468 150.333 819.178 150.132 818.887 149.933 cv
818.669 149.783 li
818.261 149.498 817.851 149.215 817.444 148.938 cv
816.396 148.225 815.345 147.534 814.269 146.854 cv
813.72 146.502 li
812.505 145.745 811.291 145.028 810.049 144.315 cv
809.708 144.121 809.37 143.931 809.03 143.743 cv
808.66 143.535 li
808.338 143.351 808.014 143.169 807.693 142.995 cv
807.401 142.837 807.107 142.687 806.809 142.545 cv
771.059 123.597 738.001 130.222 734.322 131.046 cv
733.99 131.121 733.66 131.203 733.331 131.295 cv
382.285 228.562 li
379.388 223.699 375.912 219.154 371.948 215.075 cv
330.878 172.813 li
322.939 164.643 311.236 161.444 300.332 164.462 cv
293.831 166.264 288.294 170.698 285.139 176.629 cv
281.985 182.56 281.405 189.633 283.545 196.031 cv
301.721 250.369 li
300.874 254.014 299.186 257.629 297.709 260.465 cv
296.016 263.718 294.042 267.043 291.78 270.155 cv
270.048 276.176 li
258.001 279.514 250.839 291.839 253.748 303.906 cv
251.301 307.619 249.001 311.17 246.25 314.345 cv
195.646 328.366 li
187.886 330.514 181.588 335.978 178.366 343.357 cv
174.285 352.702 175.834 363.35 182.407 371.146 cv
187.553 377.25 194.944 380.614 202.661 380.614 cv
204.8 380.614 206.964 380.355 209.112 379.826 cv
380.141 337.64 li
392.346 337.257 404.657 337.215 416.236 341.047 cv
423.568 343.473 430.487 346.768 438.232 347.724 cv
439.111 347.832 439.99 347.924 440.872 348.013 cv
443.124 349.99 445.566 351.781 448.239 353.294 cv
458.546 359.127 470.483 360.604 481.852 357.455 cv
531.003 343.836 li
544.281 340.158 554.449 330.758 559.634 319.042 cv
563.865 317.995 567.958 316.178 572.083 314.794 cv
576.872 313.187 581.868 312.83 586.9 312.85 cv
597.166 319.506 610.122 321.915 622.812 318.397 cv
655.97 309.21 li
667.34 306.06 676.815 298.649 682.649 288.342 cv
685.14 283.944 686.835 279.249 687.717 274.427 cv
780.649 248.677 li
791.366 245.708 801.426 241.2 810.52 235.299 cv
811.612 234.593 812.697 233.858 813.837 233.053 cv
814.027 232.923 814.214 232.792 814.403 232.656 cv
814.555 232.547 li
814.832 232.349 815.106 232.15 815.357 231.967 cv
817.845 230.15 820.21 228.248 822.369 226.333 cv
830.893 218.783 836.976 210.42 840.452 201.466 cv
846.155 186.753 842.114 169.736 830.4 159.126 cv
1 1 1 rgb
f
372.869 259.887 mo
369.199 248.911 li
366.771 241.656 362.679 234.969 357.238 229.37 cv
316.168 187.109 li
313.472 184.335 309.458 183.219 305.809 184.23 cv
303.493 184.871 302.234 187.242 302.998 189.524 cv
330.463 271.637 li
372.869 259.887 li
.894118 .956863 .956863 rgb
f
637.806 243.654 mo
604.647 252.842 li
592.056 256.33 584.608 269.487 588.097 282.079 cv
588.097 282.079 li
591.585 294.671 604.742 302.12 617.335 298.631 cv
650.493 289.443 li
663.085 285.954 670.533 272.797 667.044 260.205 cv
663.555 247.613 650.398 240.164 637.806 243.654 cv
.537255 .709804 .827451 rgb
f
664.788 260.829 mo
667.481 270.547 661.786 280.607 652.07 283.299 cv
642.352 285.991 632.293 280.296 629.6 270.58 cv
626.908 260.863 632.603 250.803 642.319 248.111 cv
652.036 245.419 662.096 251.113 664.788 260.829 cv
.27451 .282353 .458824 rgb
f
821.327 194.053 mo
819.421 198.963 815.725 204.816 808.768 210.978 cv
807.121 212.439 805.292 213.918 803.258 215.403 cv
803.01 215.584 802.758 215.767 802.504 215.947 cv
802.473 215.97 li
802.347 216.06 802.224 216.146 802.097 216.233 cv
801.203 216.865 800.301 217.479 799.385 218.071 cv
791.933 222.908 783.748 226.534 775.172 228.91 cv
491.774 307.433 li
490.665 307.741 489.551 308.038 488.438 308.327 cv
487.445 308.584 486.452 308.83 485.459 309.071 cv
484.727 309.248 483.995 309.419 483.261 309.588 cv
482.584 309.743 481.904 309.894 481.225 310.041 cv
481.148 310.057 li
478.655 310.601 476.153 311.095 473.643 311.535 cv
458.58 314.198 443.239 315.073 427.949 314.084 cv
427.584 314.061 427.221 314.034 426.856 314.011 cv
426.52 313.986 426.185 313.963 425.847 313.938 cv
425.623 313.919 425.396 313.905 425.171 313.886 cv
424.838 313.859 424.504 313.833 424.169 313.805 cv
423.782 313.774 423.394 313.739 423.005 313.703 cv
422.409 313.648 421.814 313.594 421.21 313.535 cv
421.175 313.531 li
420.569 313.473 419.96 313.413 419.347 313.349 cv
419.219 313.335 419.091 313.322 418.96 313.309 cv
418.577 313.271 418.193 313.23 417.805 313.187 cv
417.07 313.11 416.327 313.027 415.58 312.939 cv
415.104 312.886 414.625 312.831 414.143 312.771 cv
413.343 312.678 412.535 312.578 411.726 312.473 cv
411.106 312.396 410.485 312.314 409.863 312.229 cv
409.366 312.164 408.867 312.094 408.364 312.022 cv
407.935 311.965 407.505 311.905 407.074 311.84 cv
406.526 311.763 405.978 311.681 405.426 311.596 cv
404.805 311.506 404.183 311.41 403.558 311.311 cv
403.451 311.294 403.343 311.278 403.234 311.259 cv
402.663 311.169 402.088 311.076 401.513 310.982 cv
401.31 310.949 li
400.7 310.846 400.088 310.743 399.474 310.636 cv
398.907 310.539 398.342 310.438 397.773 310.336 cv
397.229 310.241 396.682 310.141 396.136 310.038 cv
395.934 309.999 li
395.35 309.892 394.764 309.78 394.177 309.665 cv
393.912 309.614 li
393.41 309.516 392.906 309.416 392.403 309.312 cv
391.916 309.214 391.426 309.115 390.935 309.008 cv
390.423 308.904 389.913 308.797 389.4 308.685 cv
389.351 308.675 li
388.746 308.545 388.14 308.413 387.532 308.275 cv
387.292 308.223 387.052 308.168 386.81 308.111 cv
386.355 308.009 385.897 307.904 385.439 307.795 cv
385.276 307.758 385.112 307.72 384.948 307.679 cv
384.488 307.572 384.029 307.462 383.568 307.35 cv
383.02 307.219 382.471 307.082 381.92 306.943 cv
381.728 306.895 li
381.082 306.733 380.435 306.568 379.789 306.398 cv
379.705 306.375 li
379.234 306.251 378.763 306.127 378.294 305.996 cv
377.989 305.917 377.685 305.833 377.378 305.747 cv
377.129 305.681 376.879 305.612 376.63 305.538 cv
376.211 305.424 375.791 305.306 375.373 305.185 cv
375.05 305.095 374.73 305.002 374.408 304.906 cv
374.066 304.809 373.726 304.707 373.383 304.606 cv
373.024 304.501 372.665 304.392 372.307 304.28 cv
371.999 304.19 371.689 304.093 371.379 303.997 cv
370.984 303.875 370.592 303.752 370.193 303.617 cv
369.951 303.546 369.709 303.468 369.47 303.387 cv
369.225 303.316 368.973 303.239 368.726 303.151 cv
368.237 302.995 367.747 302.833 367.259 302.667 cv
366.989 302.578 366.717 302.485 366.445 302.39 cv
366.076 302.267 365.709 302.14 365.34 302.008 cv
364.94 301.871 364.541 301.73 364.141 301.583 cv
363.902 301.502 363.661 301.415 363.42 301.327 cv
362.925 301.148 362.43 300.965 361.935 300.778 cv
361.792 300.729 361.65 300.675 361.507 300.62 cv
360.982 300.421 360.457 300.22 359.932 300.016 cv
359.797 299.966 359.662 299.914 359.528 299.859 cv
353.562 297.512 348.108 294.18 343.356 290.046 cv
338.249 285.602 333.961 280.236 330.737 274.179 cv
330.634 273.985 330.531 273.788 330.429 273.59 cv
329.543 271.801 li
327.94 268.411 329.781 264.395 333.396 263.393 cv
738.808 151.062 li
738.808 151.062 780.583 141.663 816.626 174.325 cv
822.128 179.309 824.009 187.131 821.327 194.053 cv
.894118 .956863 .956863 rgb
f
425.977 313.414 mo
423.628 313.414 421.291 313.379 418.96 313.309 cv
418.96 313.309 li
418.577 313.271 418.193 313.23 417.805 313.187 cv
417.07 313.11 416.327 313.027 415.58 312.939 cv
415.104 312.886 414.625 312.831 414.143 312.771 cv
413.343 312.678 412.535 312.578 411.726 312.473 cv
411.106 312.396 410.485 312.314 409.863 312.229 cv
409.366 312.164 408.867 312.094 408.364 312.022 cv
407.935 311.965 407.505 311.905 407.074 311.84 cv
406.526 311.763 405.978 311.681 405.426 311.596 cv
404.805 311.506 404.183 311.41 403.558 311.311 cv
403.451 311.294 403.343 311.278 403.234 311.259 cv
402.663 311.169 402.088 311.076 401.513 310.982 cv
401.31 310.949 li
400.7 310.846 400.088 310.743 399.474 310.636 cv
398.907 310.539 398.342 310.438 397.773 310.336 cv
397.229 310.241 396.682 310.141 396.136 310.038 cv
395.934 309.999 li
395.35 309.892 394.764 309.78 394.177 309.665 cv
393.912 309.614 li
393.41 309.516 392.906 309.416 392.403 309.312 cv
391.916 309.214 391.426 309.115 390.935 309.008 cv
390.423 308.904 389.913 308.797 389.4 308.685 cv
389.351 308.675 li
388.746 308.545 388.14 308.413 387.532 308.275 cv
387.292 308.223 387.052 308.168 386.81 308.111 cv
386.355 308.009 385.897 307.904 385.439 307.795 cv
385.276 307.758 385.112 307.72 384.948 307.679 cv
384.488 307.572 384.029 307.462 383.568 307.35 cv
383.02 307.219 382.471 307.082 381.92 306.943 cv
381.728 306.895 li
381.082 306.733 380.435 306.568 379.789 306.398 cv
379.705 306.375 li
379.234 306.251 378.763 306.127 378.294 305.996 cv
377.989 305.917 377.685 305.833 377.378 305.747 cv
377.129 305.681 376.879 305.612 376.63 305.538 cv
376.211 305.424 375.791 305.306 375.373 305.185 cv
375.05 305.095 374.73 305.002 374.408 304.906 cv
374.066 304.809 373.726 304.707 373.383 304.606 cv
373.024 304.501 372.665 304.392 372.307 304.28 cv
371.999 304.19 371.689 304.093 371.379 303.997 cv
370.984 303.875 370.592 303.752 370.193 303.617 cv
369.951 303.546 369.709 303.468 369.47 303.387 cv
369.225 303.316 368.973 303.239 368.726 303.151 cv
368.237 302.995 367.747 302.833 367.259 302.667 cv
366.989 302.578 366.717 302.485 366.445 302.39 cv
366.076 302.267 365.709 302.14 365.34 302.008 cv
364.94 301.871 364.541 301.73 364.141 301.583 cv
363.902 301.502 363.661 301.415 363.42 301.327 cv
362.925 301.148 362.43 300.965 361.935 300.778 cv
361.792 300.729 361.65 300.675 361.507 300.62 cv
360.982 300.421 360.457 300.22 359.932 300.016 cv
359.797 299.966 359.662 299.914 359.528 299.859 cv
353.562 297.512 348.108 294.18 343.356 290.046 cv
338.249 285.602 333.961 280.236 330.737 274.179 cv
330.634 273.985 330.531 273.788 330.429 273.59 cv
329.543 271.801 li
329.149 270.967 328.963 270.095 328.96 269.239 cv
328.953 266.617 330.67 264.148 333.396 263.393 cv
333.396 263.393 li
336.19 262.619 li
343.208 273.2 356.253 287.247 379.127 295.922 cv
382.373 297.153 388.245 297.855 396.637 297.855 cv
424.859 297.855 481.58 289.912 562.758 267.42 cv
626.795 249.677 706.808 239.069 808.768 210.978 cv
807.121 212.439 805.292 213.918 803.258 215.403 cv
803.01 215.584 802.758 215.767 802.504 215.947 cv
802.473 215.97 li
802.347 216.06 802.224 216.146 802.097 216.233 cv
802.097 216.233 li
800.209 217.531 798.162 218.581 796.023 219.405 cv
790.837 221.402 785.782 223.08 781.82 224.178 cv
492.104 304.452 li
490.971 304.766 489.833 305.07 488.695 305.365 cv
467.913 310.706 446.628 313.414 425.977 313.414 cv
.705882 .839216 .929412 rgb
f
757.626 181.126 mo
762.351 179.817 li
763.216 179.577 763.626 178.59 763.187 177.808 cv
760.243 172.566 li
759.931 172.012 759.281 171.742 758.668 171.912 cv
753.754 173.273 li
752.871 173.518 752.466 174.537 752.939 175.32 cv
756.074 180.509 li
756.395 181.039 757.029 181.292 757.626 181.126 cv
cp
.27451 .282353 .458824 rgb
f
807.82 167.219 mo
768.612 178.083 li
767.769 178.316 766.873 177.961 766.419 177.211 cv
763.895 173.035 li
763.227 171.928 763.8 170.489 765.045 170.144 cv
797.927 161.033 li
801.218 162.815 804.525 164.863 807.82 167.219 cv
f
748.209 174.809 mo
745.079 175.677 li
744.334 175.883 743.959 176.713 744.296 177.408 cv
747.018 183.014 li
747.279 183.551 747.885 183.825 748.46 183.666 cv
751.962 182.695 li
752.735 182.481 753.103 181.599 752.709 180.899 cv
749.617 175.395 li
749.339 174.899 748.758 174.657 748.209 174.809 cv
cp
f
700.214 192.571 mo
698.861 192.946 li
697.744 193.255 697.083 194.422 697.393 195.538 cv
698.987 201.291 li
699.296 202.407 700.463 203.067 701.579 202.758 cv
702.933 202.383 li
704.049 202.074 704.709 200.907 704.4 199.791 cv
702.807 194.038 li
702.497 192.922 701.331 192.262 700.214 192.571 cv
cp
f
674.077 199.813 mo
672.723 200.188 li
671.607 200.497 670.946 201.664 671.256 202.78 cv
672.85 208.532 li
673.159 209.649 674.326 210.309 675.442 210 cv
676.795 209.625 li
677.912 209.315 678.572 208.149 678.263 207.032 cv
676.669 201.28 li
676.36 200.164 675.193 199.503 674.077 199.813 cv
cp
f
660.966 203.446 mo
659.612 203.821 li
658.496 204.13 657.835 205.296 658.145 206.413 cv
659.738 212.165 li
660.048 213.282 661.215 213.942 662.331 213.633 cv
663.685 213.258 li
664.801 212.948 665.461 211.782 665.152 210.665 cv
663.559 204.913 li
663.249 203.797 662.083 203.136 660.966 203.446 cv
cp
f
647.855 207.079 mo
646.501 207.453 li
645.385 207.763 644.725 208.93 645.034 210.046 cv
646.627 215.798 li
646.937 216.915 648.104 217.575 649.22 217.266 cv
650.574 216.891 li
651.69 216.581 652.351 215.415 652.041 214.298 cv
650.447 208.546 li
650.138 207.43 648.971 206.769 647.855 207.079 cv
cp
f
634.744 210.711 mo
633.391 211.086 li
632.274 211.396 631.614 212.563 631.923 213.679 cv
633.517 219.431 li
633.826 220.547 634.993 221.208 636.109 220.898 cv
637.462 220.523 li
638.579 220.214 639.239 219.047 638.93 217.931 cv
637.336 212.179 li
637.027 211.063 635.86 210.402 634.744 210.711 cv
cp
f
621.633 214.344 mo
620.28 214.719 li
619.163 215.028 618.503 216.195 618.812 217.312 cv
620.406 223.063 li
620.715 224.18 621.882 224.84 622.999 224.531 cv
624.352 224.156 li
625.468 223.847 626.128 222.68 625.819 221.563 cv
624.226 215.812 li
623.917 214.695 622.75 214.035 621.633 214.344 cv
cp
f
587.883 223.695 mo
586.53 224.07 li
585.413 224.38 584.753 225.546 585.062 226.663 cv
586.656 232.415 li
586.965 233.531 588.132 234.192 589.248 233.882 cv
590.602 233.507 li
591.718 233.198 592.378 232.031 592.069 230.915 cv
590.476 225.163 li
590.166 224.046 589 223.386 587.883 223.695 cv
cp
f
561.746 230.938 mo
560.392 231.313 li
559.276 231.622 558.615 232.789 558.925 233.905 cv
560.519 239.657 li
560.828 240.773 561.995 241.434 563.111 241.125 cv
564.464 240.75 li
565.581 240.44 566.241 239.273 565.932 238.157 cv
564.338 232.405 li
564.029 231.289 562.862 230.628 561.746 230.938 cv
cp
f
548.635 234.57 mo
547.281 234.945 li
546.165 235.254 545.504 236.421 545.814 237.538 cv
547.408 243.29 li
547.717 244.406 548.884 245.066 550 244.757 cv
551.354 244.382 li
552.47 244.073 553.13 242.906 552.821 241.79 cv
551.228 236.038 li
550.918 234.921 549.751 234.261 548.635 234.57 cv
cp
f
535.524 238.203 mo
534.17 238.578 li
533.054 238.887 532.394 240.054 532.703 241.17 cv
534.296 246.922 li
534.606 248.039 535.772 248.699 536.889 248.39 cv
538.243 248.015 li
539.359 247.706 540.02 246.539 539.71 245.422 cv
538.116 239.67 li
537.807 238.554 536.641 237.894 535.524 238.203 cv
cp
f
522.413 241.835 mo
521.06 242.21 li
519.943 242.52 519.283 243.687 519.592 244.803 cv
521.186 250.555 li
521.495 251.671 522.662 252.332 523.778 252.023 cv
525.132 251.648 li
526.249 251.338 526.909 250.171 526.599 249.055 cv
525.005 243.303 li
524.696 242.187 523.529 241.526 522.413 241.835 cv
cp
f
509.302 245.468 mo
507.949 245.843 li
506.832 246.153 506.172 247.319 506.481 248.436 cv
508.075 254.188 li
508.384 255.304 509.551 255.965 510.667 255.655 cv
512.021 255.28 li
513.137 254.971 513.798 253.804 513.488 252.688 cv
511.895 246.936 li
511.585 245.82 510.418 245.159 509.302 245.468 cv
cp
f
476.229 254.632 mo
474.875 255.007 li
473.759 255.317 473.099 256.483 473.408 257.6 cv
475.001 263.352 li
475.311 264.468 476.478 265.129 477.594 264.819 cv
478.947 264.444 li
480.064 264.135 480.724 262.968 480.415 261.852 cv
478.821 256.1 li
478.512 254.983 477.345 254.323 476.229 254.632 cv
cp
.603922 .615686 .647059 rgb
f
450.091 261.875 mo
448.738 262.25 li
447.622 262.559 446.961 263.726 447.271 264.842 cv
448.864 270.594 li
449.173 271.71 450.34 272.371 451.457 272.062 cv
452.81 271.687 li
453.927 271.377 454.587 270.21 454.278 269.094 cv
452.684 263.342 li
452.375 262.226 451.208 261.565 450.091 261.875 cv
cp
.27451 .282353 .458824 rgb
f
436.98 265.507 mo
435.627 265.882 li
434.511 266.191 433.85 267.358 434.16 268.475 cv
435.753 274.227 li
436.063 275.343 437.229 276.003 438.346 275.694 cv
439.699 275.319 li
440.816 275.01 441.476 273.843 441.167 272.727 cv
439.573 266.975 li
439.264 265.858 438.097 265.198 436.98 265.507 cv
cp
f
423.87 269.14 mo
422.516 269.515 li
421.4 269.824 420.739 270.991 421.049 272.107 cv
422.642 277.859 li
422.952 278.976 424.118 279.636 425.235 279.327 cv
426.588 278.952 li
427.705 278.643 428.365 277.476 428.056 276.359 cv
426.462 270.607 li
426.153 269.491 424.986 268.831 423.87 269.14 cv
cp
f
410.759 272.773 mo
409.405 273.148 li
408.289 273.457 407.628 274.624 407.938 275.74 cv
409.531 281.492 li
409.841 282.608 411.007 283.269 412.124 282.96 cv
413.478 282.585 li
414.594 282.275 415.254 281.109 414.945 279.992 cv
413.351 274.24 li
413.042 273.124 411.875 272.463 410.759 272.773 cv
cp
f
397.647 276.405 mo
396.294 276.78 li
395.178 277.09 394.518 278.256 394.827 279.373 cv
396.42 285.125 li
396.73 286.241 397.896 286.902 399.013 286.592 cv
400.367 286.217 li
401.483 285.908 402.144 284.741 401.834 283.625 cv
400.24 277.873 li
399.931 276.756 398.764 276.096 397.647 276.405 cv
cp
f
542.077 294.831 mo
545.565 307.422 538.117 320.58 525.526 324.069 cv
492.368 333.256 li
486.071 335.001 479.633 334.011 474.333 331.011 cv
469.034 328.011 464.872 323.003 463.127 316.707 cv
459.638 304.113 467.088 290.957 479.681 287.468 cv
512.839 278.28 li
514.524 277.813 516.218 277.543 517.898 277.454 cv
522.499 277.21 526.991 278.33 530.871 280.526 cv
536.17 283.526 540.332 288.534 542.077 294.831 cv
cp
.894118 .956863 .956863 rgb
f
519.626 292.367 mo
517.516 293.729 514.882 294.404 512.455 294.97 cv
504.81 296.75 497.463 299.774 489.732 301.17 cv
486.965 301.668 484.492 299.949 483.816 297.261 cv
483.745 296.983 483.71 296.7 483.699 296.42 cv
483.488 296.146 483.285 295.874 483.095 295.605 cv
481.937 293.97 480.909 292.263 480.579 290.25 cv
480.397 289.136 480.488 288.105 480.787 287.161 cv
512.839 278.28 li
514.524 277.813 516.218 277.543 517.898 277.454 cv
520.1 278.763 522.093 280.545 523.123 282.769 cv
524.908 286.624 522.906 290.248 519.626 292.367 cv
cp
1 1 1 rgb
f
504.671 329.847 mo
476.375 337.688 li
470.078 339.433 463.642 338.441 458.342 335.442 cv
453.043 332.442 448.881 327.434 447.137 321.137 cv
443.647 308.544 451.094 295.389 463.688 291.899 cv
496.845 282.712 li
500.415 281.723 504.025 281.612 507.454 282.249 cv
498.728 288.672 491.136 299.227 488.489 309.679 cv
487.29 314.416 487.248 318.572 488.171 321.905 cv
490.09 328.83 496.171 332.203 504.671 329.847 cv
cp
.537255 .709804 .827451 rgb
f
539.82 295.456 mo
542.513 305.173 536.818 315.232 527.101 317.925 cv
517.384 320.617 507.325 314.922 504.632 305.206 cv
501.94 295.489 507.634 285.429 517.351 282.737 cv
527.068 280.044 537.128 285.739 539.82 295.456 cv
cp
.27451 .282353 .458824 rgb
f
530.475 298.045 mo
532.296 304.619 528.443 311.424 521.87 313.246 cv
515.296 315.067 508.491 311.215 506.67 304.641 cv
504.849 298.067 508.701 291.262 515.274 289.441 cv
521.848 287.62 528.653 291.472 530.475 298.045 cv
cp
.364706 .368627 .54902 rgb
f
588.574 265.101 mo
594.297 263.69 598.912 259.353 600.468 253.667 cv
600.792 252.481 600.963 251.312 600.885 250.24 cv
600.494 244.884 595.73 239.524 589.114 240.629 cv
201.117 348.135 li
199.35 348.625 197.898 349.885 197.164 351.565 cv
197.164 351.565 li
195.146 356.188 199.303 361.118 204.2 359.91 cv
588.574 265.101 li
cp
.894118 .956863 .956863 rgb
f
376.889 267.857 mo
275.524 295.944 li
274.12 296.333 273.296 297.787 273.686 299.191 cv
274.061 300.546 275.434 301.369 276.806 301.062 cv
379.469 278.057 li
382.125 277.461 383.743 274.763 383.016 272.139 cv
382.749 271.175 li
382.046 268.641 379.423 267.155 376.889 267.857 cv
cp
f
578.826 251.317 mo
560.155 256.488 541.432 261.473 522.73 266.533 cv
504.093 271.577 485.554 276.955 466.939 282.076 cv
456.509 284.946 446.025 287.627 435.428 289.81 cv
432.969 290.317 434.021 294.072 436.469 293.568 cv
455.339 289.68 473.818 284.198 492.339 278.945 cv
510.959 273.664 529.669 268.701 548.355 263.663 cv
558.867 260.828 569.375 257.98 579.867 255.074 cv
582.285 254.405 581.248 250.646 578.826 251.317 cv
cp
1 1 1 rgb
f
801.327 175.287 mo
800.245 173.269 798.573 171.657 796.74 170.289 cv
801.064 169.091 li
802.412 170.377 803.569 171.81 804.433 173.429 cv
805.534 175.482 802.425 177.341 801.327 175.287 cv
f
791.418 162.837 mo
786.042 164.326 li
780.15 161.661 773.801 157.791 767.157 157.947 cv
764.825 158 764.821 154.38 767.15 154.324 cv
774.547 154.15 781.493 158.339 788.037 161.271 cv
789.132 161.762 790.269 162.279 791.418 162.837 cv
f
800.714 169.188 mo
801.064 169.091 li
801.064 169.091 801.064 169.091 801.064 169.091 cv
800.714 169.188 li
786.042 164.326 mo
786.042 164.326 li
790.813 163.004 li
786.042 164.326 li
.796078 .894118 .984314 rgb
f
796.74 170.289 mo
796.08 169.793 795.396 169.329 794.711 168.889 cv
792.027 167.162 789.161 165.725 786.253 164.421 cv
786.042 164.326 li
790.813 163.004 li
791.418 162.837 li
794.83 164.489 798.335 166.48 801.064 169.091 cv
800.714 169.188 li
796.74 170.289 li
796.74 170.289 li
.556863 .631373 .788235 rgb
f
796.74 170.289 mo
796.74 170.289 li
800.714 169.188 li
801.064 169.091 li
801.064 169.091 li
796.74 170.289 li
.835294 .909804 1 rgb
f
2011.14 760.656 mo
2011.4 759.064 2011.49 757.411 2011.38 755.721 cv
2010.72 745.365 2003.27 738.59 1995.35 735.769 cv
1993.57 734.711 1991.06 733.257 1988.04 731.877 cv
1981.32 719.905 1969.97 705.572 1956.37 688.826 cv
1951.46 682.771 1944.77 674.53 1943.12 671.857 cv
1942.21 669.918 1939.19 663.677 1923.25 632.798 cv
1923.22 632.748 li
1923.19 632.673 li
1917.87 622.367 li
1915.13 617.071 1912.36 611.726 1909.64 606.48 cv
1908.29 603.882 li
1899.63 587.174 1891.95 572.405 1888.86 566.5 cv
1887.06 558.308 1883.21 550.625 1877.6 543.862 cv
1878.87 541.587 1879.85 539.063 1880.5 536.354 cv
1885.04 532.35 1887.84 526.769 1888.23 520.739 cv
1888.62 514.635 1886.61 509.625 1884.07 505.821 cv
1881.22 493.142 1872.23 480.996 1856.24 478.733 cv
1845.15 477.179 1835.3 480.237 1827.68 487.584 cv
1827.19 488.032 1826.74 488.505 1826.31 488.989 cv
1824.18 491.264 1822.69 493.428 1821.62 494.969 cv
1820.7 496.299 1819.92 497.617 1819.25 498.897 cv
1816.46 502.005 1813.71 505.125 1810.71 508.01 cv
1806.49 512.037 1801.27 514.735 1797.14 518.788 cv
1779.44 519.148 1748.56 523.002 1710.45 541.015 cv
1709.45 541.487 1708.51 542.034 1707.61 542.644 cv
1695.64 548.238 1684.61 554.665 1674.77 561.763 cv
1670.73 564.672 1666.24 569.359 1661.57 575.265 cv
1661.14 575.338 1660.73 575.451 1660.33 575.649 cv
1651.93 579.678 1644.65 583.481 1635.14 583.768 cv
1629.58 583.941 1625.1 583.954 1620.39 580.635 cv
1617.87 578.857 1615.59 577.216 1612.8 576.184 cv
1601.19 564.437 1584.44 557.537 1564.59 557.537 cv
1547.51 557.537 1532.51 562.92 1521.13 572.169 cv
1519.11 569.036 1516.25 566.425 1512.68 564.735 cv
1503.88 560.558 1490.63 558.158 1476.33 558.158 cv
1455.16 558.158 1437.36 564.238 1424.61 574.879 cv
1422.61 572.629 1420.36 570.565 1417.82 568.738 cv
1417.72 568.663 li
1407.64 561.49 1394.77 558.283 1376.04 558.283 cv
1359.73 558.283 1348.61 559.601 1343.43 560.371 cv
1335.46 561.577 1329.16 567.271 1326.9 574.655 cv
1326.34 573.001 li
1323.53 564.648 1315.71 559.029 1306.89 559.029 cv
1274.87 559.029 li
1267.36 559.029 1260.59 563.131 1257.01 569.483 cv
1255.35 567.395 1253.26 565.604 1250.81 564.263 cv
1243.09 560.06 1230.46 557.537 1217.03 557.537 cv
1187.67 557.537 1164.57 570.853 1153.46 592.135 cv
1146.99 598.647 1143.48 607.192 1141.19 616.502 cv
1137.79 630.329 1134.22 644.05 1133.96 658.365 cv
1133.8 667.02 1134.24 675.664 1134.96 684.29 cv
1134.45 689.291 1134.11 694.329 1134.02 699.442 cv
1133.72 715.902 1134.7 732.361 1134.78 748.821 cv
1134.82 758.628 1135.15 768.507 1136.54 778.22 cv
1136.53 778.643 1136.51 779.065 1136.5 779.489 cv
1136.23 790.625 1136.35 801.801 1136.46 812.939 cv
1136.51 817.868 1137.28 825.389 1135.58 831.055 cv
1129.68 834.657 1125.73 841.133 1125.73 848.547 cv
1125.73 943.449 li
1115.02 944.146 1106.57 953.047 1106.57 963.924 cv
1106.57 968.475 li
1094.25 973.136 1085.47 985.058 1085.47 998.993 cv
1085.47 1006.46 li
1085.47 1017.79 1094.66 1026.98 1105.99 1026.98 cv
1121.1 1026.98 li
1123.09 1031.1 1125.79 1034.9 1129.16 1038.21 cv
1136.74 1045.7 1146.77 1049.81 1157.43 1049.81 cv
1157.53 1049.81 1157.63 1049.81 1157.73 1049.8 cv
1173.59 1049.69 1187.26 1040.38 1193.74 1026.98 cv
1224.61 1026.98 li
1231.13 1040.49 1244.97 1049.81 1260.92 1049.81 cv
1261.01 1049.81 1261.11 1049.81 1261.21 1049.8 cv
1277.07 1049.69 1290.76 1040.38 1297.22 1026.98 cv
1540.03 1026.98 li
1546.55 1040.49 1560.38 1049.81 1576.33 1049.81 cv
1576.43 1049.81 1576.53 1049.81 1576.62 1049.8 cv
1588.07 1049.73 1598.36 1044.83 1605.64 1037.08 cv
1606.82 1036.6 1608.05 1036.15 1609.28 1035.73 cv
1613.72 1035 1618.29 1034.78 1621.97 1034.44 cv
1626.48 1034 1631.02 1034.03 1635.42 1034.7 cv
1639.31 1036.85 1645.02 1039.71 1653.43 1043.41 cv
1666.56 1049.18 1685.81 1047.27 1693.53 1035.22 cv
1697.93 1028.36 1697.84 1019.56 1693.33 1012.77 cv
1692.73 1011.87 1692.12 1011.04 1691.5 1010.27 cv
1691.55 1010.16 1691.61 1010.03 1691.66 1009.91 cv
1693.33 1006.18 1729.45 925.287 1744.19 884.313 cv
1754.59 874.641 1770.98 864.646 1782.55 875.871 cv
1786.78 1003.52 li
1786.89 1006.94 1787.83 1010.13 1789.41 1012.93 cv
1789.3 1014.4 1789.25 1015.84 1789.26 1017.26 cv
1789.4 1034.91 1801.69 1039.88 1805.46 1040.99 cv
1813.6 1043.37 1830.32 1044.41 1833.59 1044.58 cv
1854.18 1045.72 1861.42 1043.97 1866.93 1040.55 cv
1872.18 1037.31 1875.81 1032.04 1876.88 1026.09 cv
1878.23 1018.59 1875.64 1008.13 1864.2 1002.41 cv
1867.06 978.556 1880.73 860.88 1877.13 824.132 cv
1875.81 810.705 1871.51 796.123 1866.18 781.827 cv
1866.01 773.349 1866.62 764.907 1870.15 757.361 cv
1876.02 744.769 1888.17 736.39 1902.18 737.384 cv
1902.35 737.396 1902.53 737.396 1902.69 737.384 cv
1916.62 751.494 1936.35 767.978 1952.82 775.102 cv
1953.23 775.574 1953.66 776.059 1954.12 776.556 cv
1960.9 783.99 1976.77 793.947 1990.71 792.791 cv
1998.54 792.146 2005.36 788.155 2009.45 781.84 cv
2011.15 779.204 2015.44 771.023 2011.14 760.656 cv
cp
1 1 1 rgb
f
1177.21 1009.38 mo
1177.29 1020.3 1168.5 1029.22 1157.58 1029.3 cv
1146.66 1029.37 1137.74 1020.58 1137.66 1009.66 cv
1137.58 998.741 1146.37 989.824 1157.3 989.746 cv
1168.22 989.668 1177.13 998.458 1177.21 1009.38 cv
cp
.25098 .282353 .34902 rgb
f
1105.98 1006.46 mo
1527.86 1006.46 li
1527.86 996.627 li
1527.86 991.245 1523.5 986.882 1518.12 986.882 cv
1115.73 986.882 li
1110.35 986.882 1105.98 991.245 1105.98 996.627 cv
1105.98 1006.46 li
cp
.94902 .635294 .360784 rgb
f
1591.85 894.327 mo
1594.34 894.327 1596.56 892.555 1597.04 890.015 cv
1630.79 709.785 li
1631.32 706.917 1629.43 704.156 1626.57 703.62 cv
1623.7 703.081 1620.94 704.973 1620.4 707.84 cv
1586.65 888.07 li
1586.11 890.938 1588 893.698 1590.87 894.235 cv
1591.2 894.297 1591.53 894.327 1591.85 894.327 cv
cp
.25098 .282353 .34902 rgb
f
1615.26 708.781 mo
1612.14 708.005 1608.93 708.746 1606.47 710.815 cv
1604 712.889 1602.71 715.925 1602.93 719.145 cv
1604.4 740.329 1609.91 753.446 1618.05 755.133 cv
1618.68 755.264 1619.31 755.326 1619.92 755.326 cv
1630.77 755.325 1639.71 736.059 1643.17 727.408 cv
1644.25 724.722 1644.11 721.706 1642.79 719.135 cv
1641.46 716.539 1639.17 714.722 1636.34 714.019 cv
1615.26 708.781 li
cp
1615.91 765.479 mo
1607.79 763.797 1601.63 757.566 1597.6 746.963 cv
1594.9 739.853 1593.15 730.739 1592.39 719.876 cv
1591.93 713.245 1594.59 706.993 1599.68 702.722 cv
1604.76 698.455 1611.37 696.926 1617.81 698.526 cv
1638.89 703.764 li
1644.65 705.193 1649.5 709.041 1652.2 714.319 cv
1654.91 719.609 1655.19 725.813 1652.98 731.336 cv
1641.89 759.034 1629.56 765.91 1620.05 765.91 cv
1618.6 765.91 1617.21 765.75 1615.91 765.479 cv
cp
f
1601.13 830.265 mo
1604.86 830.701 li
1611.49 831.473 1616.27 837.521 1615.5 844.144 cv
1611.33 879.953 li
1610.55 886.574 1604.5 891.36 1597.88 890.589 cv
1594.14 890.152 li
1587.52 889.381 1582.74 883.332 1583.51 876.71 cv
1587.68 840.9 li
1588.46 834.279 1594.5 829.493 1601.13 830.265 cv
cp
f
1556.32 992.202 mo
1632.78 992.202 li
1632.78 963.786 li
1632.78 948.24 1620.17 935.638 1604.63 935.638 cv
1556.32 935.638 li
1556.32 992.202 li
cp
f
1606.62 884.466 mo
1614.86 884.466 1621.54 891.147 1621.54 899.389 cv
1621.54 963.92 li
1567.56 947.313 li
1567.56 884.466 li
1606.62 884.466 li
cp
f
1596.11 1009.38 mo
1596.19 1020.3 1587.4 1029.22 1576.48 1029.3 cv
1565.56 1029.37 1556.64 1020.58 1556.56 1009.66 cv
1556.49 998.741 1565.28 989.824 1576.2 989.746 cv
1587.12 989.668 1596.04 998.458 1596.11 1009.38 cv
cp
f
1584.29 1009.46 mo
1584.33 1013.86 1580.79 1017.45 1576.39 1017.48 cv
1572 1017.51 1568.41 1013.97 1568.38 1009.58 cv
1568.35 1005.18 1571.89 1001.6 1576.28 1001.56 cv
1580.68 1001.53 1584.26 1005.07 1584.29 1009.46 cv
cp
.917647 .909804 1 rgb
f
1280.69 1009.38 mo
1280.77 1020.3 1271.98 1029.22 1261.06 1029.3 cv
1250.14 1029.37 1241.22 1020.58 1241.14 1009.66 cv
1241.07 998.741 1249.86 989.824 1260.78 989.746 cv
1271.7 989.668 1280.62 998.458 1280.69 1009.38 cv
cp
.25098 .282353 .34902 rgb
f
1268.88 1009.46 mo
1268.91 1013.86 1265.37 1017.45 1260.98 1017.48 cv
1256.58 1017.51 1252.99 1013.97 1252.96 1009.58 cv
1252.93 1005.18 1256.47 1001.6 1260.86 1001.56 cv
1265.26 1001.53 1268.84 1005.07 1268.88 1009.46 cv
cp
.917647 .909804 1 rgb
f
1568.73 861.932 mo
1522.99 861.932 li
1510.81 861.932 1499.63 868.66 1493.93 879.42 cv
1436.99 986.882 li
1605.77 986.882 li
1601.58 893.345 li
1600.79 875.773 1586.32 861.932 1568.73 861.932 cv
cp
1 .882353 .392157 rgb
f
1551.73 861.932 mo
1505.99 861.932 li
1493.82 861.932 1482.64 868.66 1476.93 879.42 cv
1420 986.882 li
1588.77 986.882 li
1584.58 893.345 li
1583.8 875.773 1569.32 861.932 1551.73 861.932 cv
cp
.94902 .635294 .360784 rgb
f
1311.11 969.852 mo
1383.08 969.852 li
1383.08 848.546 li
1311.11 848.546 li
1311.11 969.852 li
cp
f
1383.08 969.852 mo
1504.38 969.852 li
1504.38 848.546 li
1383.08 848.546 li
1383.08 969.852 li
cp
1 .882353 .392157 rgb
f
1434.53 879.278 mo
1452.93 879.278 li
1452.93 848.546 li
1434.53 848.546 li
1434.53 879.278 li
cp
.94902 .635294 .360784 rgb
f
1311.11 848.994 mo
1383.08 848.994 li
1383.08 727.689 li
1311.11 727.689 li
1311.11 848.994 li
cp
f
1383.08 848.994 mo
1504.38 848.994 li
1504.38 727.689 li
1383.08 727.689 li
1383.08 848.994 li
cp
1 .882353 .392157 rgb
f
1434.53 758.421 mo
1452.93 758.421 li
1452.93 727.689 li
1434.53 727.689 li
1434.53 758.421 li
cp
.94902 .635294 .360784 rgb
f
1146.24 969.852 mo
1218.21 969.852 li
1218.21 848.546 li
1146.24 848.546 li
1146.24 969.852 li
cp
f
1218.21 969.852 mo
1339.51 969.852 li
1339.51 848.546 li
1218.21 848.546 li
1218.21 969.852 li
cp
1 .882353 .392157 rgb
f
1269.66 879.278 mo
1288.06 879.278 li
1288.06 848.546 li
1269.66 848.546 li
1269.66 879.278 li
cp
.94902 .635294 .360784 rgb
f
1160.38 848.994 mo
1209.67 848.994 li
1209.67 765.91 li
1160.38 765.91 li
1160.38 848.994 li
cp
f
1209.67 848.994 mo
1292.76 848.994 li
1292.76 765.91 li
1209.67 765.91 li
1209.67 848.994 li
cp
1 .882353 .392157 rgb
f
1244.92 786.959 mo
1257.52 786.959 li
1257.52 765.91 li
1244.92 765.91 li
1244.92 786.959 li
cp
.94902 .635294 .360784 rgb
f
1226.57 1006.46 mo
1648.45 1006.46 li
1648.45 996.627 li
1648.45 991.245 1644.09 986.882 1638.71 986.882 cv
1236.32 986.882 li
1230.93 986.882 1226.57 991.245 1226.57 996.627 cv
1226.57 1006.46 li
cp
1 .882353 .392157 rgb
f
1520.22 963.92 mo
1520.22 986.882 li
1478.92 986.882 li
1478.92 975.401 li
1433.87 975.401 li
1433.87 986.882 li
1416.47 986.882 li
1416.47 975.401 li
1371.41 975.401 li
1371.41 986.882 li
1330.11 986.882 li
1330.11 963.92 li
1520.22 963.92 li
cp
.819608 .552941 .231373 rgb
f
1127.08 986.882 mo
1343.65 986.882 li
1343.65 963.92 li
1127.08 963.92 li
1127.08 986.882 li
cp
f
1533.76 963.92 mo
1533.76 986.882 li
1492.46 986.882 li
1492.46 975.401 li
1447.4 975.401 li
1447.4 986.882 li
1430 986.882 li
1430 975.401 li
1384.95 975.401 li
1384.95 986.882 li
1343.65 986.882 li
1343.65 963.92 li
1533.76 963.92 li
cp
1 .721569 .392157 rgb
f
1504.38 854.386 mo
1383.08 854.386 li
1380.1 854.386 1377.69 851.972 1377.69 848.995 cv
1377.69 846.019 1380.1 843.604 1383.08 843.604 cv
1504.38 843.604 li
1507.36 843.604 1509.77 846.019 1509.77 848.995 cv
1509.77 851.972 1507.36 854.386 1504.38 854.386 cv
cp
.160784 .2 .278431 rgb
f
1339.51 854.386 mo
1218.21 854.386 li
1215.23 854.386 1212.82 851.972 1212.82 848.995 cv
1212.82 846.019 1215.23 843.604 1218.21 843.604 cv
1339.51 843.604 li
1342.49 843.604 1344.9 846.019 1344.9 848.995 cv
1344.9 851.972 1342.49 854.386 1339.51 854.386 cv
cp
f
1842.04 511.342 mo
1838.19 514.036 li
1838.19 514.036 1837.69 516.837 1839.12 520.409 cv
1840.54 523.982 1842.92 527.413 1845.53 527.033 cv
1848.14 526.653 1854.91 516.951 1852.54 514.952 cv
1850.17 512.952 1849.22 509.325 1842.04 511.342 cv
cp
.262745 .290196 .34902 rgb
f
1869.25 573.244 mo
1869.25 573.244 1919.44 669.579 1924.71 680.916 cv
1929.68 691.619 1982.16 746.463 1973.47 756.619 cv
1964.77 766.775 1921.14 730.381 1905.7 709.945 cv
1890.26 689.511 1856.05 635.927 1855.44 605.972 cv
1855.23 595.516 1865.64 564.64 1869.25 573.244 cv
cp
.94902 .470588 .447059 rgb
f
1905 642.148 mo
1888.98 611.104 1869.25 573.244 1869.25 573.244 cv
1865.64 564.64 1855.23 595.516 1855.44 605.972 cv
1855.74 620.708 1864.18 641.162 1874.51 660.576 cv
1880.08 660.031 1892.69 657.069 1905 642.148 cv
cp
.282353 .596078 .627451 rgb
f
1665.21 1017.44 mo
1664.07 1013.27 1661.94 1010.69 1661.65 1006.86 cv
1661.63 1006.6 1665.18 993.847 1665.33 993.481 cv
1665.96 991.903 1663.09 983.988 1659.63 986.385 cv
1652.8 991.11 1652.35 981.304 1651.49 984.094 cv
1648.9 992.397 1637.69 1011.46 1640.31 1013.57 cv
1643.53 1016.16 1652.67 1020.66 1661.69 1024.63 cv
1668.33 1027.55 1675.48 1025.37 1676.26 1024.15 cv
1672.46 1018.45 1670.53 1022.96 1665.21 1017.44 cv
cp
.25098 .282353 .34902 rgb
f
1838.2 1014.96 mo
1833.54 1012.92 1832.95 1008.76 1830.96 1004.82 cv
1830.83 1004.56 1830.06 998.902 1830.06 998.45 cv
1830.03 996.499 1824.39 991.315 1821.76 995.38 cv
1816.58 1003.39 1810.91 990.873 1811.21 994.217 cv
1812.1 1004.17 1807.53 1020.22 1811.24 1021.31 cv
1819.14 1023.63 1856 1026.32 1856.7 1022.45 cv
1857.12 1020.13 1846.27 1018.49 1838.2 1014.96 cv
cp
f
1696.77 692.887 mo
1704.55 672.736 1717.19 660.262 1717.67 658.771 cv
1760.88 673.632 1805.1 673.764 1815.88 687.461 cv
1815.18 690.369 1819.18 712.229 1820.2 722.729 cv
1821.58 736.888 1853.16 789.971 1856.71 826.132 cv
1860.39 863.64 1843.49 1002.85 1843.49 1002.85 cv
1807.28 1002.85 li
1801.92 840.922 li
1762.41 751.944 li
1762.41 751.944 1738.25 835.815 1728.14 867.837 cv
1717.13 902.689 1672.94 1001.54 1672.94 1001.54 cv
1637.75 989.151 li
1637.75 989.151 1669.01 883.207 1676.26 840.922 cv
1683.57 798.263 1689.58 711.528 1696.77 692.887 cv
cp
.329412 .403922 .54902 rgb
f
1819.26 715.071 mo
1818.31 708.245 1817.03 700.188 1816.32 694.483 cv
1805.55 690.79 1791.66 685.885 1790.36 684.717 cv
1788.2 682.788 1786.72 677.568 1783.26 676.661 cv
1779.8 675.753 1719.08 660.576 1719.08 660.576 cv
1719.08 660.576 1745.99 685.397 1770.5 696.858 cv
1789.66 705.816 1810.9 712.557 1819.26 715.071 cv
cp
.262745 .290196 .34902 rgb
f
1802.41 539.286 mo
1808.06 537.396 1825.2 536.665 1839.57 541.927 cv
1857.07 548.333 1871.51 562.562 1869.32 580.983 cv
1865.79 610.813 1825.71 682.897 1819.52 706.049 cv
1808.1 705.149 1797.15 702.026 1785.9 697.318 cv
1782.89 696.062 1788.71 681.649 1785.65 680.179 cv
1784.09 679.43 1773.67 691.697 1772.09 690.898 cv
1755.82 682.672 1736.74 670.441 1715.87 658.771 cv
1720.36 649.713 1724.11 641.872 1728.32 631.978 cv
1744.79 593.265 1770.03 550.114 1802.41 539.286 cv
cp
1 .882353 .392157 rgb
f
1839.76 542.572 mo
1839.76 542.572 1832.79 539.083 1829.13 540.7 cv
1825.47 542.317 1828.45 572.527 1828.2 578.569 cv
1827.94 584.611 1827.11 600.354 1828.59 599.93 cv
1830.07 599.504 1846.87 559.422 1847.36 553.294 cv
1847.86 547.167 1839.76 542.572 1839.76 542.572 cv
cp
.360784 .745098 .776471 rgb
f
1843.89 522.876 mo
1830.8 541.351 li
1829.71 543.598 1830.33 555.475 1841.23 555.479 cv
1844.25 555.48 1845.86 550.343 1845.99 547.533 cv
1849.04 530.701 li
1843.89 522.876 li
cp
1 .52549 .478431 rgb
f
1847.45 516.16 mo
1842.82 526.673 li
1841.57 530.256 1843.38 534.192 1846.93 535.538 cv
1849.77 536.613 1851.66 536.804 1855.43 536.721 cv
1858.57 536.652 1860.46 533.829 1860.86 529.759 cv
1861.38 524.478 1860.36 519.466 1859.67 516.815 cv
1858.08 510.771 1850.97 509.529 1847.45 516.16 cv
cp
f
1859.82 526.565 mo
1859.82 526.565 1856.32 526.627 1851.8 525.033 cv
1851.8 525.033 1852.05 527.663 1853.63 529.1 cv
1855.2 530.537 1857.81 529.856 1859.82 526.565 cv
cp
1 1 1 rgb
f
1844.65 518.383 mo
1844.38 517.205 1843.71 515.516 1842.16 516.771 cv
1839.9 518.596 1841.16 524.333 1844.18 524.152 cv
1846.42 524.019 1844.79 519.003 1844.65 518.383 cv
cp
1 .52549 .478431 rgb
f
1856.11 523.553 mo
1856.86 523.43 1857.51 523.151 1858.11 522.701 cv
1858.57 522.36 1859.01 523.126 1858.56 523.464 cv
1857.91 523.952 1857.15 524.272 1856.35 524.405 cv
1855.79 524.498 1855.55 523.646 1856.11 523.553 cv
cp
.776471 .423529 .403922 rgb
f
1796.43 563.551 mo
1777.18 571.277 1721.36 594.486 1705.82 611.217 cv
1697.79 619.863 1639.14 707.583 1627.53 700.941 cv
1615.93 694.3 1665.98 593.377 1686.76 578.399 cv
1732.27 545.594 1791.95 539.068 1802.41 539.286 cv
1812.86 539.504 1805.09 560.074 1796.43 563.551 cv
cp
1 .52549 .478431 rgb
f
1964.29 755.632 mo
1965.02 757.595 1966.6 759.803 1969.26 762.718 cv
1974.2 768.132 1988.91 775.821 1992.23 770.689 cv
1994.4 767.352 1982.25 758.3 1982.53 757.275 cv
1982.88 755.999 1985.05 759.515 1989.53 758.196 cv
1992.82 757.226 1989.49 755.146 1987.44 754.82 cv
1986.41 754.657 1977.86 748.146 1970.94 748.356 cv
1965.85 748.512 1962.72 751.428 1964.29 755.632 cv
cp
.94902 .470588 .447059 rgb
f
1844.25 514.949 mo
1837 523.131 li
1834.89 520.618 li
1841.59 513.744 li
1844.25 514.949 li
cp
.905882 .94902 .94902 rgb
f
1864.56 514.661 mo
1864.56 514.661 1864.46 500.614 1853.38 499.05 cv
1844.46 497.792 1841.01 502.998 1838.49 506.641 cv
1835.62 510.798 1836.04 513.781 1836.04 513.781 cv
1843.92 515.754 li
1843.92 515.754 1857.95 518.308 1860.44 517.829 cv
1862.93 517.349 1864.56 514.661 1864.56 514.661 cv
cp
1 .882353 .392157 rgb
f
1864.56 514.661 mo
1864.56 514.661 1870.37 519.077 1866.34 521.4 cv
1862.71 523.489 1846.1 517.08 1845.27 516.786 cv
1843.58 516.186 1840.94 515.442 1841.25 515.086 cv
1841.88 514.36 1857.4 516.117 1858.68 516.114 cv
1863.66 516.106 1864.56 514.661 1864.56 514.661 cv
cp
.94902 .635294 .360784 rgb
f
1858.27 508.955 mo
1858.27 508.955 1856.21 504.132 1851.13 502.433 cv
1846.05 500.733 1841.62 502.64 1841.62 502.64 cv
1841.62 502.64 1844.63 500.754 1847.5 500.656 cv
1850.36 500.557 1854.06 501.812 1855.7 503.472 cv
1857.99 505.803 1858.27 508.955 1858.27 508.955 cv
cp
f
1762.41 753.44 mo
1762.94 753.44 1763.46 753.16 1763.73 752.663 cv
1771.46 738.551 1782.54 730.286 1782.66 730.204 cv
1783.32 729.714 1783.46 728.777 1782.97 728.111 cv
1782.48 727.446 1781.55 727.304 1780.88 727.795 cv
1780.4 728.145 1769.15 736.539 1761.1 751.226 cv
1760.71 751.95 1760.97 752.859 1761.7 753.257 cv
1761.92 753.382 1762.17 753.44 1762.41 753.44 cv
cp
.262745 .290196 .34902 rgb
f
1770.84 741.178 mo
1770.88 741.177 li
1787.29 740.771 li
1788.12 740.75 1788.77 740.063 1788.75 739.238 cv
1788.73 738.412 1788.04 737.742 1787.22 737.779 cv
1770.81 738.186 li
1769.98 738.205 1769.33 738.892 1769.35 739.718 cv
1769.37 740.531 1770.04 741.178 1770.84 741.178 cv
cp
f
1851.34 537.114 mo
1851.51 537.02 1851.63 536.847 1851.65 536.641 cv
1851.67 536.312 1851.43 536.022 1851.1 535.993 cv
1851.08 535.991 1848.47 535.745 1846.34 534.044 cv
1845.5 533.372 1844.78 532.416 1844.21 531.204 cv
1844.07 530.904 1843.71 530.776 1843.42 530.917 cv
1843.12 531.059 1842.99 531.415 1843.13 531.714 cv
1843.78 533.093 1844.61 534.191 1845.6 534.98 cv
1848.02 536.914 1850.88 537.176 1851 537.187 cv
1851.12 537.197 1851.24 537.169 1851.34 537.114 cv
cp
.776471 .423529 .403922 rgb
f
1752.05 585.987 mo
1749.9 589.367 1747.82 592.831 1745.81 596.356 cv
1844.34 648.387 li
1846.19 644.327 1848.05 640.24 1849.86 636.167 cv
1752.05 585.987 li
cp
.8 .8 .8 rgb
f
1835.82 666.883 mo
1736.09 614.87 li
1734.31 618.549 1732.6 622.233 1730.97 625.898 cv
1830.24 679.096 li
1831.99 675.206 1833.87 671.116 1835.82 666.883 cv
cp
f
1802.41 539.286 mo
1794.37 539.118 1762.33 539.178 1719.21 559.563 cv
1718.51 565.748 1722.27 588.143 1730.54 596.883 cv
1751.47 588.86 1781.28 571.06 1796.43 563.551 cv
1804.79 559.406 1812.86 539.504 1802.41 539.286 cv
cp
.360784 .745098 .776471 rgb
f
1627.28 690.815 mo
1627.28 690.815 1618.85 696.858 1616.47 700.603 cv
1614.09 704.347 1612.81 709.112 1615.19 710.559 cv
1617.58 712.006 1617.24 710.984 1618.94 711.58 cv
1620.64 712.176 1622.94 712.687 1624.38 713.027 cv
1625.83 713.367 1630.08 713.878 1630.51 713.623 cv
1630.94 713.367 1632.16 701.879 1634.19 699.156 cv
1636.21 696.433 1631.49 687.569 1627.28 690.815 cv
cp
1 .52549 .478431 rgb
f
1786.84 681.792 mo
1786.27 681.792 1785.7 681.615 1785.22 681.249 cv
1784.03 680.354 1783.79 678.662 1784.69 677.474 cv
1784.8 677.326 1795.86 662.614 1803.38 649.81 cv
1810.89 637.015 1824.68 604.675 1824.81 604.349 cv
1825.4 602.979 1826.98 602.338 1828.35 602.924 cv
1829.72 603.507 1830.36 605.091 1829.78 606.461 cv
1829.2 607.801 1815.71 639.448 1808.02 652.541 cv
1800.35 665.616 1789.1 680.568 1788.99 680.719 cv
1788.46 681.422 1787.65 681.792 1786.84 681.792 cv
cp
.94902 .635294 .360784 rgb
f
1239.62 660.724 mo
1236.14 662.461 1227.21 664.695 1215.79 664.695 cv
1181.9 664.695 1166.76 645.207 1166.76 622.739 cv
1166.76 593.693 1189.6 578.053 1217.03 578.053 cv
1227.83 578.053 1236.89 580.039 1240.99 582.273 cv
1236.14 600.396 li
1231.92 598.658 1225.72 596.921 1217.9 596.921 cv
1203.87 596.921 1191.46 604.493 1191.46 621.126 cv
1191.46 635.525 1201.26 645.58 1218.52 645.58 cv
1224.97 645.58 1232.05 644.338 1236.02 642.725 cv
1239.62 660.724 li
cp
.360784 .745098 .776471 rgb
f
1299.2 625.719 mo
1294.73 610.947 li
1293.24 606.23 1291.51 600.148 1290.02 595.307 cv
1289.77 595.307 li
1288.4 600.148 1287.16 606.23 1285.8 611.071 cv
1281.82 625.719 li
1299.2 625.719 li
cp
1278.47 642.849 mo
1273.13 663.206 li
1248.43 663.206 li
1274.87 579.543 li
1306.9 579.543 li
1335.08 663.206 li
1309.01 663.206 li
1302.8 642.849 li
1278.47 642.849 li
cp
f
1369.71 615.54 mo
1376.66 615.54 li
1385.84 615.54 1391.3 611.816 1391.3 605.485 cv
1391.3 599.155 1386.59 595.928 1378.64 595.928 cv
1373.43 595.928 1370.95 596.176 1369.71 596.424 cv
1369.71 615.54 li
cp
1346.49 580.66 mo
1353.07 579.667 1363.38 578.798 1376.04 578.798 cv
1390.06 578.798 1399.37 580.784 1405.83 585.377 cv
1411.17 589.225 1414.52 595.307 1414.52 603.748 cv
1414.52 614.92 1405.46 621.995 1399.62 623.856 cv
1399.62 624.354 li
1405.21 626.712 1408.31 632.174 1410.67 639.125 cv
1413.52 647.689 1416.38 659.979 1417.99 663.206 cv
1394.16 663.206 li
1392.79 660.724 1390.56 654.89 1387.71 644.09 cv
1385.1 634.036 1381.75 632.05 1373.93 632.05 cv
1369.71 632.05 li
1369.71 663.206 li
1346.49 663.206 li
1346.49 580.66 li
cp
f
1507.24 658.737 mo
1500.04 661.096 1487.26 664.075 1474.84 664.075 cv
1456.47 664.075 1443.94 659.606 1435.74 651.786 cv
1427.8 644.338 1423.58 634.16 1423.58 622.864 cv
1423.58 593.941 1446.54 578.674 1476.33 578.674 cv
1489.12 578.674 1498.92 580.908 1503.89 583.267 cv
1498.92 601.638 li
1493.46 599.403 1487.01 597.541 1475.59 597.541 cv
1460.94 597.541 1448.28 604.741 1448.28 620.754 cv
1448.28 635.649 1459.45 645.455 1475.59 645.455 cv
1479.44 645.455 1483.04 645.083 1484.28 644.587 cv
1484.28 631.057 li
1471.37 631.057 li
1471.37 613.058 li
1507.24 613.058 li
1507.24 658.737 li
cp
f
1543.74 621.498 mo
1543.74 635.897 1551.68 646.572 1564.34 646.572 cv
1577.13 646.572 1584.7 635.897 1584.7 621.498 cv
1584.7 607.1 1576.75 596.176 1564.22 596.176 cv
1551.68 596.176 1543.74 607.1 1543.74 621.498 cv
cp
1609.65 620.878 mo
1609.65 646.2 1591.9 664.695 1563.1 664.695 cv
1535.54 664.695 1518.79 646.2 1518.79 622.119 cv
1518.79 596.549 1537.16 578.053 1564.59 578.053 cv
1592.89 578.053 1609.65 596.3 1609.65 620.878 cv
cp
f
793.52 1032.1 mo
784.42 1041 772.299 1039.46 750.295 1036.67 cv
747.909 1036.38 745.658 1036.09 744.589 1035.99 cv
741.195 1035.68 734.134 1034.15 728.875 1027 cv
720.074 1021.69 713.137 1012.91 705.243 1005.91 cv
688.237 990.851 668.434 998.446 650.271 1006.46 cv
650.408 1008.24 650.507 1010.02 650.482 1011.75 cv
650.246 1028.41 638.56 1033.45 634.993 1034.6 cv
628.205 1036.77 615.189 1037.95 611.373 1038.25 cv
593.67 1039.68 587.193 1038.2 581.972 1035.16 cv
576.701 1032.09 572.984 1026.95 571.766 1021.07 cv
570.199 1013.46 572.624 1002.7 584.434 996.955 cv
583.128 992.678 582.817 988.054 582.519 983.504 cv
582.494 983.206 582.482 982.895 582.457 982.584 cv
530.617 991.696 li
530.654 992.405 530.679 993.126 530.679 993.848 cv
530.679 1010.42 520.485 1024.65 506.04 1030.61 cv
502.684 1033.6 498.681 1035.75 494.367 1037.27 cv
479.772 1042.38 462.617 1041.2 447.438 1040.7 cv
429.984 1040.12 412.53 1039.62 395.076 1039.25 cv
384.882 1039.04 373.569 1037.29 362.953 1038.02 cv
359.484 1039.81 355.407 1040.92 348.135 1040.92 cv
344.02 1040.92 338.898 1040.57 332.284 1039.77 cv
328.194 1039.28 314.284 1037.48 307.185 1034.9 cv
303.903 1033.69 293.784 1028.87 292.603 1014.78 cv
289.408 1013.58 286.524 1011.59 284.261 1008.95 cv
280.482 1004.56 278.742 998.782 279.463 993.039 cv
280.905 981.428 282.396 968.586 283.814 955.271 cv
283.093 951.804 282.235 948.397 280.942 945.239 cv
276.268 933.865 264.756 933.89 254.55 937.159 cv
246.681 939.683 239.333 943.86 232.347 948.534 cv
213.053 968.66 197.054 981.577 195.5 982.832 cv
194.68 983.491 193.822 984.063 192.927 984.573 cv
192.529 985.493 192.181 986.438 191.895 987.383 cv
192.367 988.601 192.802 989.894 193.163 991.323 cv
195.177 999.205 192.33 1007.55 185.916 1012.56 cv
174.603 1021.41 155.719 1016.81 145.177 1006.95 cv
129.588 992.38 126.157 986.86 125.025 985.046 cv
121.52 979.377 119.232 970.588 126.617 959.523 cv
125.585 954.525 126.443 949.28 129.103 944.842 cv
158.852 895.178 191.547 838.49 196.072 827.401 cv
198.31 814.211 198.77 790.43 199.267 765.293 cv
199.838 735.644 200.485 702.178 204.202 674.431 cv
201.865 655.883 193.337 563.728 247.066 516.115 cv
248.894 514.387 250.696 512.895 252.523 511.603 cv
258.864 506.717 265.788 502.552 273.11 499.245 cv
277.486 497.269 282.248 495.814 287.27 494.907 cv
286.66 491.588 286.536 487.995 287.406 484.501 cv
288.14 481.505 295.425 463.791 309.771 457.338 cv
317.329 453.945 325.795 454.144 332.98 457.91 cv
333.403 458.122 333.813 458.358 334.224 458.594 cv
344.144 460.136 352.374 465.729 356.451 473.984 cv
360.591 482.4 359.634 492.122 353.965 499.357 cv
353.604 499.805 353.207 500.29 352.784 500.787 cv
352.386 501.508 351.963 502.204 351.516 502.875 cv
351.218 505.771 350.683 508.879 349.788 512.025 cv
349.738 512.236 li
355.867 517.756 360.777 524.319 364.246 531.716 cv
364.78 532.388 365.29 533.071 365.775 533.78 cv
365.887 533.954 366.048 534.19 366.173 534.402 cv
366.695 535.21 367.192 536.055 367.665 536.925 cv
367.764 537.111 367.888 537.348 368.013 537.597 cv
368.498 538.529 368.945 539.524 369.355 540.518 cv
369.442 540.729 369.529 540.953 369.616 541.189 cv
369.927 541.973 370.213 542.78 370.486 543.614 cv
370.536 543.775 370.611 543.986 370.673 544.21 cv
370.947 545.105 371.208 546.05 371.444 547.007 cv
371.581 547.579 li
371.779 548.412 371.941 549.208 372.103 550.016 cv
372.19 550.5 li
372.364 551.433 372.5 552.328 372.637 553.235 cv
372.712 553.882 li
372.824 554.69 372.911 555.473 372.998 556.269 cv
373.035 556.679 li
373.122 557.562 373.184 558.432 373.246 559.327 cv
373.296 560.073 li
373.333 560.856 373.383 561.627 373.408 562.422 cv
373.42 562.795 li
373.458 563.641 373.47 564.499 373.495 565.381 cv
373.507 566.251 li
373.507 567.01 373.52 567.806 373.52 568.613 cv
373.507 569.285 li
373.507 570.005 373.495 570.714 373.482 571.423 cv
373.47 572.393 li
373.458 573.176 373.433 573.959 373.408 574.742 cv
373.221 579.926 li
373.171 580.871 373.134 581.803 373.084 582.748 cv
373.072 583.021 li
372.998 584.563 372.923 586.241 372.836 587.933 cv
372.55 593.613 372.251 599.506 372.165 605.074 cv
372.165 605.212 li
372.14 607.076 372.127 608.867 372.152 610.57 cv
372.165 610.694 li
372.19 612.46 372.251 614.113 372.326 615.654 cv
372.339 615.804 li
372.389 616.637 372.438 617.395 372.5 618.153 cv
373.259 627.29 375.099 630.833 375.857 631.927 cv
382.421 641.499 405.742 653.186 421.17 660.918 cv
423.532 662.099 425.857 663.268 428.132 664.423 cv
428.592 664.262 429.101 664.15 429.698 664.162 cv
435.068 664.237 440.19 665.642 445.25 667.295 cv
445.859 667.258 446.468 667.221 447.065 667.195 cv
458.402 666.624 469.019 666.35 479.847 662.459 cv
489.519 658.966 499.302 653.831 507.246 646.944 cv
509.596 643.625 511.808 640.182 513.81 636.602 cv
518.124 628.906 521.48 620.938 522.574 612.136 cv
523.208 607.002 523.295 601.83 523.245 596.646 cv
521.244 582.188 522.251 566.537 526.652 551.06 cv
526.714 550.861 li
528.292 545.516 531.015 540.058 534.993 534.252 cv
532.383 514.25 li
531.897 510.483 532.271 506.692 533.477 503.149 cv
533.713 502.416 533.999 501.694 534.31 500.998 cv
534.471 500.638 534.658 500.265 534.856 499.892 cv
534.894 499.817 li
536.646 496.374 539.009 493.464 541.806 491.214 cv
543.621 488.716 545.995 486.615 548.805 485.123 cv
551.639 483.619 554.747 482.823 557.855 482.736 cv
558.949 482.09 560.08 481.543 561.261 481.096 cv
561.373 480.983 561.472 480.859 561.584 480.747 cv
566.979 474.991 574.587 472.231 582.569 473.102 cv
583.949 473.213 585.403 473.438 586.969 473.76 cv
589.033 474.196 591.035 474.892 592.974 475.799 cv
593.807 475.737 594.64 475.675 595.473 475.6 cv
597.337 475.452 599.103 475.165 600.818 474.768 cv
605.778 471.249 610.005 468.365 612.977 466.364 cv
614.642 465.108 616.395 463.953 618.223 462.92 cv
618.732 462.61 619.254 462.324 619.776 462.063 cv
620.398 461.752 621.007 461.441 621.629 461.155 cv
623.854 458.706 625.93 456.12 627.944 453.497 cv
628.068 452.987 628.192 452.465 628.342 451.943 cv
629.821 446.635 632.133 442.01 634.333 438.393 cv
635.055 435.819 636.111 433.333 637.454 431.021 cv
643.11 421.312 652.819 416.986 666.271 418.179 cv
667.041 418.242 li
670.112 418.465 672.809 419.024 675.196 419.808 cv
677.086 419.746 679.063 419.907 681.101 420.367 cv
686.87 421.66 691.78 425.128 694.925 430.113 cv
699.413 437.225 699.674 446.2 695.621 453.559 cv
694.913 454.84 694.092 456.045 693.185 457.152 cv
692.936 458.246 692.426 460.285 691.556 462.783 cv
704.671 466.152 713.97 470.814 721.131 477.428 cv
721.454 477.714 721.765 478 722.075 478.311 cv
722.548 478.783 li
722.834 479.069 723.107 479.354 723.381 479.641 cv
729.311 485.757 749.425 507.289 765.872 534.103 cv
789.877 573.238 795.695 606.592 783.177 633.232 cv
778.664 642.829 767.662 657.089 741.767 660.061 cv
741.68 663.752 741.369 666.935 740.81 669.906 cv
740.76 670.204 740.673 670.614 740.537 671.124 cv
740.574 671.348 740.611 671.56 740.661 671.771 cv
740.772 672.467 li
740.909 673.213 741.046 673.996 741.183 674.804 cv
744.49 694.532 748.132 728.894 752.632 782.958 cv
756.262 826.419 762.863 877.513 768.184 918.562 cv
770.77 938.589 773.008 955.868 774.4 968.486 cv
775.171 975.448 775.643 980.645 775.842 984.374 cv
775.941 986.102 776.066 988.265 775.929 990.64 cv
777.222 991.348 778.54 992.069 779.584 992.628 cv
789.791 998.148 798.604 1002.91 799.822 1014.73 cv
800.481 1021.21 798.194 1027.54 793.52 1032.1 cv
cp
1 1 1 rgb
f
344.12 541.358 mo
364.394 549.804 340.991 617.381 358.944 643.537 cv
377.577 670.684 449.747 689.957 442.634 702.421 cv
437.712 711.047 345.221 712.585 314.215 664.572 cv
291.742 629.771 320.87 531.671 344.12 541.358 cv
cp
.94902 .486275 .47451 rgb
f
510.166 993.851 mo
510.166 1004.48 501.549 1013.1 490.919 1013.1 cv
480.29 1013.1 471.673 1004.48 471.673 993.851 cv
471.673 983.222 480.29 974.604 490.919 974.604 cv
501.549 974.604 510.166 983.222 510.166 993.851 cv
cp
.262745 .290196 .34902 rgb
f
418.054 705.982 mo
466.299 969.136 li
488.26 966.391 li
439.864 702.421 li
418.054 705.982 li
cp
460.938 983.025 mo
457.803 983.025 455.048 980.787 454.468 977.628 cv
405.493 710.495 li
355.657 718.632 li
352.063 719.218 348.684 716.783 348.097 713.195 cv
347.511 709.606 349.945 706.222 353.534 705.636 cv
383.255 700.782 li
384.208 699.126 385.872 697.896 387.905 697.563 cv
444.115 688.384 li
447.648 687.809 451.006 690.166 451.653 693.695 cv
500.67 961.063 li
640.357 936.188 li
643.837 935.762 647.037 938.114 647.654 941.56 cv
648.272 945.005 646.087 948.332 642.679 949.132 cv
608.308 957.205 li
608.081 957.259 607.851 957.299 607.62 957.329 cv
461.762 982.975 li
461.485 983.009 461.21 983.025 460.938 983.025 cv
cp
f
352.063 619.858 mo
349.51 589.17 359.684 547.842 344.12 541.357 cv
328.272 534.755 309.7 578.226 306.592 617.599 cv
326.22 625.401 344.147 622.084 352.063 619.858 cv
cp
.937255 .854902 .772549 rgb
f
641.229 938.963 mo
465.693 970.762 li
436.803 811.284 li
612.339 779.485 li
641.229 938.963 li
cp
.94902 .635294 .360784 rgb
f
494.971 998.285 mo
494.971 1008.92 486.354 1017.53 475.725 1017.53 cv
465.095 1017.53 456.479 1008.92 456.479 998.285 cv
456.479 987.656 465.095 979.039 475.725 979.039 cv
486.354 979.039 494.971 987.656 494.971 998.285 cv
cp
.262745 .290196 .34902 rgb
f
483.892 998.285 mo
483.892 1002.8 480.235 1006.45 475.725 1006.45 cv
471.214 1006.45 467.558 1002.8 467.558 998.285 cv
467.558 993.774 471.214 990.118 475.725 990.118 cv
480.235 990.118 483.892 993.774 483.892 998.285 cv
cp
1 1 1 rgb
f
543.255 832.836 mo
611.461 823.93 li
603.526 801.266 li
543.255 832.836 li
cp
.866667 .529412 .278431 rgb
f
538.19 813.083 mo
603.526 801.266 li
607.347 821.183 li
543.255 832.836 li
538.19 813.083 li
cp
1 1 1 rgb
f
164.971 986.277 mo
165.284 981.901 164.111 978.719 165.12 974.96 cv
165.188 974.707 172.864 963.696 173.126 963.396 cv
174.258 962.098 174.179 953.565 170.061 954.695 cv
161.943 956.923 164.806 947.391 163.038 949.768 cv
157.776 956.844 140.654 971.318 142.454 974.214 cv
144.663 977.769 151.888 985.146 159.188 991.972 cv
164.558 996.992 172.128 997.307 173.288 996.401 cv
171.569 989.681 168.203 993.343 164.971 986.277 cv
cp
.25098 .282353 .34902 rgb
f
338.31 1011.55 mo
334.318 1009.49 334.031 1005.8 332.505 1002.22 cv
332.403 1001.98 332.046 996.952 332.067 996.555 cv
332.157 994.835 327.482 989.952 324.939 993.383 cv
319.926 1000.15 314.901 988.955 314.978 991.916 cv
315.203 1000.73 311.006 1014.45 314.209 1015.62 cv
321.032 1018.11 353.339 1022.56 354.173 1019.19 cv
354.674 1017.17 345.213 1015.12 338.31 1011.55 cv
cp
f
336.955 643.417 mo
336.955 643.417 356.541 750.959 362.321 787.992 cv
368.551 827.907 345.335 996.799 345.335 996.799 cv
299.815 995.578 li
299.815 995.578 318.418 846.462 310.669 814.671 cv
305.272 792.529 257.993 654.605 267.208 639.692 cv
276.422 624.779 336.955 643.417 336.955 643.417 cv
cp
.294118 .321569 .4 rgb
f
340.458 662.751 mo
224.905 674.434 li
224.905 674.435 li
342.354 673.268 li
341.675 669.495 341.038 665.963 340.458 662.751 cv
cp
.2 .247059 .337255 rgb
f
216.03 832.306 mo
224.711 785.919 210.623 637.989 247.799 624.11 cv
284.976 610.23 312.455 646.668 312.455 646.668 cv
312.455 646.668 290.49 782.758 282.672 826.524 cv
270.103 896.889 182.683 966.815 182.683 966.815 cv
146.704 955.382 li
146.704 955.382 214.029 842.999 216.03 832.306 cv
cp
.294118 .321569 .4 rgb
f
224.901 674.435 mo
224.901 674.435 205.927 552.155 281.565 517.935 cv
308.008 505.972 359.098 523.614 348.01 571.338 cv
341.293 600.247 338.478 605.296 338.478 627.018 cv
338.478 635.328 340.895 665.172 340.895 665.172 cv
224.901 674.435 li
cp
1 .941176 .870588 rgb
f
331.445 489.356 mo
331.445 489.356 330.913 479.975 323.477 476.084 cv
315.611 471.97 307.545 488.499 307.31 489.447 cv
306.833 491.368 310.535 501.279 312.622 499.882 cv
316.563 497.245 331.445 489.356 331.445 489.356 cv
cp
.968627 .403922 .341176 rgb
f
314.082 490.139 mo
314.082 490.139 322.394 478.724 328.374 478.668 cv
336.551 478.593 340.042 483.868 337.823 486.698 cv
335.604 489.529 327.383 497.409 325.168 496.998 cv
322.954 496.586 314.082 490.139 314.082 490.139 cv
cp
.294118 .321569 .4 rgb
f
331.172 493.231 mo
331.172 493.231 333.968 492.972 334.928 490.631 cv
336.676 486.371 333.621 483.599 331.445 481.673 cv
327.185 477.905 317.778 489.809 317.778 489.809 cv
317.778 489.809 312.803 491.41 312.152 492.652 cv
309.286 498.12 310.153 501.919 310.153 501.919 cv
310.153 501.919 328.48 499.802 331.172 493.231 cv
cp
.25098 .156863 .137255 rgb
f
314.988 494.668 mo
301.144 515.593 li
300.062 518.906 308.483 530.44 314.259 530.422 cv
318.131 530.41 319.031 527.592 318.987 523.66 cv
318.176 502.003 li
314.988 494.668 li
cp
1 .52549 .478431 rgb
f
318.503 510.746 mo
318.831 519.477 li
317.239 518.35 315.104 516.53 313.626 514.083 cv
310.987 509.716 313.417 502.906 313.417 502.906 cv
314.007 504.495 315.922 508.335 318.503 510.746 cv
cp
.776471 .423529 .403922 rgb
f
319.003 490.381 mo
313.636 497.708 li
311.736 501.087 311.787 504.889 314.082 507.903 cv
315.959 510.367 319.534 511.894 323.341 512.487 cv
326.514 512.981 328.918 510.481 330.053 506.46 cv
331.524 501.244 331.396 496.021 331.172 493.231 cv
330.66 486.869 323.732 484.345 319.003 490.381 cv
cp
1 .52549 .478431 rgb
f
329.869 500.942 mo
329.869 500.942 329.558 503.356 327.569 503.82 cv
325.58 504.284 322.541 502.243 321.964 499.172 cv
321.964 499.172 325.138 500.468 329.869 500.942 cv
cp
1 1 1 rgb
f
316.494 494.542 mo
316.29 493.844 316.193 493.124 316.14 492.399 cv
316.039 491.021 315.568 488.996 313.598 490.151 cv
310.731 491.833 311.177 498.536 314.625 498.845 cv
317.185 499.074 317.009 496.3 316.494 494.542 cv
cp
1 .52549 .478431 rgb
f
361.793 696.304 mo
361.793 696.304 373.364 696.393 377.305 697.272 cv
381.247 698.153 386.527 694.574 386.527 697.328 cv
386.527 700.082 383.229 701.064 379.92 701.701 cv
377.591 702.149 372.406 705.001 368.768 704.349 cv
365.131 703.695 357.487 697.246 361.793 696.304 cv
cp
f
359.611 708.957 mo
359.611 708.957 365.09 718.458 374.585 719.553 cv
377.826 719.927 384.928 713.853 384.928 713.853 cv
384.928 713.853 377.507 707.607 375.727 705.614 cv
372.835 702.375 365.042 694.087 360.382 696.863 cv
355.722 699.639 356.157 705.527 359.611 708.957 cv
cp
f
293.474 766.236 mo
293.048 766.236 292.613 766.151 292.197 765.971 cv
290.568 765.265 289.821 763.371 290.527 761.743 cv
300.944 737.733 306.981 734.091 308.583 733.545 cv
310.653 739.629 li
310.653 739.629 310.766 739.615 310.973 739.495 cv
310.766 739.613 305.818 742.649 296.425 764.301 cv
295.899 765.512 294.716 766.236 293.474 766.236 cv
cp
.2 .247059 .337255 rgb
f
275.58 525.958 mo
295.854 534.405 264.337 617.381 282.291 643.537 cv
300.924 670.684 373.093 689.957 365.981 702.421 cv
361.059 711.047 268.567 712.585 237.562 664.572 cv
215.088 629.771 252.33 516.272 275.58 525.958 cv
cp
1 .52549 .478431 rgb
f
276.532 614.567 mo
277.06 579.859 290.677 532.249 275.58 525.958 cv
260.542 519.693 236.115 560.249 230.614 606.826 cv
237.79 609.271 257.674 614.81 276.532 614.567 cv
cp
1 .941176 .870588 rgb
f
291.087 659.229 mo
290.535 659.229 289.975 659.099 289.454 658.823 cv
278.678 653.133 274.99 638.11 274.838 637.474 cv
274.39 635.593 275.55 633.705 277.432 633.257 cv
279.309 632.808 281.196 633.969 281.648 635.848 cv
281.708 636.088 284.809 648.451 292.725 652.634 cv
294.434 653.536 295.087 655.653 294.184 657.364 cv
293.557 658.551 292.343 659.229 291.087 659.229 cv
cp
.776471 .423529 .403922 rgb
f
276.533 618.068 mo
274.606 618.068 273.04 616.512 273.032 614.582 cv
273.012 609.763 274.225 594.802 278.913 569.313 cv
283.089 546.622 277.562 533.262 277.504 533.13 cv
276.748 531.351 277.576 529.295 279.354 528.538 cv
281.139 527.773 283.189 528.607 283.946 530.387 cv
284.209 531.006 290.353 545.838 285.801 570.579 cv
281.196 595.611 280.015 610.29 280.033 614.554 cv
280.042 616.485 278.48 618.061 276.547 618.068 cv
276.533 618.068 li
cp
.858824 .776471 .698039 rgb
f
757.388 1002.61 mo
754.597 997.275 754.483 988.674 754.37 988.266 cv
753.878 986.499 749.731 985.885 748.608 990.064 cv
746.393 998.305 738.213 988.367 739.263 991.345 cv
742.387 1000.21 743.206 1015.27 746.442 1015.56 cv
753.335 1016.19 779.789 1020.48 779.412 1016.84 cv
779.187 1014.65 759.243 1006.16 757.388 1002.61 cv
cp
.25098 .282353 .34902 rgb
f
606.712 1010.46 mo
610.455 1008.71 610.852 1005.33 612.382 1002.1 cv
612.485 1001.88 612.992 997.272 612.987 996.906 cv
612.967 995.322 619.054 969.942 621.269 973.186 cv
625.634 979.581 629.037 990.536 628.861 993.255 cv
628.337 1001.35 631.704 1014.11 628.718 1015.07 cv
622.357 1017.11 592.505 1020.05 591.859 1016.92 cv
591.472 1015.04 600.24 1013.5 606.712 1010.46 cv
cp
f
716.433 660.322 mo
715.518 658.691 609.863 638.457 605.171 642.296 cv
605.171 642.296 597.999 987.056 604.448 991.707 cv
610.897 996.357 626.201 998.696 629.595 991.405 cv
638.771 971.688 659.849 757.004 658.216 723.967 cv
660.144 734.338 721.89 985.08 726.95 991.405 cv
732.009 997.729 749.146 995.622 755.049 991.405 cv
758.511 988.933 739.426 871.37 732.195 784.667 cv
726.179 712.526 721.193 668.813 716.433 660.322 cv
cp
.760784 .929412 .94902 rgb
f
606.974 653.026 mo
708.601 658.243 li
713.38 659.304 716.285 660.058 716.433 660.322 cv
717.91 662.957 719.409 668.986 720.954 678.201 cv
702.512 675.768 657.476 669.69 636.31 665.674 cv
609.324 660.552 606.974 653.026 606.974 653.026 cv
cp
.360784 .745098 .776471 rgb
f
628.81 480.484 mo
628.81 480.484 554.793 528.205 546.384 556.667 cv
529.856 614.844 572.26 663.404 612.739 628.453 cv
629.263 614.186 628.81 480.484 628.81 480.484 cv
cp
.94902 .360784 .360784 rgb
f
653.712 447.87 mo
653.712 447.87 653.235 444.685 655.174 441.359 cv
657.38 437.573 662.198 438.459 665.558 438.702 cv
673.817 439.3 672.725 444.865 672.725 444.865 cv
655.755 454.274 li
654.26 451.562 653.334 449.1 653.712 447.87 cv
cp
.262745 .290196 .34902 rgb
f
672.725 444.865 mo
672.725 444.865 674.083 448.291 673.242 452.365 cv
672.701 454.983 668.397 466.804 665.15 465.674 cv
663.058 464.946 658.468 459.196 655.755 454.274 cv
672.725 444.865 li
cp
.352941 .376471 .419608 rgb
f
645.782 661.582 mo
646.384 661.69 646.993 661.802 647.61 661.915 cv
649.996 662.356 652.497 662.839 655.116 663.37 cv
664.356 665.249 720.237 668.391 720.645 666.184 cv
723.725 649.492 714.249 617.473 721.745 568.744 cv
727.215 533.181 719.529 520.049 717.098 511.1 cv
711.438 490.258 702.471 481.51 647.188 477.011 cv
619.874 474.786 611.176 499.623 609.055 516.41 cv
607.806 526.296 607.571 588.345 607.571 588.345 cv
607.571 588.345 606.068 625.426 604.042 641.048 cv
601.872 657.803 611.717 655.446 645.782 661.582 cv
cp
.94902 .360784 .360784 rgb
f
618.773 550.461 mo
623.05 554.697 629.057 556.037 634.629 557.636 cv
637.843 558.559 641.018 559.634 644.333 560.146 cv
649.292 560.914 670.003 563.554 673.046 563.203 cv
675.952 562.869 677.323 555.708 677.408 553.275 cv
677.494 550.848 678.793 546.516 678.714 544.092 cv
678.684 543.172 678.669 542.25 678.701 541.33 cv
678.713 541.327 679.443 535.666 678.414 534.737 cv
674.762 531.438 669.286 533.168 664.88 533.077 cv
661.411 533.004 657.933 532.82 654.49 532.371 cv
651.146 531.935 647.84 531.199 644.506 530.682 cv
641.108 530.155 637.644 529.713 634.352 528.689 cv
631.555 527.819 626.699 526.073 623.705 526.348 cv
620.972 526.598 619.869 528.18 618.021 530.34 cv
616.429 532.202 616.016 534.482 615.855 536.859 cv
615.534 541.601 615.112 546.835 618.773 550.461 cv
cp
1 1 1 rgb
f
615.306 503.464 mo
616.157 502.349 618.077 503.448 617.214 504.579 cv
611.117 512.568 609.776 522.727 609.743 532.503 cv
609.738 533.924 607.529 533.927 607.534 532.503 cv
607.568 522.38 608.992 511.737 615.306 503.464 cv
cp
.729412 .227451 .227451 rgb
f
572.271 531.924 mo
588.451 555.791 593.416 589.251 596.716 601.542 cv
597.701 605.213 598.001 605.376 597.902 606.25 cv
597.884 606.407 597.892 606.552 597.917 606.688 cv
597.689 607.508 598.14 608.571 599.35 608.783 cv
603.7 609.542 608.03 610.41 612.384 611.152 cv
620.155 612.479 628.181 613.439 636.002 612.486 cv
639.929 612.008 641.708 611.313 645.493 610.32 cv
648.084 609.642 653.652 607.132 654.061 604.413 cv
645.804 593.842 639.042 586.645 633.884 574.576 cv
621.692 546.045 621.839 517.575 622.167 514.508 cv
617.434 513.707 580.315 515.487 558.431 503.236 cv
557.917 509.341 558.912 510.597 559.048 511.34 cv
558.563 511.681 570.207 528.879 572.271 531.924 cv
cp
.666667 .807843 .8 rgb
f
601.917 568.606 mo
601.797 567.19 604.007 567.198 604.126 568.606 cv
605.822 588.611 608.33 608.72 605.749 628.765 cv
605.059 634.125 604.285 639.619 605.692 644.932 cv
606.056 646.308 603.926 646.895 603.562 645.52 cv
602.32 640.831 602.638 636.006 603.224 631.245 cv
603.832 626.298 604.384 621.379 604.571 616.394 cv
604.95 606.254 604.317 596.112 603.462 586.012 cv
602.971 580.208 602.409 574.41 601.917 568.606 cv
cp
.729412 .227451 .227451 rgb
f
670.761 480.666 mo
670.761 480.666 668.724 489.479 661.594 493.2 cv
654.463 496.92 648.838 495.138 646.801 492.58 cv
644.764 490.021 644.941 485.892 646.358 482.57 cv
647.776 479.249 651.806 477.832 657.165 478.23 cv
662.524 478.628 670.761 480.666 670.761 480.666 cv
cp
.780392 .886275 .882353 rgb
f
663.998 486.667 mo
663.998 486.667 657.121 494.041 651.208 491.649 cv
645.295 489.258 648.417 480.484 648.417 480.484 cv
663.998 486.667 li
cp
.262745 .290196 .34902 rgb
f
651.101 481.485 mo
654.727 485.396 667.301 483.058 667.666 480.449 cv
664.884 457.585 li
657.264 461.201 li
655.256 465.434 li
652.904 470.388 li
649.756 478.158 li
648.219 480.698 650.039 480.34 651.101 481.485 cv
cp
1 .654902 .521569 rgb
f
652.904 470.388 mo
660.225 470.379 662.627 464.621 662.627 464.621 cv
655.256 465.434 li
652.904 470.388 li
cp
.776471 .423529 .403922 rgb
f
664.748 450.042 mo
665.15 459.401 li
665.019 463.024 662.08 466.157 658.218 466.543 cv
655.334 466.832 653.833 466.954 650.504 465.57 cv
647.731 464.417 647.031 461.249 648.086 457.486 cv
649.456 452.605 652.105 448.499 653.645 446.381 cv
654.514 445.187 655.582 444.371 656.709 443.928 cv
657.123 443.766 657.578 443.748 658 443.885 cv
660.781 444.791 663.802 446.475 664.748 450.042 cv
cp
1 .654902 .521569 rgb
f
657.381 456.649 mo
657.381 456.649 654.652 455.95 650.284 455.625 cv
650.284 455.625 650.147 458.901 652.809 459.378 cv
653.956 459.584 655.743 459.242 657.381 456.649 cv
cp
1 1 1 rgb
f
664.741 455.688 mo
665.059 455.086 665.282 454.445 665.466 453.79 cv
665.816 452.545 666.625 450.778 668.216 452.205 cv
670.53 454.282 668.868 460.342 665.65 459.981 cv
663.261 459.713 663.94 457.203 664.741 455.688 cv
cp
1 .654902 .521569 rgb
f
719.315 625.777 mo
719.917 636.479 720.855 645.548 721.173 653.027 cv
712.046 652 698.493 649.36 682.896 642.718 cv
654.197 630.494 638.699 596.746 638.699 596.746 cv
719.315 625.777 li
cp
.737255 .266667 .266667 rgb
f
655.634 481.918 mo
655.634 481.918 652.438 475.432 652.251 472 cv
647.619 475.174 644.698 485.936 644.698 485.936 cv
655.26 483.54 li
663.1 489.989 li
663.1 489.989 670.7 483.953 671.03 481.231 cv
671.361 478.51 667.719 472.065 666.819 473.491 cv
663.944 478.042 655.634 481.918 655.634 481.918 cv
cp
.329412 .403922 .54902 rgb
f
695.917 531.908 mo
701.697 555.161 717.266 583.458 714.784 585.939 cv
712.393 588.331 636.497 563.172 633.208 577.627 cv
632.011 582.893 630.451 592.855 634.479 597.841 cv
659.887 629.287 748.245 659.32 764.611 624.502 cv
788.531 573.612 707.602 492.84 707.602 492.84 cv
707.602 492.84 687.404 497.656 695.917 531.908 cv
cp
.94902 .360784 .360784 rgb
f
654.902 453.543 mo
654.156 453.279 653.531 452.869 652.99 452.291 cv
652.581 451.854 651.981 452.567 652.386 453 cv
652.972 453.626 653.692 454.097 654.5 454.383 cv
655.061 454.582 655.467 453.743 654.902 453.543 cv
cp
.776471 .423529 .403922 rgb
f
659.247 449.568 mo
659.155 449.536 658.879 449.417 658.649 449.727 cv
658.477 449.96 658.34 450.274 658.321 450.57 cv
658.3 450.916 658.609 451.168 658.943 451.097 cv
659.407 450.997 659.86 449.785 659.247 449.568 cv
cp
.262745 .290196 .34902 rgb
f
653.522 448.753 mo
653.431 448.721 653.154 448.602 652.925 448.911 cv
652.752 449.145 652.616 449.459 652.597 449.755 cv
652.575 450.101 652.884 450.353 653.219 450.281 cv
653.682 450.182 654.135 448.969 653.522 448.753 cv
cp
f
575.039 576.414 mo
580.992 581.366 581.59 589.723 584.816 596.293 cv
585.392 597.465 583.636 598.499 583.058 597.321 cv
579.933 590.958 579.342 582.632 573.599 577.854 cv
572.59 577.015 574.038 575.581 575.039 576.414 cv
cp
.686275 .603922 .603922 rgb
f
600.555 534.65 mo
602.121 537.185 604.161 539.339 606.747 540.842 cv
607.88 541.501 606.856 543.262 605.719 542.601 cv
602.836 540.926 600.541 538.503 598.796 535.678 cv
598.105 534.56 599.867 533.536 600.555 534.65 cv
cp
f
637.255 678.9 mo
640.419 684.103 645.559 687.574 650.38 691.176 cv
650.236 690.247 650.104 689.316 649.989 688.383 cv
649.713 686.137 649.273 683.381 650.09 681.192 cv
650.747 679.435 653.592 680.195 652.927 681.975 cv
652.334 683.563 652.641 685.762 652.84 687.598 cv
653.148 690.433 653.672 693.245 654.203 696.045 cv
655.415 702.44 656.421 708.854 657.551 715.264 cv
658.407 720.117 659.414 724.943 660.689 729.706 cv
661.18 731.537 658.343 732.317 657.853 730.488 cv
655.64 722.232 654.433 713.832 653 705.423 cv
652.418 702.008 651.704 698.617 651.073 695.213 cv
650.867 695.162 650.663 695.066 650.469 694.914 cv
644.849 690.482 638.522 686.646 634.714 680.386 cv
633.728 678.764 636.271 677.283 637.255 678.9 cv
cp
.360784 .745098 .776471 rgb
f
565.239 524.6 mo
566.874 527.917 568.641 531.187 570.296 534.497 cv
576.318 546.537 579.463 559.455 581.614 572.26 cv
582.707 578.765 583.506 585.291 584.125 591.816 cv
584.439 595.131 584.686 598.446 585.006 601.761 cv
585.172 603.479 585.359 605.196 585.589 606.912 cv
585.704 607.77 585.82 608.63 585.968 609.485 cv
586.1 610.243 586.343 611 586.159 611.741 cv
586.122 611.895 586.11 612.039 586.117 612.177 cv
585.787 612.956 586.097 614.073 587.27 614.457 cv
591.487 615.835 595.67 617.317 599.893 618.681 cv
607.43 621.113 615.266 623.22 623.146 623.404 cv
627.102 623.497 628.957 623.065 632.837 622.63 cv
635.496 622.331 641.34 620.649 642.095 618.019 cv
635.266 606.367 631.454 594.149 628.387 581.335 cv
624.196 563.827 621.311 554.33 619.969 543.284 cv
618.552 531.622 618.735 527.887 619.454 524.899 cv
614.863 523.425 582.225 513.179 563.921 512.022 cv
562.851 511.955 562.37 512.66 562.409 513.415 cv
561.883 513.682 561.496 514.204 561.499 514.792 cv
561.51 518.125 563.737 521.552 565.239 524.6 cv
cp
1 1 1 rgb
f
581.499 500.335 mo
581.133 498.645 581.968 497.51 583.362 497.8 cv
584.757 498.091 586.183 499.696 586.548 501.386 cv
586.914 503.076 586.079 504.211 584.685 503.921 cv
583.29 503.63 581.864 502.025 581.499 500.335 cv
cp
568.492 505.14 mo
570.622 515.009 li
605.083 522.182 li
602.954 512.312 li
602.281 509.199 599.654 506.241 597.085 505.707 cv
592.08 504.665 li
590.984 499.595 586.985 494.715 582.802 493.845 cv
581.736 493.623 580.25 493.348 579.434 493.638 cv
577.047 494.487 576.114 497.734 576.93 501.512 cv
571.925 500.471 li
569.356 499.936 567.819 502.026 568.492 505.14 cv
cp
.94902 .635294 .360784 rgb
f
579.97 500.017 mo
579.605 498.327 580.439 497.192 581.834 497.482 cv
583.229 497.772 584.655 499.378 585.02 501.068 cv
585.385 502.758 584.551 503.893 583.157 503.603 cv
581.762 503.313 580.335 501.708 579.97 500.017 cv
cp
566.963 504.822 mo
569.093 514.691 li
603.556 521.863 li
601.426 511.994 li
600.753 508.88 598.125 505.923 595.557 505.389 cv
590.551 504.347 li
589.456 499.276 585.176 494.46 580.993 493.59 cv
576.81 492.719 574.307 496.124 575.402 501.194 cv
570.396 500.153 li
567.828 499.618 566.291 501.708 566.963 504.822 cv
cp
1 .882353 .392157 rgb
f
571.286 616.456 mo
629.913 628.657 li
631.934 629.077 633.479 627.313 633.168 624.936 cv
620.068 522.487 li
619.819 520.577 618.438 518.918 616.813 518.58 cv
558.186 506.379 li
556.165 505.958 554.199 506.762 552.996 509.462 cv
568.03 612.549 li
568.279 614.459 569.662 616.118 571.286 616.456 cv
cp
.329412 .403922 .54902 rgb
f
569.083 615.998 mo
627.71 628.198 li
629.731 628.619 631.276 626.854 630.966 624.478 cv
617.866 523.988 li
617.617 522.078 616.235 520.419 614.61 520.081 cv
555.983 507.88 li
553.962 507.459 552.417 509.225 552.728 511.601 cv
565.828 612.091 li
566.077 614.001 567.459 615.659 569.083 615.998 cv
cp
.298039 .529412 .760784 rgb
f
637.333 579.898 mo
637.333 579.898 637.231 568.932 633.285 565.932 cv
629.338 562.932 617.989 560.388 618.806 562.209 cv
619.622 564.032 628.983 567.89 628.983 567.89 cv
628.983 567.89 617.668 566.38 614.663 567.837 cv
611.658 569.294 614.251 578.772 616.426 580.654 cv
618.602 582.535 626.816 589.33 631.8 590.202 cv
636.785 591.073 637.333 579.898 637.333 579.898 cv
cp
1 .654902 .521569 rgb
f
672.026 441.843 mo
672.026 441.843 676.296 439.022 677.582 441.059 cv
678.867 443.095 676.841 445.202 675.365 445.203 cv
673.89 445.203 671.08 444.705 670.896 443.846 cv
670.711 442.988 672.026 441.843 672.026 441.843 cv
cp
.262745 .290196 .34902 rgb
f
554.105 542.747 mo
555.538 539.797 561.264 536.844 564.731 535.055 cv
568.199 533.265 568.646 534.373 567.528 536.727 cv
566.409 539.082 559.818 543.246 559.818 543.246 cv
559.818 543.246 568.002 539.936 569.86 540.942 cv
571.719 541.949 566.196 545.637 566.196 545.637 cv
566.196 545.637 571.058 542.803 571.909 546.169 cv
572.476 548.408 566.806 551.572 566.806 551.572 cv
566.806 551.572 562.848 553.679 563.76 554.052 cv
565.875 554.917 571.262 554.304 571.644 555.735 cv
572.04 557.223 566.87 558.877 563.051 560.54 cv
560.05 561.847 558.49 563.425 557.014 563.129 cv
553.658 562.458 551.857 547.377 554.105 542.747 cv
cp
1 .654902 .521569 rgb
f
713.357 587.416 mo
714.542 587.416 715.315 587.246 715.81 586.929 cv
716.332 586.594 716.679 586.088 716.788 585.503 cv
717.09 583.88 715.757 580.738 711.859 571.892 cv
708.862 565.089 705.132 556.623 702.13 548.08 cv
696.287 531.451 695.658 514.46 695.652 514.291 cv
695.619 513.312 694.789 512.551 693.821 512.578 cv
692.842 512.611 692.076 513.431 692.108 514.409 cv
692.132 515.125 692.763 532.118 698.785 549.255 cv
701.832 557.927 705.593 566.463 708.615 573.321 cv
710.463 577.517 712.363 581.829 713.035 583.922 cv
708.696 583.768 695.014 580.33 689.535 578.953 cv
687.451 578.43 685.806 578.016 684.774 577.78 cv
683.66 577.526 681.867 577.086 679.597 576.53 cv
667.067 573.458 655.559 570.734 652.407 571.068 cv
651.433 571.172 650.729 572.046 650.833 573.02 cv
650.938 573.993 651.81 574.701 652.785 574.593 cv
655.575 574.293 671.231 578.13 678.753 579.974 cv
681.038 580.533 682.843 580.976 683.984 581.237 cv
684.979 581.464 686.608 581.874 688.671 582.392 cv
702.752 585.93 709.852 587.415 713.357 587.416 cv
cp
.807843 .286275 .286275 rgb
f
747.336 608.219 mo
747.517 608.219 747.7 608.19 747.882 608.133 cv
748.813 607.831 749.324 606.832 749.023 605.9 cv
743.172 587.79 716.442 583.596 715.307 583.426 cv
714.339 583.277 713.437 583.949 713.292 584.918 cv
713.147 585.886 713.814 586.788 714.782 586.933 cv
715.038 586.971 740.476 590.977 745.649 606.99 cv
745.892 607.74 746.588 608.219 747.336 608.219 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (Kroshka-looser) ()
%%Title: (titans_stickers_cargo-temp_01.eps)
%%CreationDate: 1/5/2021 2:11 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6f66/rehDEQ^G4;$J2>2Q"dBu=6-^)*/3j=OKF+]'pVm1!B?htQ0L>-_CDkd7RoHCEF/VuNEA:mFlM5J6Qn\QH&RYYPQ5*m1
%Nobrpo@O!o0(,&ZNE2Z4I$Bb<%P,Pn'$lB@G08$OC.>mbhDB:CX-GNBB!\lW8H.-)JJ5^&=7j;A;6?9O!f<qKX$@Ws5^:i%<C8R3
%28("AUC8U4?V0;D(:8Z'n@M\L:sW-'H/fmu)u5+)>]5`TdOY-U1"pK3.ZDO0N%Xi;hT=^Jn__LLEsOG"#9k0:@l3hThCb:?kQ'>R
%^D46q8/VTE;f0u$"Pd2M[2fT^(ZE/4"%ugn'd/)bB!$XN?``T.f`*-HrcbDkreB=@!$@$EER)m/3!Ml'LeJp<^h(f+^j[2P6U8a=
%&T:`?X\mX'"sG26Lf.1X6j/p1O02i5FeB&?.`TD?N+6=JLb'uP<f4itCeU.i*%BoY5,pl9e]MG'j6s;D@jA3rk]rq;d91=p1Z_t/
%:R>p7<oU52Q^t/(]WRUUJ525k.?m(FB&9IaU0:i:<?93J72inp26QR`d:`XVRahnrB-SNTN-4Np;`iQ[)U4T(U%3N\0^;a%%@K%,
%38c%t@%nhe@!P<LaFZcGQuN,1i1[:/.s?IafNh-@[WCBKZY$aMY&CNqb=(HZJop/VCn?JdS@dB(k?Z)m\:@91#ZO[So2=qA2/PTF
%]5?&73*>T+H/eP90[Z)C29&Xq;p3bb1*VjUrT!eg##$VF[rn>N_nk.%NW0+o5MJT+)#3-:Hl#5!<tp$X-LF^&a%r;IX#uGEH(J?m
%1t%mP'1JuLMYKgYZ'm(M2,Vj[]2M/73f8N3'_iot'a:We$<G&_pl<mf8Z\4O@aej#Y9]<68(6t-VMQL2Y%_!(dqBseBf]fd,<@0b
%MG<L(KH'F`X!(aCNn"[n)d7OsJ\lW4K0\BWJ_`d#D2`Gm48qR>n/]-8aJ)rb;#!dna"LPRE8d`0VfW,F%7.mUXJ9K3AlFO[Smn/J
%P+i<@Bi>@%"b9@?cAmo\-?#*jY!W/m)T%=!fG,\XKq)JU#_uck)T$/dR\GNp7MtY9Ij'?,&+JDD4;Qm;<^R_oSJ%-l$Ul\=!KLmc
%!h$^G8N,hs'IiIT)F^6W)[\_3J4uP0NK-^0[`M">fRI!.!OR+d!@5o=jRb4EM!nH*niFWYnNn2T44Z[tTt/G0[Nn`Bd4m&Ig[&`4
%NQlZXns!]6;qOEGe!=I8cB$tVN_GR*->sR;L6#(OX4cO^mV)pu3rQB3:Bd#(2PiQ*&FDe/J!?4(l)/Bk\LkLtSCtu(ja_B_/H[UQ
%P3+AUfokf%gW$Wo%@iWA:=@odM*5-kb4`o`A(hW]3VgQg93&:K+.,OgkC1jo=H*6&5Ns7H(Bdq&IaUGPU;,M[qBsJY[k'V9bLW;c
%dS'!UrC\F"DtfIp61\'5(:g(00:euTh,!mf3.I6c7iLAKV(_das.Z+k,8X"m"AMhRVlG.3'91W\Rs70&q/81i-V%6LGaDEIpa9eD
%YA1gJ_V;iWo\UYE_Fr4u`r'bh-FES:&al85]q=Kss-ui,JY2s8F<C2O=`buihZ#k4Iu82o3,T/XVP!&\rq%SB.E7;9s%_E.cO@Rg
%D)@W:0VnN:`k5qH1@7:m383J41tUOO"SVgpI>Ej<gk)JS[1jk==B@@/-)IHFKnV`8mn)A'>Pg:&2BEo9aloP#l:e-X-28#hc.8]h
%ADZFSmcJOkF2'26+PT.@`=kpeF_,&m`8j&p##(u[cV6T]:`k7r"k&#q.dp?41c\%`7TkPpdCUoY62G;::Jm9N,a5mi*Tah_MSg=F
%n$GSG$A<7Y3;0@E`>2+9l<$iB8SNi`lY`m!;$Nd[D5R!M!<3`j+]s,n-1RUj9I49Jk+,*<jL*j$Ncl%?bkIAOYI%4l#KT&1ZC8Bo
%rT10m")4Asa1k_SOoY%u:gZkm$,e:`:J/bZP>m[r>Y2.rkKoMi=R7'Y-g&&5Su3QB/]Tte<E'-Hh\I(7@bHBj*f%T")Mj4L1]W3m
%3`REs`)!k!^^48/=(7#^U&k2]:XN-2&ekLURY%*/h29q0]V"glpM@Dq5<p@'7>PusX8>lM*#4!g&pUm3Q_=%q`tDck!^/"`pr^D`
%lfAj^quaQo;H-Q7JmN#=r\EF;d[USqB4UbKAkg_N]?:lOP5!g/>M_pfaR+l0g'FiKG?#5S3@=7Fpphr?<%[fD^#cDM-<4m-6:HQ4
%`QVMKZX6;L_a7nV!lmmJ$fnlELk#eh\s2lNnWM%:e(Kk=Y2>jrIYaZ>2Bc?_at[%\8R>/C3B8G$=)\]Q#m$;M?pR?WkQ?`WM>#F%
%L!Um<O71Aldaa$?K$$qS+g@/0ZY$NJ+@]3_)r08nSsA]Ap!\'^H(\@LHc=-jGG)MsW2bG#qRNW\*;P*l2@-Ugp")*t1Berrnc@^'
%*oV7K%:L2UQ+X2N-rEQ:?BtA+S]<H(DA'NFD;>^pg[Zt-_3oVQWGmOB2;H]8d<b1AKq)cYSeBFsERq&I'l&eXLJ'*sQq=;J3M\f)
%Y;1u:r]`.0-h"oBmQbi9JK7I0>VKfl6-U.2r^>(2Uj/mN4-ijV[$8Gr4garc+GXe>jiM),4iOU^&qEpd%YGS_=Mf'HX%'%n)PHC[
%]*$@%U:okmp2^c@Prlu*1a+Iq:fX1XQ9sr<Jt`;"9r6]Q(GE!aS*lnpe];=%&eJ4\*ajAL7mrN#G_1\bk2E/Q;]Oj8fItDkruGJ'
%EQCu_'EZ%O%(uF*N\MaS4%*5'Os$L$OV_03;S&?B'Ska)$c4P'OpE]p&Fddi2Wh,J&L%(N$$T%_5EN(DjQ#L+H6lf@;$7-85"SJE
%2q7'fUk1rJ,]Wpq"sS2L<!F?j8PG;,'<LRk>*:gd_VM`s1PloBlfBVG!X_gllRnN%S;.%\&\Uli1%RE*AJ::RM_5'+*^(f+&Md`-
%H4kH4E+-d"_n5ORmPeGS_Z*E3g#<.WhO7r[$1-SWU]DJkV\,h2nPo$5]'M*V31B?-q!Sn-"#Sisao>Fas/\qXi;A1mpQV^h]Pc]*
%>R+4paQ^lk6GGLk2a6OVF(isfm_0]oIe)p).b+M^PgCCmdG"iO*t0jT:&dE5rW-RfV"YI]JerQ#;jI;4q]<pi)/^`$c6MYnEC7ST
%p_-V^-g^[,@:ePgTJF)m+-HBs67=-gYgf@OTT)<-!:bXdg8]ILJ6Mk:<$gf7:huhIQ+s)qClLf[kbIr]<-]07f,G9EYmj0d!_*l[
%"bF5mMX<S$ZiAZ_8g>Ms&JV*SZ%d2NIt;GfLrH1Vc=U1AH'J5*qqe02HThUu(Ekn;+m`.,K8<WLl[+R).L?0i9JE/<o-(&b])E^m
%6,/Vr&i`e,1FN/!M=+.XbJ;^TNFZ#:i%r[?,VLRY#Zacp_F1p9ROc=qn%uVOM1d'$,ZCI8!VtODd+$*L5D(kL0gl3J:m-&?_094Z
%l/U**%Mi;co[^jK$M"<H+&oW/n;hhENd'),\hnSm_=+Y[->5F4._X"`DK`fJGE]_klk!.OhC-gjM^ee`l+ou#YQJ<DhD+pDeDT[l
%,'>h9ne0"D01(cEgN;Uq`K3W6.u#\?$",.lJtb9W/QE,$@50-hjH5EUV*u?Nn('$(oY,/78spFtOWm.^k?F*pr#BP?>[oKbA;8Oi
%&TONt,S=/Zl#4U"oT_u@;']HFJ8E,E153c''e'J`9Q7iVEWXE4Saj<C^aDrbZU/'h.H-$sZQmeqXGeTq1oB4s28Z9GI5d7ZjMM66
%hSU$#e3E&n;%u"7;NIo5M8&NA-[@(U!GXqnCX/jYH&R?/nFDr,QRV"V\)7RDZ,jXq.jV?64INbh\5:R@,UHIMm,:E[Q$ls]%if\m
%=Q)K$L:pH9=)e4)6L^>I7>1RPgurd?I4+&Rp#n/k%2P4RHs*C8\9Us%-p,KV4t.j-P5tGIqFP]D4LK$VM%jD$Rfe:6.:*QT.#WPk
%6W%K)=[A%&;e<ToJK%0_F.cVXmK50W,hQWZfcD?31lnV=l5K%C1e/g!mf:$d6mQ@h#0Z7L^]hF[L`QCg\K[0C;]f^MQa2mU7&:/]
%M&1mqN,HN*aAUGi'a-'!9KPghbu3MdI$!jT<Y*+G%&]e3l[YhtD"V28L]mZOZJ_u/oc[.?Tep^r-Yj`iThcp2FKIli@<SB[R]ne\
%J:Y^aB["k?)T7g`c'sh1Yln(`eiG@ZPh!K+AVcC[fg2Y(,Zd"<%OXulfE_XVK9MI?#m,rW2$-?1+gVZ!$3nS%7ZnI"oP$`A(W]P,
%O34u'%K`u$!/Ch&<OH/8d-Y+@_,aVP5S9J0U1-.C0Ii#4?k1Fb<-"e6-ZA(l^/NO#''NI9F&=oB"9Fj/,`.]j)Qa4Z8dY?.ESY"-
%4IL/f@?m`E6&KH30LX&m=p[^\C%arVV.A#sQ75T*q(kf[]cOTU',,-=9lgRKGSHOGeu60qgl_huk,\bj>W5()n5$F"5BiSf_Su4P
%./@slKK0VYWi/bSj$+f['aEA3Cp1MIO5K1[Cn?h=K_1I7^]bc.mD,^RmZHll%JH`W:I17tQXiK\-(;(BNC\^-'t(HlCThW.!-8,b
%8*@Zj9M.lLbdH*2\DZ8Q&ou._91h8X1f>)Y,Z9@8TIZ2k&lmHRe-gA=(XD+VUKSO]R`Mth.'6:i?G*aE9[eD*-/D?u@G>tmF'(+m
%<E`9P&Q81aUm,`$*65Ji"KT)"VHmr[1C*PuOJ$"SKH@^gPRdjgO#V^OT<h9[n/tjn^e^59Bc#ooWmj0X(eE+%AHsXK&q*ZVK7d"F
%V)'ffJtFqnOei1S5Eh@pQtA"Hd:e\`[&a"nn;P*N.]'d/fM8Et3%JN>`hmtfYb@6;/g"1K3kC-[9c:gF4@2MVTik6^VL:5GNdEH6
%=(/'Xi%P=g#J#?d6IZcD(XVPlB*AB`>7'$sY'Ft\@ng-65[R'h>bc1jCp-K7;N9F2*%pH@"DVL)Rh>").-2lf/<6qX*gWuKA5VmC
%<nmh[A5e<u"p-9q>._2,AlB[s)%1c:]"]Ud-YlT_)<bS'gQPTQKB`1"M?i,Ti<,(Be(D8r\laN<gJgEYqPPcg;:"9@:CR-.OIL]n
%#!cEi':GSP_.&8.,]kW6Od11C.!r@RMg;o1A8On76+b3_"!_A)M^MbY:dt4)i;g/jG;4NFeuFG+orU(p$[0]];DhlOm3;]#?JXPd
%SZ7.=@D&U+7<bGPr=qNHZt`6=O)f39?<.r4EjCo9I<jk"\o!'j&1]'S/L$f<_)6jo,lAGBVi;#*\<KGuliM+)$O)eaYPoDUnU&I_
%?D\']Qi`0j**kr=lR]+M_GQW'8`?rXI3gaP4[9.R\Ep#**Y[chhV5Z039Sb1"tWOm7HtF=+tg-[$DJr2Gcoa?_%2Q)g=PF5hOX&a
%+[=Vk&J-IM[8"j#QiTlh1PC_o=8&aR=i>te,_71^[ud;*<F`Y*U9g,af4CUk,MP7Y'jNigja^,H@D2N;Mn\.'n,ata30'@8&kUcD
%[`-gm/0m/uj2m`MUaGE3'Q*VZD,TA`>R%pt7=<]U!4Wcg7U;ATi#,h_XIVlF'FMK713FaRp0^8gpfV,al=Fu]&@:$)()+kG"a/M1
%A]G-?^#n?.G@RGF'^WM^NaUN"CT]F8pq\g$ICog2pl5>!5Ifr:3u$skM8"l,1KK=Q;#eptS+r,OUSQ?MUp?!s:\LN)72),T9""#a
%m+>*c%;WS5VH?I=;'UsnD&b2qFrB9Q-90Vh+DR+aP/K*cIjqgEe^'HCk=0\a#6.L[fYJ+NUB\ZVKW7V<b7!BkA)**<;S615Cl^oh
%]kV>2T'Uc$gf12X1=G&q,[.#d05rg&&D/GM65N_`3gi5j:lgM/Ub;Lg%i1LWA.4a#lahm_k6YoQC:Yk@2A)0"/RIWSI(N;7n`tui
%WSp<R"eFNf;AhuG+puUN'J04TW!e.[o8rO3"`)8<m9fVNJF4t.(\/+>Y*QQfK-V;1JLJ)\BV6Y\QE:&$So7ridqa_$>\>9S,TE7<
%D2*.!A-F\tI:liHR]le^/^eas_]=F\1!_nBep$cc=T\0=M_KiO:Wt)8r\(Q#<i.<P4.Ri\8Npm\Cr8-W5^WB0?/7hl?54G!+FD<8
%q6Wg@IRTd%=9'/K)Si2!RdNEY8G</<"#'%)RXs`(.um!sh=9D<pUAmBFbOLnJ[UgiBH#"\'R:*GL34kuaQc$7&]r\$Cdll;Fi):a
%AL7VB50-I^jUET^X3+1T;Y0&2h3D'fU1-oE^Rm9i&D6`hoD5hUMW5&$S$2T,(2M`is,(;?<+Pj<L:ZJR?@VFp4l)n-J+YGbHFkCq
%47^=D_=?'R!;pW)6SUh%o/fEc;*.`f7_bgqq;`+TT-(b=k^<@LYdiWco8Dnn]12g-UALlb(\<Y%qtd4Mq;:OJN(3h`KL``2KpCPA
%NH'$L\<sG^nT[4_CXT<Cq1s:**^+i<]P1EkU35#b6*=dXG,Ko44V1pk_<\',%E`fUhX@ZJ4/LQifCN_^0((UA:?/!R0`V!a'fBoA
%NPKPED?T1B!4a!TXH53Ng&>D</+E-QDs6WZRo-lS#`\%);_d":;K'$Fl$q1PNKJ"Gc13M4+#qHX_[l);O7Wic2>%qS%)8>oIQGuY
%HIITjg6/*%Vk<Z3UB$L%4.rG7qVOcmCj8"<p&+H,?Ie@fdm9EsV8(uH%TIS_`/7%]c<$W-Zdf&_OC#MT19uMpP-:SOFt&NO)YJL$
%l(.fqB9(?c11/8tZ^*JLj]9XjcWbE"lr;81NQf^Lg[KpTUgC0hMbUl^.d$kiAuAW9>a]3Sl+PDcBBJ&dj:\onM3bTtXIn#lIQig-
%<TkH"D74/J0cnSReSc_C3(]lUEWe2s`ot.tN+3T`i@$UHe+kaI_uYHSZqfb=%N>5SS/icOLuq%7SqhT(3p!g/b*#nCi5*ck9M'.>
%6sT,J)7N8t($qC@DFG`o/K2gZMj^%t0Hk9q5Bu#[*nZ!MG:1G/B&4Zf;ro!jn#JBsNjuG6=SYap>)/"J^eD))mBd=!A8>"=D)V(D
%3k8/!RVs*e;M,@Y++Srd0&g+4-\B$d1c]di"kGKVB>)r'kAS&fYpu%1"7"D/)Qa'nA#6SOK#/d6f5oU=BUB-[,ilUM+2E$L?LnEE
%\<4@?B%gf-SC+i\Oa;84[NF:Hec%02aDmukC)X3L[I"&?]AbdP1\NS,!8"]^=&7(]b8:ZuD)W(MVu,qV$gWEtF['uIIif4q<#?'5
%<c8jZe+i,Dp"W=b!;4kA0%a9<1hcPWm0jj'DdU*#>BrQc^0^c3ru;/W[ruRTeDa7ed[K&^k,-PAB5!6Y8^E"k$"9A8T\QR)"Vpm+
%i.M_5FYp?AL>G[JR_Hl)eGV#Hl=Si_[;rfQXb0FGn3\j)jmV6IRQ6J?\p_i'5:<f6ST[<i@AZa`7bSi'lW.\f2*^^Ue\2D(_2$=]
%qbdFimhC17SqL/MfV>&O!(O#?meYfEA[Pc%oKfkRJ="`c3IDm0&'3P+4ro\M1M;KfHo+.SjdIi^]_5.GTO;#IRb:FN(s(Sk`m"V/
%R%7j7:ofS=mO*H#'`<(Y&DWY.VrJg&%@j'r#d[qrosX*Ta1>9c<E]b7a_eHj4-BQ#`0+rikR">gN'^on!`Gi#*9hD&8A>>N#g4cZ
%#&Fk;??#m"mQgQhbC!qT7dpLJaX@ruIZb1a`UO/q7lfHJP[O5PA(C0b/&k:.Auc$oN_)pRqZCKt'g-UppZOMc.Ib\nIMSsS.HBkP
%H*49QPq$_FDg'Y(oM2Gef'A1/gc+(uN=YmHrRe(H2]=,00_fW'o&&X_R"[lMBHnHRNP*RcF(05I"`=[SZVMh;"f;-fb3Nj\=iOZ_
%jm\\n;^<MMi>HtC.9'"t+!K!IA?1$ZZ5K<(Ajan0gHRWaW%X4iB@Te$eZ/Ag@\b/t'.HAb@rs%?[5ldGZrPQGk)\SfkR5.ODqr7#
%=X&/3op_#5?MSW8ctNNNoi>;#qb[?c>'q.4=VI2Ih<#ZNZ.EbU9"oHK<A>MOS'm)V5qbpF%AkKaqO['l5((aQZ_6K?9MY?FP'0k*
%0"?9W4t>lI_<S&fdjC'D2%Y3&.lF?rb@`$I;tmof9[pm8ln`:"+/5_6.b?_q<b@kjhs<P'b/?e0p:!/mp.nG:=Oq!*Hq^=pLUW.a
%Wd=9<j!0gK0g<q-;j_h;j6\;JEqb8)l#W&,K?o>#[qD30:W'7Q?NSSk138>masieT6o1HK`'cAH$r=6/1i;!1Vpicb&l`B0$dFjj
%j/<:^-Vqci$WP;dE[&mFW;n#h<e^8K#?L[R(oD.kU6"6118mqa:"]!u.mNT2q*oAUS)ngmB!hLjeaFEBYpI\gr@hNqM9V">^Zg9n
%%-2X_j)I#>rlHqh[aC0$)L's"LS\UkEJte%J'BlH@KuZ&2N^bS%f$d5=Yp\b'C#/e1Y-5[kja_Z@NmgAW_\ZqH,.KHHGrg-!94l^
%/B6I@N\[r))#q^A)#l$252jNom6U'hOI[_^W9\1ZFQ_[PPDRY,?a3(1YN4=9A,Y`fbpaM>.J`7!;qMi"4gM,Wc')R`3SnL[8oK<N
%/f.u?7`KZ\;8e6F2ti#;7&Jq-N3d64ZZeH/BG5d7`:%[""KWVQ[Mj]`%s<cJk6hmLfR!b-*HpJA&%mKM9i%ebRR.j<iF2\T*^=_E
%^KHZd$:[rE2lA*Soab2u8R)sIlWHGcR#"EW(\!Ok-NN'!c#.[Srap#AFm?N\M,Y_K`+2^o^]^O*c1Yacp>'Q):;8PWI-]o+'&qh$
%_,j@EhCA;GK#/Aqr0QmER#%gKKkecCcEB7W@irD/;BOqt&'1%qFl3Akr_'ei`!GP,qIELpooli'nfO=:e33`NcVonFrBuVENMdjm
%_6]3"iQ4U6F?TH@(HDF6:Hk64?1@7G>1IJ>@2n;rA71d=hD"A-<HPZVI#QUm"QXR"m0o.\^1.qtI3FK;4iDMA_RPCUq/KXb2@Ye=
%0-DShP4S?OiW"m.DOS"`qq54:m[AR8m`W_=X1Fq0fdH(;'fP>il`-O0GPkQH]Abb2RjVgS;)51ad>'.h_r,@"&iP35b]-]o1Z^Jm
%?8L^9-Z:OUpU_ZV^7UcM#qC0<ep@AcSLEAEi"LJGjA[dt:";sCIXi;_TqB3NY'_\YEH``I5CV4;Y$(U'NLd1SNiu%ortW^.5>>b0
%#;BY+Au7mBq]Nh]Ro-f1Z1!)FiLmdn^$B4NP$Y=2eVm?_ErN?ZT::3EI&`5R['.CA\]Hd7RoHrKW9QC<B%5Q_H=J^)NfR_jjQL>#
%^l5t0SuP.$I9Fm92a$MZO+C)6frhNRJXr>:q(FOsO(`0HoU?A!`a6FU;UXU.')Xj\qHl4$BAB:WYPumu%ao7N'%b^(5"1L_r%:T#
%%H?E-L.T_SbO+lXIVc;oot-lsRrpq<j`6nqB?7An(Jp^GhZ[&SBc+U4!*1KY]X,([>@mL)JFT?"gSQ&'d/6AbabMXm)F\$0hPrNS
%._j=eCOXon<;SS^nj/GOT6&RsXmZ>/LO&Q-14/Lh1B5bEXLnIU!Eh#+%=Jd:4Q,>nC@9%4EsoUXlF04uHG*STAQRI^W>SCGZ%<R5
%$?i0)VJ.E8+(3)Q6C[@1)$AihlCB?6C"eF'#FMb4qC13Vi_(/MH_tMWDkEXbDf'=8O"[=frd.L_e$Kq1%kqL3BVn*HqZsiHHVnC%
%;.b/P^8)XDBeP>c@)cMS:Xrbc?e0;R%F9h>.'pT8j/h.8BeP>c@)cNfq,5Z$XqJ`b0?PQAdS/Yl)IJ(S+mJd*S[CUuPjl*ZDFTK)
%40N+6#k<u$i]Cd,Ka/F>N\9r;>P&tB3/JtC44lEY7+Zn!%Q3j_N\PU9^JT6QiA;Q>0_d[(2#iP*T:3ObnFqc:C&Ts]V"fmuAlmG,
%>2%kBdRg.tA;=^qi%ang6^1_u2C[V<1i1kB+$!AnSVD4II/u(jkK<DFFfrB\A+KXYcBY#50ZH))+jMh[A*s+f_d-An@$kLZAf6P1
%#%Nt8Qt7tKQRK0K`h[-!rp[TDPGh-PmEq;"q$7Wu2dfAS"&*;Fc)4%#D4-f^[&fnTfpF-uVr:LFb]K[lI=_")Ocl:#o0<.9SUFt1
%1[S'6qG5hYE`7DOKTBC$m*LS\=LT1FdjP'm\Zq2g#>Xb!`2)9>/P3;"0O*Z-4bdn__`7&pLN/OA^.hgLb%R4G;ol;pe1<I7h)]Bk
%%eH(LV.P"PnOhldnkp.bfZ`naPEV?%_F%UsW/pOF-8[I=_onDnVT)^k9L)'^g;;9@C2+O(q%)M_iQST1(cMi_`[gJFKlOFQDAL7:
%_RQe'EB\uF=Vs(*j(A/rB);sJ6/4#IF+ZFo[mSJ"(JL+rR*$@TI.6B:GJQtJTgnq>2nmM#g@m,*C"tF#dqLV/k"hng:;`9W"XYAe
%G`WE3hPID`hGa0\TUMG9m/oq+onWNf&?st^`4"OpR73o/^PhMSK01>q1e`3Z?Z)51p6.peX*tjaCk1@&QiJYP3tm.r-@CTp9t1`O
%%4h8>LT0Zuhj5V1)hi<\E&ODJ.3"#u:AHnGb?O_Q5c^As5?sW"F_[HjJRTF&H7FE:][b5W6I`,BX8]J@p%s8JI-AGK;=rt8>P5^)
%A,(U$mn7orh^LIYg^^OSfH[#Oac@40meYfE@B36Wqb[e_]p_#;r>]h<WVW`:LL)XcHtfnFW#t&pkU'nae`Y&#iuY6pf9rP"T7%$P
%1J]AG=Z?%iWB#=1m]838CJD'W)g?]a>9Y+q/MK?b.D.^W8,dO<P^j9H.YDVnp;2BG`dp$HT[8(^Pq.L.ejU3p]\1GgbZDMUjRm,q
%?)ecZ5@2Q%/_0Z*YX(>c]8.,i*[<\%$P?aQ8[Dp+B?*o"n%.t0SDkIGVVi48ImAti9h<!idkj'D+jD&i26E;-kt8eg\;b'cK)J0t
%R6<Oa"2e5'G%un6g$E]W@j:$:L67t-8;s6foPp0bX4&W`3?sa:X$2-ZT'G2:<u'P$QtI[W<mBdHO-6[eB<Cl'Ik];shr]=`J-6"X
%;q7@/ZefH_F[$N3\]M=sk9K;*cSk`oL06IL"JFL[63@]'LuE8/Ndgdhb-,`BlNLWlN-f`"og]Gjq2+S41!\$a]m]6#$*j3M9d=/)
%lER2*-dq7I[WU]rF5hR72"lCRChLjLC4Iu,f@W`G[G3stb6&ce8JM2=fMF>?pD_G%Pg"<8Holu*G*Ir8&H%fHoqZ,C-i;<_r]Pr!
%UrR:ucbsYg).\.CBlD>a=GJL7B?*(*NPoGL3dg+q%R`eV?jD_FoI6uMUE!l93W*AB2ET'T0-mm!*<$3`dsmSa*os!k#WQHe3W,@G
%RBd:3Z_JLpB*;g:3W*UMT7VL05'$)eEhUio).2#/or5oSEM#+N.8k3#+W>\jpX?'Abo`\]l/%Te"/t&\@r@@I?%Yr=<`e0K4ST)\
%X0tg91iDG`Q6D`Z$lRTeS&M75e2K\B(n9W5^0EKRs"9d@UV5>;nsa5iY7Fk=RAJ2@WO#amm!gp9-;6qpba3B1bFd&MBE&*76m'TM
%7MUCJb\VOhI[aZ*IDDZY.b?_q%Oc:2IWLr)<@3QYn%V.57DnkV^-BNL+)JOVB`Np6QAZUS>Qd-rabVV*\iH2QVY["As7!_$Zc(%?
%,[RQ/$Ve99=W!<OR3c0OM3hB)AX7S/-!pETcn+]B9>&I]0>lmc$<Hh4$)E&/JM]II@o-4cRnrgH^5U^2TGm^WdHmZiERY-j\$M(/
%(7;t&55a4.5<J+>m.RQ@rCJ)[phG!#`u#KQJ*j%m8T;Hl`^%fjXu9T%nt.pmA8HD?\/WKA0j$6l3)R\8'%bmQ@#JWp0$R-sqCXZP
%V_7di:<HYh"X[)OB9+:+aj+hHNfX(`Vd4IX\)<=Bln#.A/G#=5k8bEaAHEX\Sso=nk_3iWLfiaFgpl@Wo%3o42TRbD?9>?6i;JTS
%"Gc?92mYsrdHn54JJ5`"(I:[>RX(:\W/C\&25sZXjW_s=>#hb"ZapY8SQr/?jn2FmC/"takap'a!8;u!+U!F0LtC8Z'B!=#Q=7iB
%s)I+jq=E':kV]d$cJYI9=s+>GFn8+or'I)ZGm&<;44X$\E"6c.+Yo61f,@Z,WPeqbn;[EWahKnX9.o0T.`E*Y"/)B_Up*IMHsrZV
%^*jC/'-sX;SVg-Dqq"XAFU6m]U$N#W,&e0>HtEHU^Yn)t8ct$8LWL)d)*-9k\dBY!"4h/`SEj1Mh)6Z(kLm&_I,tsEK2]P^Kc#.@
%.\>i"@:\J?RhLIj*dLQ>]3WrOQ=r2cFM^9ZN7C4d+smZqLlqa$YQD^7$Mbn:;@GXEb0J2%)&'oU_0Z7@SR*.>@Rt!`Mi!tjq1<[G
%.1Gt8e*\s1@?9oL^iuj"o7TaH#O,UUe)PJLh8PkUBhk`,VHAB.,8W.#CK\!$?2]7ZL"K<bBEW,!.5TST)>//FDZa/Y?e=ZH'HR,)
%AS.XO@tXY`*c/ulZ=D,XX`"-b."b4Mip0Fm@I\JOWSVt">Apr.7lh5Y))$s(cKrcPebsRK;<;R@1"<7m\]V^WNOmMJ='ZaQ!4-6W
%\ErFD$.K-MaV\kZRm"lP][d$-;uHA\)<qqh^A:2c=jL,=DtM(apn@>h1W%b/_T(L4eH4;B%u*S6F.H@dXGqf-qaXe2USXa/M)H(/
%cp+H-)fh,[rUABfHTon)b,rOA1#VL,d,_<D3B'*9S-c9()L?NC_>Osm9[n3<AOSf*83AgDY`TH],h)NK-@koIX(;"YTMD@n<uhYS
%3L5^p-(Y]=6MR=G++</LR>Fpb/DpW\P;(6iE+R9P\/E=VTmbKCqm_iL9]gDkZ105uWh`iPa[7Ms_kd?+2\u"`)/VMI^=FBnN:L=O
%Aj1,Z9RQB#VfpAdl2f'4SE('&8Y&=9Wr`MEFe]g6D]14&*Un`,Nr;fcPe`.'.KqHt<nh;RJ!#G=^noF6WuYi4Tr5_0VqpRD7l=^d
%$U+G8GHBDS*PH+hcHShV@C6XMJJXhG8jI='Z_lU'#KVmb!B-$^;($<;:**Z,$T+F4SZt$PR>?j?5c"r&^'S`mS#637OIOROG?b>?
%k\UE6CQP4FDqFE97fqkE"ZrqtO+P:WmA=3.20@d8ge[.1S.E!L^O5(kK7=Eu8t_k:JB_8/Ep'ic"1mth\?Pe<&\'Uqdgi2FjgLa4
%=3GI8e:XT_H"V5g?]oa6DnVEU-g>SZU1tNj<5:F6M>CaiS9aDMZE8pmegLNaN?b$'XMT@[*:9;HX'rG`iNDFIMVZpiSII`SGNDgf
%#cO<&km5GI8U`-k@A5;+ZSF0^][ZT[(7.Uc%Nc?0L1e&gVilDJKH7<P.4-g`*I1cnk/s<fSuP[X9k=$WN-'Dl.U<DEWdF\,RGj=M
%#3Y)Q`G"rk`g,6Hd\?Wu-2Ka\bCY.fYA.\BlD;nl<*T<h7g`cfN<\lJ.r\]BK4phSD)<3VZD._9*j2pC*WgW7d?26Ha2["+[?&Zi
%JV'XB5ni/sa+7:'Bi\K.rJ=M07Qb0[p[pEu.h$>Q%oP!"\\Gt)l5lET]o(ORX1#LW'aD90ZqX#MNA=?aq'tZ\eu;\e0tB$-Lc`-#
%#>EMIVI"2-"+V-"jV&_QOB/ijXjFW1%*/Q[#j6qW+K=_Sr#@'50QMDGa<%:J<ts0VJ(h'qlK4*0EMpD#@rPe.Q+B$Bk>jX%'6%Y+
%&#j9O&Z]XSCglYNpt:GK]^RjrF_0:>f(t=0DhBC!o#T]B;,ERod<[t-7pC/Ea]6Lnd&rc9q%)]h,(SUkmJq[\D!$_)*uG+GVe3R<
%3\,H61s6%fqs635Hl5YA?I)hf^=Psj`Rir2(s/p=Be,pZ5MPn7Z.M><4S/6^BJVlJIG'gG"E+YfL?d^i)bQYh(NnBeb%JC5+,P?F
%LNV55?[k#@;::;-XkK)JQ\BbO2aL:u>D>_X!t;BeWg"H*J>*\I2h_k"JLtt=:%<Oq^%H24XCHECe8F44##EK<`tuOFm6`[V:bS1:
%O.mSIkX!\DQJ48;7<X49lE/qlegf&uC)sWWLseQ6p<a)qYNa;(lVmb28FPu\dkZG^M2l?\72KYBTX;o0C+j(ClfDkY>;bMW5Af\h
%ZnD(cJV/&BA/.t#E)H'rdAQ,=U$R`SocF;"A%;5T^dMq?lL-qUn4>-&e+dfVT.s$>fikX<9LrjA:-E7-r>9c#!9ntOd<\m4e%[\p
%Z%,sP+kV=*>*f'U"2,5O0r.UDCc5J77O9q_SP_7bk3s:&aGCp],E.(NJsp@`LA-rhl_&IU*`G;%.pA)38>@W;fB[%PoC.V";+Hj:
%%?.<RCCWeG7kW#/BrLlM-.K(3jb/2JT/R,@#^LJpKBJ%#;-%TF@pr7ID*;9(s-g*jJeR7\G'bXO$M?<]Fggss%\'&sV%6;bNo,ne
%E;Y+6UHs;"k^hV]D=;QO@3Aoo1^g0rkkTZ1CVdf(!7=m2\%i'=d2GJud"L?ATc3/>HG>>[USp7em</5!4V_0I*F&bX.)4`NoetJH
%0s"9<`TcVSjV7tVg8Lr5C:^T<DbtlMWTH\&4Z]G8a_Eoo>>NL]T:5PJrMgSsFZ@>!;WHiCLP%\tl:87\UG8K\hIr14Fg#b*;I?!F
%bX]o)3mAla5n4<"Zp^N/5>2Go23R#<<iOgFRdPV_c[e&kAWV[jk(H:`OQJ#;.bciailC"!&^J4&_;uLQQ"<DPbAN+U@t_L)V(Q+C
%:kU5UW4R'Zlr'/[+k7m4^ZL(_?40%G41sl37rfn0^l-&*ofe5erdB),AH2($mAbkm7O(.'-D@EdoSc#QhnfZ9+O7SHdG.N#@aB>2
%^!YFW)L5lEC>FBCFP=Y-&-NNFHD>"/J,,4RF+f.\r`Zj%2>;0j$kmV67VsJ\ql=knR9hbF-%Am<%;e>KM;=;`%D-XrIAOiuT-"pL
%*iZ5ioI?n-9!(U$#Bf4Ms(^NlfMRpF4oUR3(_/!h"4UIRD`AL/#"tc(>eN!oGseEO\`u6J,DWW<dN)DiG%GT&c.T-ta*Oeg>#G2`
%l;LG.5jfi?#O(mY!+ts,IBmE!j(F,/q[Lb:Wf;b,2[<m+7$:MH1%V@;O'(bue#1.-b2\>@06_0&Ul\[X3#S2oMd>1M&/f%]0$$+m
%3[H9eHIW`M\SE:0e'/F.b&rllZYo1'#ltoU`+kiU*JGc;L/+bH;Pkt>c1V4+`#N=9b!B?WjWM0lLs$\7C"P62O<-WGhLC^SM6`ZR
%;DZFI"'J/43TNT@)@Qi!*Td2QnJ]'tg#5lqBD]iKVCsj:':H_Zr%Ys3)@SNBRG^tZs"_<.(2k^7mH!MuI!4BrBhNfnNF0GL"bWMX
%<%thn4;SF/*6pjZZ>c<tqrRgn0L7>J]Js<Xb<ckl?E)@oYmOhR0Ap\BhFkeH4Z]@7&loS'2pWQhpp.P+I\u"C#D`(qPPe,Do&_S(
%4JS1F*c`4p1Ilnoncdp$0.V+rq3EM&^DGg4BH)G-_(^5Z;0<=sXCA<BbItm;.1b=e:9f(*=`.NIj%hF1+Vh\L[,=T1-!.LMdJUeP
%fD%.bIbX[#_(Rj^.7/V:AXha.KgpX(M*fIhTHsulgV:Z3Yu+,+YF%=e/(ILlr:02)T3./EX&gCF74k'4jT+0gcfsf5`ac$Q]YBgp
%lL6G0CBU7lFAF:r<p,)]/p4t%E2eQ3%Hd&4^&7P=WNjg/MrJ0U-sf@1+1QDHP#sBfG/?.3TK.H466cf?$Pj%M.hB#6F*4/_fU8@!
%>_cZX+Z>,H6ND9)kQT*ZA\7Ng#*S3:'s8N]\eCA8dj-P$]/'D.)J/XUpCEVUAU\hPO^=Z@OVt8hM]XV2e4sR:]k$!%mNnIC[mXdP
%^D?jZ0./k%j`Z!*r.[@]:lo%aI&Jp/f[7.7K/6@eb2">dg\VrKoZ8g,s4GRfiUjBu.e3t<gok)NQ,BA)Gc0A^/1f<^2q6&T]UgYj
%o6>V<<.!>UVMs*/P^Y#oM>5*THY*/S&<9>i8+sN,4sug)Xo5SJQ<EOP8,)TYT]^Y]&Q(/%;[<,NA`taDNE>pD<ERI;dX%t0X3KE#
%)m1U8-n'-QLG8G,WFe3-;E0g$$@=8WN.g65jfBq%U3!;#jG?YY:/5tY$#<E1(LcH5_>+W]$-oa;C;IIYrd->d\r?a^2Ntu8mU7&I
%3bK$U[/)m$%%Z7'"BROH<Pn*e\kpA/hN_aO26X-L1@n/ONE!gc<i@G,V$Ji%E%*cUoXkd+?V?po(V"EB\0unB05[<f-j@d5b[,7"
%\,$pMV))_&ok6-"$t%4)Jnm:u2o3R6qE5\?7RFra@X1&VeBT_!CeHO8r-Wi7aEOf+TWkeG(_kTa?\/pfg'l-o'0`@.Z2NV#Fmp]e
%R3OZ""h0h9V;TYEiE:-oB"Jn=f@b*sZ*B`)-6MDXKB]5p6;TcDL^3Yj)c+;&Zc7C^.+1tFa84e2n8pT/$D&o-#Jl>"=q5-S:1D%T
%k3b9Tds7PnhO/0Di5=l($&<f;]9\%%(Y,GAgQeuYbhcT:K)*$u6ElR/3=_?K]cF1*1&Jf@`r/ES4H&V25B=4T_=eeV58QH/4*1"Q
%`6$e4@X`$/V0$oE(JaBRF-5&5gDk:/DpIn>8I^EB'AbYXkN(+RQ+>/!qU=6FZG&14Dr,uf,tjSm3UPoV2L"Y<:n9[sg-;&gbFc`8
%/uof]\a/t6e_E:i*BgCP\[g<cn9$?fK:r[B#M`S[)EOhA2kK1NkOJW`dpBa(kN=VFL&%RtDJ;:6cJHi:1?/9qbMUM7_@dr^QYUn_
%Id:jW0H\&WJ!a$&*hLXFB,GLbppRIkJ,XO%S%j:,Nm-D,LR.+qQ,_UlI]bWmNFJbCs3;Xu__C]Tb@G>$[A4QSk0A,X$d3>-i^3EO
%YI))]*ka34_<]g,o(;d`Y]J;"/gOB^o"mSo7M\b9\&-#D>&/KD2S-0&n?dXc^7]Dg5;!XFN_0\E[oR.8dGBd6"ueWu0[/P)h<FH=
%\?l+?aI_\i7BrtL(Um/+Fqt`b+g\[[\gT/%*,UHH1K$'DGX'fo>C<DN4r3bYAT@8=p$I.3;97:RJpBMfZs:^[/4Gn?NMW"!\%/kc
%c9<l"bN]ECZa;+:*%d`:<U*4Y95E9T%i9TG-(QL*QAUFd\5Z8[7[H/ud-^C%lSc$g1"PfZ@lM`]jir_.VrbjZ)-]9abN,#9T6>CE
%Dp'Yjjd/a,A@Wi>LR2es#Hu><8phG_iUY9;E$\[amT)_EgfW6YQeO$)D=_Z,"E`_I<B[[qo(8a@<q;$*j-=A2&Qd\CUUe`l_T7G^
%PMu+pFF:_7g3m[(6[KoS<p2YLabT9oPII5E1O'T`mp+g*ToZ3)X=gA6_Q2(\a8&a*3VBYg]-")Tmdgh+lG\pcYMPbgbA+Jc5HRu/
%c]>,DoCXgX$5K2NS8>oo2tuL@iRAfF#bS8rWo;]r]4P0;CFt:u:ZQ3!4a/?k0P`2Bo8,>"4#gO#MO9H?l'>@V43P%ofC#9Wq6eus
%T3eR0/%:YOqGegS=kj<RUlC0K;,9Do,=g:9)7^?NprM4=m7F)d]duT5`<R_.:->+9`MIB.)D<seR-;rBb&-e5G\\J&+'n>*X,$B5
%qV37/[2ulkbc].bH!rkhfmd-hgM$3E&(cRilbJOtqT&D)Q<@?f[i#*j^;B4D]#G_ucf^^c@d99$?LS"pLOn-tK9]p`L1O.Jlg/dA
%<+6A[k(LE+-'$6U8X$:FTAOUG+(^_t[[4neNg[%j8'.*EmVXnna5r;>`-iWO0Ctl:VTt+)cl8SkhQHZq.<3En.gp@rrO=8rk&/K^
%(ac]J:5395>LHF9n3/rN]3AQSa,KnL<ij7n["NC0[4Nf9d[[P.9J-\(lXq@a(F_,Va4dO=Y-'*p7@ASY(U_2-7_H=V]SbD-8lbdc
%m['a"VjJk]TtH*qDXZ]N::f-;.T3upY"GfY)Olqs>Bt"6^EF[F'/B;kBCf(T+3!-&q6N&YE5p;9P$#;0-l;-rQL\W=JE4mXCE'>9
%qhpFCD(Z+ZCNj^WhC(6>b#d=H(hRjJW+p4iP'bnp.^e'c]Lk=/DrtsKQT*Y[F1]DmbR7YFjEl1<]TbM1dcICRejn]XD*,%MTA8:+
%c%i`'oho])ok*/r]5]7g4)915c(46$p3GinB_>crp#-$V@&Hk>/F>nNaia%sC%HWEXDrX%X(uLMh.B#Uip16(lZ#qaQfFL!`F(f8
%X#/>abB$,6ouFA,cJKGggZ!'9I:(PuM<1k^HU>:,e.P7\VO;[#m*-mrc!2*?8OcKWq4u.Rmj'^Vp0k7gh7H61gi`0:l0PdB3]r<i
%;pVp!2:Zq5ae[OTG09'&]GaCL56]SZH*qh!/`4:O[*A9,U7E3fCFsnaDX@Td6JHiR7"3fN#bBs/Hd@V\PJ*#rW4C5&8'1_ZH*af+
%=%_rJf2erkK=.bTSHC_`H9\ogbU!eVQ+c<gW5G/ImMPQS_ou-Fq64sNll<-t4gpBZ+'riF+:_F;H'[4*.rt7\Gl*cDHYng"bNeA4
%l/qO7,fBn*:3Od:jN5qpR6,[iC^*\Q;R(>DMWr11>@IO'['oXl3fBSCRqJ]:L-'aPl`?Y*UasXO>Y1PP5M1DLSA2L>g)%Tg6K^\d
%bdiWfARuI.\L<-Md,iFH3HMaS^IsnPo(qccmI^6/ZYh="BD0n0Z^I/d:ua#bpCt?)YBICXc8SeLY);U5p3JT?1Oks?4PI;oaM]a7
%Roc)E)rY@t]f@P/SD4gEddOZ=6m`,UgoA?1p$ICE3-X+.m%j*grTEpeZgc-"?*SF5]+;Y.8GB+Hlg4TA,:>\YolB#"UNF0GE4*,_
%51J#Sj%$Q)>(&NmM_C.eQgE!rBKI#X8hQDOSt<6IS`epPF:!\IhE9W85$qZ-Nh=RsWq6qQ`VGk,i'ZJ"/?N6n7^'#EY6QSZoU<BB
%L#55%K?d],c;re.*nr]'i?8#nn&B9`onW<f7dh=e?Xu)Kcd/pVq4$tlF#A<4P>Bpl0MF+J@NT[Rd=Il*f8B%mM]C3if5;Ws7dQ3K
%N:ZFlKMbH]?5E>7O'LZ1p9%>m']OM&kP0\h=_?p+=D=2>&q<d9/=iurDG&GOZWW;OKf7*jf,Ke4qWT^qVXNMimbg8"'X#,.M?hlN
%AZ;-%gn[oKdX#iqeZJIt>eTU17W%Rr[Sr*&ASSUh:-5O1Y:.TeoJ6;Cc`K"Xk*d!$Rtpn=X]`g7Cc+37Cqan\H$sIqiSYjfo-(m9
%#TpM\qHPht7u_+CqL$b>?'Y+eTuDWSs*!0K%-R%T3N"CpJJ?dU9UA&t=Nm7ppf'1.@%Ui!bn)Cd#M!RE/0gV.JEJbAs!g0idlL9=
%YF2h*cg/jRYZqlsr)hS(M`JH-(tQ+(6OZP>fi,CqlA`f^RUcJ1-X+AmGTAI=;R^lAi39d,Y]>0EU4urTdp)3D,C<?IIb;3'X-1jc
%!d`<$ZqEm(9!8G&7N:fmDZtTSN-_.ns,FtFlN*enLpXL&8iT.UiC/(^#)qSY1l_dC>GPbRDp``6*WIrXJOUBCRe;2^cgHB^E#Q+4
%U0au-b&uDji*iFh!"A49:^?atD)4GK-Pe+o'UKl>lEoACgcl6)Wg7^J(O-;us*tCte5KlebjC@LClJ[Ie:Cbl"a<;p<hNBpi!CFO
%!?>os"n\=#Q5cT"bdp>il,bXjUNb-iTiIT"'")oM9;?``X3JAVOmoOLN37UeF9UR)HEJ'DKAdatm&F.3Em6]+@ApF)CO9/.9t;[O
%2sAi[ZBMNY]4Cem%?gZkL[D(2Qut2dC77")"oL[TQi4QiE/5^3G:_Ynh0RgR[&=/S9jh3f[G>cchoceNi8+:\LXb3sl9F+(*gQ%s
%Wso0#ANEu@%@UF<?_TO5R<r1Z*'2Ra^sftcINTt&AWT?4X.FHg_-2iHn&f_3J0+n:`V$ZZ<U/)>FhM%f).aL18U$)G#AjPi3,2sp
%&De`aKI@1/?+5\#`#CEb8[<GtF6hhU^+7'\[3;SY)DEi.PTOMDE]e)refOCFmLf<[Z.C38,D`8s"WQoEd07qeEMt\p1@j9j`Bful
%H?IQ9GJ,Z\G8#a5mThP.^r9&+C]6Hu1=m]507q%@`TutfW"J>U6UV3_e$U2,EJB=&`H(q<U&Wu9rn>DrU@buLrCa53O9^JD/sMpG
%pofO3J#hCb.I4\Y>CUYqN)Lg/IH%N!0=*Kc8j9>WRVS?p]m[!^1n(Q(6B^X[$jX.0,!J<XLTmC%W"0nYeNTqp^lR\Z1d6/hs,B#@
%pj^4&/Ak12_,-1Er>I7#UGdl<0Ql1[4(,\X(N-qaU+bV4Zh3b6Vh+A-Z'7_c>g`p<r@I6RG0cHq_csV)bFA@ag*+4Q(.lH6HaV9k
%YoZ$WJnlm[ag)t)/Vr$UBlSSHI_E43'&25%ITepl2`j#k962KO,"1&S%+@h^Vi#966@AAN\f0I0CUE*',AnNVM/OF?Rs(pOG+uKr
%E?*kn)4>#\HRG/;7[K%*`]DE&_gkWW>MP;]p=cM?k="Y[ZDQ3sj-G"QBpZ[uid=6h`>3>)n($N((a`6j%^US1>EG)$FE@!IUg>@B
%2hOWnf%YG0DcO1-pdQc;$`DPk45.h`^&Z%^HtdLAS>jBsXb:J3G8l6(WLYS3%r<%OhNh&"p@olH[C^fZ4+^&5OtXcj'>?&Hi&Y4!
%&Wtree4aDe:+(%Zk;tAVo"Ga^V/sMm9!T.Xh:tmEq5&&iFR9MRpo_$#d95;93Lha>k&PbO^Ql_$_JtDBbqeUre1<8cD3SB;o82bl
%mW,*@Id3lPRACDs+;E]q/E+IM\9[Zc=6mEY>'TpTF'Ye/D3qjM)`Llsb?X>:FT\"pQ4<)EBC[#'jLPghAl#j:,&9ZB.\50>%/7f#
%n`7O;r,$aS&TE^`Fmpg)mmp%A-+nAaJ)&tfo?X5iSbaO\Zm2a!,?Z),>OeGJW7jgB6=RlBd$sqf_`lD=Ut54@,qTs_B]:]i??dX,
%O=DpmPFXdkOWWO&D9MdaFdkRhooj1U2qf3pcQ)ujh_F)\Sb*heg+@2H*SkUOD<B_O?O/N[)+/md$,IYeC*a@\.6P4@?rsciZ'GtH
%AO8)5H6qdp2;sqt+MR$gX42JU<EMK^8F--C6:/n&?RY)qGLu+_13&m8ABH"aO6;KH0)rrZY?iYE+2n(EqNVNI,[tu_R?i06I8-$b
%`V%JBD6^#c$`bi:E9BrY0(Yr%TUbhV*N<\lX%->CPWtnpZ#NK,!*PuNLgGaYDtFPIdZ,aAn]e-.S9f>1mX,5A#ItmLfYk:8#48QK
%+@0X3>]`\)j;3a0gX^8"d@T>[iIe8A/M.,gZFUfHR*&&T]t0?l-*BrNb!*G6<eoT>U%+lBn9@`W4_+lVCkWgtDq[hB.&o%,<tAPL
%iFRqmU`1Ofk>F%AQ)-qu=V<A<l0r[lF86R3i8,a%-Bl_"UW,U2C.eQ^Hmi,KV-DA[meThH*k9s23h5Y?Dn8!%gIk&fZ:[?e-l(bj
%$,`]C-i#GERiNf?352TgRkLc+WOI()'gR#l*5h0_:-Q![qcjN"=#[OOnA'a%p>5:X8Ja46.p(*G.7$R^Og?"$H_Tm+bo.HW[Jn`Z
%9t[t,[7%EOA#`V,]*7EY.-u'&8?\GZS@0,o*nAG#Bc3@&0."R+EQM+L+l&e9_L0T@<Jft0]7!nY_[&cY=1f;%DVq/%InO?_V-EV=
%1"Y]n\"m>:4]^\=C1N692qK\?0Q%'cOP*6*<Z5OdCQDckW;;:m<S`QKYUppHbqdsIH=d!6f!RV'=-91Xg/8M0BOj;,OPdpE#H\'k
%n(bR;?oun/2=l!Y[&tnD>C:3N)20PY2kU\AQP/XPk>fcKY%$g!;AjTqPgn^;gr9sQR9*5:n$dJdP''>Wdc[%9p1'UQ>,e@W/Y?F2
%fXshk*St]bnEk)ub4N3QN%HAI$QR/j<OZ-QXV?tBbBN^s;U/u$X1:@pm>1Jed%K7`-%(&8d4/2YL,FoG6*028L^[3Tp%I@4^=2)G
%P##60Tl\*(O^;E.A/GY&kn9m/8n;V'eJj't%"lfOZ/eTiGLYY)$Tl]WL$!C,e,6Fu[KX(AGN%pdojX,D^[`#H&\3&C5lsL>_t'e_
%bDYX0(Ph7P<e'spPo)ZKE/3D(HT&TGW`K)=*?/!a(npWXT9O$qqr#hn-SYlF5@bokcu4)of%$pqa;]dj"5%)hD`e/`]l:O[nekfq
%!Z@jW^*pJo))arH:h/V$GU3dXJ_Iu7MmQg+Toh4*dms.S4OQh&Iba0+(&Oc$hX+.MECn_U>)GN1P1BkKoFi*819h_>JX9BY=RR#B
%YejJh4d'Lbf'b#+*_pdTml$p2=A8]01D6uq!)o[*RE!WAigKb)J:rGL=E17$f-ag'YATBc>(##5JiKF=H0pB]f"lYJO0uH\q[G-e
%)F_!P(tfAOp&H9Ei6S2Kn_<m*@^>q&)GfNG+%t+lH$g$oI6KXGnbOHg>8$@3[+68fOK#+7OjG`R$-s,K:Ti+2MT;+[ps&AeOt:`.
%+&YU!*sjSkM-!'XXJaA'R?qOZ0=&'l`c_k+-DADu.8tZNMS*Y8n(%*Acm&[n2iVosm:nd-Y&P%LBZVU,`K[WrhKN6Xi]nN-'Gi]o
%GP3;SH(mC(B*%NQ#/Ei21CM]Lqp`Gf%%9W/oomQH'dn_G'_q79_g`?4pkW12"8-"*00UQrgDtAQ21iWk^q)$_I]9ghN*M?#pFSF2
%030X5l0^5k4Br\&DHBaQG`[1)Nk"eT;F_%5)+FmC',U2Ze\oGdF.9\^bi'Tnog+j%<$C&3,9B9P#OdiD@L`JN7%QgK[D"<M<0+64
%Zg/iDHOs,uU[Ce[`>fSg4/07MaMD2W.Ma*tC]MA_iPF]V)J?%_b+\oWG-QbcNuWOOC[X.CZAK:ON1G.dHTWF*fikhKc(:B'`l$09
%pqc)FGL*eoF\o?[frJ*Tn5Y=)8.KSLQ2+tT.C]C7IXSV,i&M,E7o9X>.OSX1<6bk+7o2)tDKn`P\F#r9_;TZO,@@K,8?0S186S]#
%>Nr&adu1$84Km%Gl$<TRP?V"$1?G^IL%Rr=arMQN0$`M?>j/nFC/)*W^SkJ/Ao9:J[kHONo+me>,t=nVZKKGO,?io=SJf\DTl'>d
%)?!>A%Dt/qWPt@OdWKBdjE?lKYfZ6L^0q#/A-ts"^si*^,I*ksFV5+pG23LKdGaUa<Aom^c@r=O8$oAGBJ$n5DpBBkCTF/:(oXTA
%#_:LsFYHm`Re@X,Q4R(\^6O,Ga)<WJ9,j^HV@;$PGphtHdFFje*W(uK@<;+dij@$Z'27lAWfA?Kp#]&/3Dj'+-B[A*7S,B(jsc(D
%Z"GC3`Xj_jKk._o(.n?Gnd%uZqBO\BV2oGCVr*CT(iro?H$1id<$bO&=?1V`=s.p:hH#^*ffZ+mp<dS<Q*2WP2@H\35rcX&UltWH
%e2Tn@i(fL`$u!*:G$ETQhNeQX<VttFM/)[GKhaFHietT+FNi3Lq)SEMZM4^S0*^GYM3estKU!PF"!&pF/-7Sk"11A5FE[VVh!Nc+
%rV]8RI*70b(X[esDGM1=DL5-Z8m?\s8AC[+?bp7*7,:cIV/p)-8WBi#(SD+RAa1@>j7Dm4Xki<>e3U57Qk40'U?]__Gu;8f$KDoT
%]u@Zt.8aOF9s4Xd%F"NllJV2W'g7XO;?_18<i4dHjf>53N:o<IFIt#_aq@^"@4cW3&m?G2O/iG?HVn%L!,!^$RtZPiWR%Lt0WUPB
%FEge:GjQO"X7;X'M;KkkgWn0d5iuNPC`dF0'IJL6BVatJEf`;+gtT.2E(hn+l^ka*$6/*gM\GUQel45D^VAJ5\?:,ZmTnXr2BSQG
%e[enK:32n;4]OD"QV`Csh)8#dS)s:2q7qTN'Nd4;B[;%5p?FEaHZt_!-XN6[JSdCr;>4[(]\?)N-?"'S(rTVTBEfQpV>dt-9#j.Y
%DPP_s'*Sg%iZhgOqFMbi6pXY16ucH.f\];$Ns4-$[Ku[a+&!D)De?:;[ib[#a3N32c@OZ0OU,fcpWguf6THTsZg-45qC'(GBR&?R
%CMm?,nRb2RTSAK-dW>CE<D_Q'dgnopW<]9BHZSuiI"@W2eL[8n,1=&*`poeEcR3r50Wj.5&$,&5MgR`A;(?>W8sPW6i_R:c$5Y9N
%dSt!aoA-%jP3R*c9?)mVq[;0FJZ>eQeG`ItebAj`eUal?V:qO*J6nh>Mf7Ah`OO]:^62H-T4-/QBU-pPGj2m%(KTi$Fn`2L=$<O:
%GGMp#Zo9';S+dE#GgMoD(8gj[J4JI_i\uRlNi2IhnZ\47?KNKnQ8+H`%W>G.S5rEh9/hmdI]+5=73lVU&%bB:>[9!#05ib[NL1M,
%qe)JLr_';W>0C[FXjFrE2/qXT8"t18,CF*lM`EJ(Pm?;6D6b[boO<a:_d0CB$<KrX#FRp',Dl`.kI8,n/U.tJcG-_b"g]*6_m^!*
%d:*@tL[MN[@@)2WaGt2c@urBm93j2fiU4D'E'gCcg=oae_!b)fR^p]!4LCW-2mnp'r%/,G:T,l5;T@8q"qmK2)^@De7/Z=B8/@Y`
%\)8h)]rPd^Jqn#e[h@TPC!:pXde8^Z>CPC\8>`fg+RWLTd]*j=\j2Osp)/V7,#`p;\?!>5C/-jnVfP0FL5nYhIIOYG8sp>%k\u$S
%RVH8B^bC<;,C**-/)XA]`Jp'8&%;.G.HjE8]=?ambod%+o(G`r`;-F91>K$U!Nbt6UiZ9)+VimQI+X_99Q]npb"[6WnL@[jZsA^]
%p>No_#=2aPSeG*Q^-EkOCI(q<PmM04K<!sP,?!0/3j<pO'drl%-;gm'hKn1/&#X\HGrD4)[[+W+^"&rM0;qn,^bq*s>jPnK9CoZa
%>!)W&gC@2Zj%R).hN203d^_C.)'YVZ;bP<#qn4&la8Y0T$)]]i[A>1*mb^Ib7I&nJS:LT67g["OQm%L0k&!/,[N#Jk^-m_+gGo:[
%4Bd9/[:m=K@2NYLg\=fL$[EcbhVL#?"V>8@,C,_YhM?^hn$F,M=&G^W7&[Oq/jf:L_47Zpk;Th#?e;HW]iN`R:mb]L0&78kWk?qu
%j$J&[><.Yt,h_KeCX^p<WWCV9+n*c>+#W%a&e2OD1V-S!8!UE?U;oS3p%r^%mt29e17NuXdHjlOk%\Yee&#6t-Cf]kNXo14J2<eE
%[!31M4k$saO(Mma7)f?C(aY[P&)D9aUhlUS2]T$P]7qIkRa-'<?Ko_Li$sUI9Et3iDBr\VHsXIrI_Lr@h;j$joU)8g&8Wu5Fhthg
%NfLR1S9=#OB'?.,qGKAgq0WVmWH8_a\@%A;./eo.R,LA!]rVRM>q0!lMml#sF/bp%*k6\`dHIK6m7dTD&(9!DViGK'b^=Fm<><B^
%XgQGQ=krgT9gb;TqOqb?3K#=,?0/"6><Q+MX_#Hkk=ae$\29NrRh9$TcUfRL2n..6D_/Ohgl1Gd5+fI@i:PRk6oDhfmG0q\eU]XG
%KU`":<DHo,*UW7);^-F#PMdlf?b;1-@X&4)OD"2g[puU3DLqZ9.r%4OCcQgEX32<^7]`=shaU\^2rN<%F9%*jMkK&^3pp"+dr*^:
%C[&u1T2LN\*s;#?gTE@\@f#I-CfZ1&WQ`q-_imV;pe!)U?):TFlaa.*qkJfoY8q##94`d28?Lo"%DohR+NsFNK9);=WFn`u\F*P5
%7ndl-F1R_@>@BX3lF/+s#b5'o^Fs>9`@RoomRl*(HQr34lG&2-B92MIZ8pL-#'R/'g7)\8-\d;m8LRQ(l3A,6'!V,-YqNm/374%C
%Wtui*OaFX+Lu%V6%h"V/er&`mWjO=**9k)i&4*KboX2Y]&*WYkMYA'.AiD3oWTWjN]SG=5N_&pU2Q/O4&,mbUMWZ4`K50tc`slFd
%Ml1i;jX;8sD9a6S9FhKA1?bI-,K^ju$L-nW>&`#&f?b&l9^Lq6VV=kC4=DKR66^-8a`lo\2U_HVqjL^G%A%?R/'f1B`Dc%U=CBnj
%g7?!mC`],6?]#eHf3*XDcn+&d(s^PKLC>McdJjTj#Z';>^UQ#ultb49TY-$.-Xd1S0>%LpFOa"HG4qW1l_VUQEh.Ya:l;_!8]0?W
%0rH+A;6NU&2U8W*hQfL))`T):^9kP^Pr\$-oU_>=WB7$.8Q,:S38Uf#4!%JY4,rGn5!5+]V"K$EY46\_B0.O0=R8&N\Y7WGP8&N0
%YhsK7;Jih:3O@c$^L\L9FAT.DnBn)h;ia$gfOXWhNK[,F?#EUNp%*IQcET3XkFT?WIuGjbZs_rY*OCBS]e/2Td@=P1EuL'[rPZYO
%]3ZG&]Cb>%*2c]7WW2J88]rOA`;3/sA,K&J!$9X)2.PQf9uDC._.S@E*^JNPkgr7NGUsL&0@'`6aei\H3+LNcqD#]W8q?$a!'Vfu
%#maXZSAe!*Z_>0SSaZeVX5=T&Xq+FG-S)AsOj]bFKppW=+]^S9=*ut^H/.uH&,YnA;3k&^&YJL7/"D:=*G/E1j]MA`?n!G\_hf+o
%QT1])3PSpGA@).I--r?jC=pW!qj9Q,q:Jobk@]#+_E_pbH=2D4hUhg;[InjNl@&(JQ61`7aHZ=OZ*CR;fCN";l&jNB>ohGp#*."'
%FQ.BP?h$f\\:D'6Ci$>h\$PbW<p>Ror:QU;RrtLjY@h&5;U:[kXc3eh9=;=%]=rS@+4SJY]^eK]a-4dh.I)="=AQ!r^.6icSHo$r
%R,NJ&lD><f>GEo[Jr&Yk3PDijags^Zc5G<-*^J:Ts42Ou-EAgtJJSRA9cA7\fDTVRao*P]J%$He_Seoh;;d5HFQXRS*g&Y<RsM1o
%i,Z;=m.>XF])_%278XO_"GVbR+r<Vc77qi[VklN"07ZKC_CMuA`j.?O'#:WB7C"0CEjVqkM,rA59]iFbJn,TN1/!Km<oC%k7"r,)
%MEGO<niRpoN%+H''c<amS9%)(!e`*LF&>A6@%K,(JZ>W:Qt6CI.`r_H1LcTdP@TaAiYW?8MF"fUUeHkYg8#.9Q!G^Z6ElE*OV(_C
%VSI:bdV0-0K'l3u">e(R2B(TU(t+l5&6MMd_<+!I8MW7INJXs"`I*n_"DeQZM?*TF,Zt9:!GkR:/Abh^OpkHT,agQ'Ppe/HjtJ0S
%"h>`uZ!p[uYlbi8Jc;;EQ@l>BkWi*8Y]VZ4b+K3*7)Ui(ap<S&&l)Us1':+BX<L7;"g5lK7AN@M$n/<0+S#jk&cj`&+#"oC&C-u+
%NCZ0Z'6sm3Up0V.+u5i/)s(0JTHFSES2]@5]Q0=&8.ng"&gT0`*6n]qAVTA]+YUlL9,W[K.1la&.T'Z^"P?Ws'4Ckbi15ZL+pn<k
%$3R:i-=]\Fi^sVPOEDgH8VejhLN#rF$fG!;5f@pJQcK.LO@#a38dshdj2"Q&[\=`VV&54A"-I,cckuT]<[#tS@iR6P(4quRJ<aXd
%Lb9pu8.t\>*:Sp21Js"fA4g2oLd\*AV(CSG8S4`\W3?<\?f2t\4dcP^_`(K3&X:?<8;ofY6frW$Aqn9&3=7$g"_:X<.O)PPR(`h/
%&"nGD7+u1+_^@mpA6e1;'H7T+(>0XG^i@_Q8-t%iR)_5)249T2#cGNN_ug(68!k`i`df\!5`c!$TL^&[":+^"(i0\H(I`/cF%B2h
%'Zl5_[@f]*@jtSiN\D"-&P4Aojfh65(?KLI&Rab"J3FsuN$7[>*(VY(LYroELp[4U&gn@J.):N\-X`p0]IT*cTjtkZ16R6RkCDJ_
%9RndT<>6)m%Z3Mb35c7A#ndoX,S@P@5bgls\L@'8,g&sf[1b,m!(TFjGp+N_18$[(bG:N]S<OU_"Cqg$aGX%,.N>l)e7[!o4+N&(
%"7X;b4I-SQO9IZm?oU=S</uJY"/^q^FA>XPP?:48E0VWO3%#<gZclWbTJL;M`5Sf53Tfr@Ug]CjBQF`#d]3MYnSAjo(l/pP$b;Se
%@0s1@aG1r?PWjkT92J?g!L83R"G?d9$q=f*AO;g+&cNCW<*?"WBGH)s>L\hKKm\RV^0m(1;+\*eMkCJ,b7YO26YjVZZqM&;[f_,2
%>Y&sU"UH!0,g)XM,&lgTP9gB,(mnrL`1t'ECfce.d@pSks$6+m0Z!h[#NgdpT]$^r.o=E_^CQc9j<Q8g`0`qbGRc^]%QT"97Cdu4
%P6Lmp11!?APbIggnj3aS#>IjY<fS=b+uOm*3!m;rUF%0H''R_LYZC:lNe[cU/'-20/@"'pN[5<Q%O/Y\Zg5\YbJ1R,@.2-C,\"pr
%om^FY,o!l$[JULIM4lE]#g=J'S5$41JY6Ht#)4/n14WEZ_@YW1bcl_e4t*@,h80bB"76NL*5[dKeq*OT&S7kjl&3Z9dFB>H'82^u
%:_AHfll2uR6nD`cTNqY",/A5`Q&#j"D2a;oZdo%+;sfLIlG&7G!1k\`EE#b"\&g0q,G;MRTnNTDX#Sbq6[?Np!-J_K(#l.m7L473
%=[5_bW[2m`O:;?(:VZob.\^;e8Cdo;1&-VG;'qgO>&8fd$_g]>ik#9K=AZTg#fNBqP@>.j%%-Q%-[_=&`W7mqSR2,F!^qtmJnHJ$
%ZkQ3*,puLt&IhN5&-Ksl(r#hjGHAbr!&?MW9&gEcFbW6@5\nQ,(_Jo,70HgXO;knC'A%kl5X,\:"lA\Zb%JFu_8Be0b&.VRV[TXt
%&rIg++t3O_"&Oqm#EG($K]"7'3[b7+b`SPf#2K\_#W;C1UX2Z!-1H7)j:.c-&eu9I3XIoIFS-@i>o)F[JW$J"mt60)Ge9Ke`b:F-
%JrV?@l/3)7,4GfQ%tZ!eAqmNF`a%_dOLDt!`(:TW6N]A!i6oYVKr=@(/Fr!AK==AKC0<f=9"[+e>r#06dI)8G(jH)a:bjG(A7?,6
%I0MV(j\0<u=tPr9XSir\:-"%7;nr_1jB\jIHS\7/h(acP>L@$tDjlmS>P#LDV!E;E4dj,O&OMMo1U-I75Qb>'qUb@OaB25%e#>#D
%S*<Yo\\n-:k<KS%<YbKA4?26_"Zk,`Rr'h2^R)iAi@o]r-1MM7%1$[e(_p)6"Ze?9j<+kDLpdEjNtDn/^bgS:10q.RBctM-9FHJJ
%URG(IYDXY]"O,.np66_$!L!s(YJq]:TZ%K>$B.NNFQgOr-7hX)1u/8>b!J(B.MSY$P!_U[,D&Gr2TZ<ubOQ&K-kHpk?]ho]T4\">
%)sTY_0R4Gge%ekD"QJlZi^RNO]F%Pj](+Fq"0o."F]T"D4XnA>:LZmq:gX8?USYZ;:>->>J>,)<EFPBf@DjQEZKuBBk0L0HTT,<9
%Xhhs&*Pq7*s(CfVG3ur*/'TH?GM&5c"/P,UOF>Z].\I+[)V&,4GNGYD$fscTks@G%L>T`.2b*_''\Cb[-#HOO>BsXq"kS6mLR<&u
%1#h(e%OMdah.;#O*6`n3ppD3?qguidHat+<91QOX1)rqkmBS("rEV$;EKG&^PW>((nl^c)5/"!5c`+1><]S'<bg3`"=HB5bA5&k?
%Kbi)km%3\XP/E0t%P/k:^@c3-As7kLkjs)d3Mt*,b@?SngQ0IV3,@0?q/pNdr5Z+E2ET5LPNKYd-V84i[UNY$J*a@M9b-19\UKc#
%q7`;H3G\3\1\itNo%2QT^X/Jr=0[OtjeOQP\u_@UCt5a]]>M@>d(UJc>XHl!@FcFQ0fu[BNhL%Kh0jdZCOWU*ra"27rT!5_`DcNG
%/\?a:B:3+[?1TL3Fas-6Cj0MN*B/Bfqi@C]m@<3B;9t1K=>TKJj.a9Ea#nXi(dZ2)g6T-QkE5ELWR`POUa\0g=50q#q7\o1JMXE8
%90/)G>9n*i1C<M$PecS=1/@BbX68HJ8QH:XiMQ3[r7m*$<uh3KQhH6aH,5HH]Pa-jjWkWq+@n(p5''(l?Cr/QA:Sof5p*H(Jj9dF
%VfVB,6KSo3.laG$Sn-51G$iJs-:YY2lpbG*jUBdX`?0DB^iLb68h?0R,9nL>80Ngnc:<G6d'J'DJQG*Uj>-X*k?2<[lHZpto_`2R
%<\2%,X@$AL8(:l^TE7V_ccGpAq?0kd/2Am@+GRVV#5DjTT''(skFVVhDP_DMAEQB:ZLb\[Bm`s9_^jNMSHH6_2LSSG4el:GoM$L$
%_&_Yp4O%=94so8U./1r,.g>8G5:)@s$_e>KWAC&WR1C[Q&Qd3@4G^:]B5eg;S5*<:\)h1_cNg!eG9gh7/Fn5"m^'dA,rJ2]>Je&I
%,pl!?9^!d\R!"8^>?T^pHCZ?AP&>Rmq[DO!JD"GI'2h"Io"*o+*LUVkc.PXgF\cTi!c\Xpa&0.TjVdhC7j';acNGIsP:]_KM6YQP
%q#n#c,R-O;Ac^SQ,1]76jNrfr"&n1".\Ulk;C(\Qgm9iOU8i^s(*@X!,H8Fd=V=-(SE4$A.Jr4X!$"p3e"/Am#hbVNSs129rGC49
%ZWVHX_ha.!cm\<V3O>=k+HSCrlrH<+eK9t-!P]=+3q)V#7pNYY*lPm^E",]WJdW?")LV?Ae#'3>!L>J<j@)Uu.6kE*>g.Q`o*W93
%NX5;U,\sTm[kCQG?jaJk""$=3-/jF+[FD5Ms#q[D?>1Z#NcIF\eCV%`eh;Ob;?SD?g/p$<>Rh@Z,MR`MFSR1SMDhP`[t/'nrgB#D
%;1;oYa,9OS*R/u.Ka'ZdH]!(*X*Qu.(rOFNX&aD_d9B*kX;Yh^JZV"@hZ2nlb`H!>Q4!+RlejtPL`P1E<8h(c5==#I+`LKSq-E[^
%&qDOhFKdk_1Y2tb_r7)F=]%j3nb/=lfjLLLb6H(O,MP]>]P?B<Rbr3<0M&;+L'c>T-YJNaR<2XXku5nOPE0GL\nAGoZD2'6W+H5e
%\4Z[@:NU4rH,S][6<?_tT,HBe8N`jCId(oYQob2p!N&JEa^4>-eqg-e3+t^JOU)uiiL%ap''X!^O4rVO#KN;=DO^eQTt"__L6*u[
%q5b^<r?In$cTZ7HH#m;US1Ak4bKsomFp;WEOI^`Fh128jX#Gqu5f.p"mb*RJ9jVqLZ`5d22FT-"-#8dJjVEVCXr?:.^/;Y8@08>r
%f=3'K(D'Ut(^&T/#..O`WI_Q<*UIV24[O>kPH-]rS+#"VV/c0r^u;>`F(NBC+BR8K3`@.oiOmI]]"">cOfbC7S.$PHfa_L3<LX;4
%T*']X/u4%!2B>9pbQk`ud-$;X+$ej@0JF5"W0)p6F-bQ!BFg>W@t.&#"OsG&jgf_C54Ej*>L1#UHI8L%`b*XqJ7f#XoK+kp\T#fC
%"OK(sgE15)rUUQ8=QmLdY2QGe^m\oZQ@[9^P2a.8IPNtRCq3c-i@``$eDLNq3N^$A\u@Fo)\t\.5p7;5--ZY^<l/ZaOM?;(Va;+Q
%hkboBPU8i@$Putb#gsupKdN@!h&JTG*PpNT)4ZC*<CTVS!9);#7u&)OLE=s'[]6+^/FG6-SGVKf/7\P[l20g,S`U;QkI`p3N)#Z8
%msK:r85GRl/pKsh_H`9@j?5S-lZ=YuGpe1VJ)"Xl!RciiisQWI`XDl@Q*"%?KK0-V<ZJH-_5Q#>^"WN+9#;apkPoeZO1sD$],0j9
%:<Ee+1p(@-#)UpIZ1k;kEo(oVeKsp;_2R+F\sgCZS0sXc8Ckj>*E`QQ>2o)WNb;JLd>*ko4fFK9a*pB4AbDCE.oG?r'I5Sl\.;OS
%Z7==g?u*KjVA3Lka>t4,le)a:bRk@7aWp'NL3:CDaAiZ;#"lCiO:C^Of<?9$2F?31?5*4=0?ZB]JVQ10"&-FO`jq_HqW$Q)Psq(p
%@9H=5RL(Nh>>#'finMWhQQK7gn'NfrCim`4@/$49f9G0pR'0go&,j/^]l!b?@uAT!bd!70_U_%,9J,=q5hm(N;5s9O*PD&Bm!i"'
%\!I]*UCM8[hR>*Kq/+i"C'g(1=iJQF&'#2`Tfs6]d7YP@OQS1Aar:2p*B@3T1"YU>>2j)KiH1SYptCXWN'U+Ah2WYD@h5h^*e!ge
%'?6Y;#2j_GSc<+(BE5;_*:Nnr@JkQi-dds8#idl%2=4HNj86[kY98f(o#HiSpo4[1\K>>U*2Qd<3ZN#T$b1I;(+t8,IA^hESXbsQ
%RA&2iZ'H"EIpPW*i2Te)P`Jf'G]1bHfs08/GPjId=1PapENgKK4e=/&qDt+e8fVoA-V7?3Nih)7^:*UcX[Tk'P+nFdpWlOY/a&A(
%-4Uqs!e-mh4!,"=ic4sX0,Hii9ksHN:fgbLZSSEtZM2*3fA+U1@o@=Lbg,5hpC$^NVF1?]PT1&$8!8(gF>#lQi%KL3s(mlSQ%2jM
%\Vt*Grus'W/1,sS55BNP%`2]>MT21bHT&gRXI.YS)]YP09;@A=@3<Hu9!bM*F"*Ci(!5t75nM#%X-.;RI&t:F5P9j?Lt6,NcH7@F
%bEZniC\s^.aLPD8.!X/6F<Pn>AT'tm*dmhInH45&r-obbH9ZKEF-+!%@*`/t+-`+XUkD`U<C4*'m=pb2(=%7OOrl"h8Cqp'a;Y91
%VaAfuc.#S"C/,0qVJK,!b0"DgUmVE,kn\9kj0YB+65KSJ`(_eXSX$MaEiXkG'[piL#SQa-W<!/2gR\bM;'\>L>r/SReat+@'W^;m
%7j%Q#7DMIfQc-?1balrPGFaLW.*<#=qM\WS$AD4qNf7pYNEC@QU8jN>@,FpP#es;C?K:/t@HNo\*klbD]HqCVOV&NW,0&_m?D6&_
%lrZe`[a+h-dpldf9;WV*OsWP)@:[WKou%W54e>scg2)\ZK)USW#gqj!hYe;=c*CJB^0NmV%/XPXQaYr5>K,48B(Nq+V-d7ek@#G%
%mZmI?a>1bghjkB`X^Uc%5ZP/MD6p=*@0$)ePhO6=7Qg@>EAh=9,]AG)bg$@iW^le!V8s+t-9G=(rNlVR",E^Q%pSSt\Y&I0%4hB^
%G>>usm=Cak")9-f=#:l.3[\r+n?K'p14>CUFBMHDBiTi0##>&9cEYFr!D0r@#Wk[RF/bnSC.[u\p",1:iO<6DC5g8dNBJ;on(V'=
%0G9GC.UPP7EcSQi6g(ru<O!7X^FF77^3NcJSiL?)hL4ptAbf37cDplJl$!mF;:h-nrMWm?jfsm=aGkO_Vg\h/m]lfefhK3t5!WGm
%NU,*EEO&2:>ui).<gRra8Oe9>cJUFXp*HsYT><KW5*qJ^<nA*N>"iQ_E6"h3=;@:Y_p,_%8'#4=/E,:&/\Y8N!CkZU_%-faQ)[[9
%+K6`b:ap%D6)&aDCh(jX/5(&_r=krToKk#grpRSu=5:imr=G=mg%R4OLhC)R2](lqmc0pV#TbWHXVNh;hQ_8TSsd5K=k[B<<^&T;
%`tg"U]V'<UQ7O;tOgSCk!1Za9h;UWkdmBeEG1.R()WBp\VdrcoUje4t8+I[!.^AT%WfER.Zc;Rm<TP<s>U.4C3n`LA^qAE#@987B
%M?63j>>UXam__8Ml2I[\\"C>F(7pqW?,m!7?qRd=G(-RA6tUHmm'*(mF6N2S&m!`TJHruM;RI8gUu/I['qpgYi:JhS7M<+DEJU/0
%!*dKI,pbS\0Uc2L>&ps9(1N$\-OUrZaCVSjNo>]cSsIo9GS6\DIA(od;M.OQ-Q1+r9o+M%);28UTf@]['-Lp`V>oKF&JtaM$K(>Z
%qXl./U^@7gfd;\<ip%Yo?@N&]GS;fhV<Z?RIW/=rn^Gq%c,ptJ7#k58oaqO-VaR]I_,NRQ<G#[i>gD/3YX%T0P/`cW<m9V/T`+h1
%K6\j<?kQ?`oceBu]XC(^</h8i_c'6Z@!3d9$6Z&nn[gWt)5J#;@&Ims=.MHFXbO.o(4L'(qaCec]%k,6i)p^uZC]QX]5Um5V"F5S
%)i&Q"FmU^N,@#p6:*b#tBfJ.'M33DJ`@U1A^XoP;o9jGCXfdW0P-Q&+l1lUu*%T87'pr6Vhg*V>s4E\<Zd)QH>"GK*HOAc0K]W0l
%qW`rr$&qfF8m#Qh]/0+`Zjr>ioij/9F"i\+e(EPPoS9g@bH0>L,[(C`<Ym*C&Nu#m^fh=ROc<t<D(oH;[K*'/q;m.QLN",94-ecS
%<CJ8X(^^"T0Ij9I0=D#Un%8us1&r.k]_4Ufa;Wr&@?KH_<^6'>m)LW%]8a@l$K3h"Y1&u/(Z7e3Tlj>bq'".Mbpq_$Us'm-j+l4$
%4>/k;YAPR>3a2`&/J0Y;!IIkG(bNSWQ/K0nnCAnZ!][`FS=Y!iGNoaD/:b>n)E=02D&Tf6^]WVT^@*&8PWUTb&fTs$Kg]N3-\CEl
%;WfUQ;c*t?mc:%l)=&[KmPn[nCS4u7:0kR:`lfL;=;j:MB0H/@V+roX!h@lElH?$&[S_s=QP.jNCFjr]N$4RD6:Sa*R%_=rHl'Q8
%.Ppo0XA-HdQ[a;I[HiiLcq%3<@"=E.ZpE\P[G3#S%"t\i]d"EF7$<Nr;4V5#QEQ&sd2;\W9CH1`Xmn`G'e\1E'B43r#Io&2iA/&"
%/&VOA/.'S%(Boh',eI8:Igs4P^.JqMhK4\rH=heZ&WF",!7m+!F$QO+Y<[pk@I6>t%^IJ9s7uS:-ih&X>2[9OCIjN"=+tB*Y-VX+
%:L^,O1*57MO0R`G#nTlc>Nk*,_re3HEu0@l1MgT.Lsj,(V;g33hN9FZ!et`uEU_2P4Tk(\'2F#Z!ab!Q_3b0o-'/Eu+su3f39t3i
%IKJkh0T5$_J-isoh<pj,(I!X],3[&Gls8O\kU5uHAD"A>Q^e2H`ha/``M7=5&_u5(I?*-oG;'G_P-[aif4(!@fo#i8Ka'1U^'#tS
%U3r1@KMFAEZ#VaI<ETDOd%1;7"3i5XrV.;q<liflQ79%s.JHl7fMgP:IUsOV!7Q!>ED6)Q9^dE*YIKk\XNrWMHtql`g/K*k8=fCJ
%\D+2%G5F5/OajN&an?A_-alGF:AfNjqPtaIA>[9_G%AXh(=#1]DcI<B\-_XH,hkK!AfQo8KPO_DI8ASCAbpTS1gu,GG?"\(aaUY@
%Sg8g!"cUcl#,l-mOSBaQ58;8A10hJh)rMPr2Jd2WBM*to6nI1qWu/hP"`Gqk"l=b'kA^Md\Jpp7)aI%TWY&(c1K0J+mV3Rma?<]9
%*LE7gU_NHu(=H<A*5'f:'&++"grKCLj0FcXo/Q_%UbN<UF1u2I'X`>_p\rsQU6Nul^iq/Vd).Ik[<&4t'9*SKG1L$go::]urJ*-Z
%IBp^0M:f!P".J:o`PrAV?r2CFk4+hOGs$[s5'Qqk3,0XUl?,Eo7?AYX]K`/KRRer%o\AXa<:75m^tX!1Lr_(VRlS_&kT<dI1o8Kk
%d"Z^JA'n@C>puN\4;r4;DGl$]&nMg%N5TqLrZXkRl_7\N!\Zo.7*T$aQ?QB$;$5N=fG`_I;]V62TfP_T[S)`WI+,PdCYX)6WUK2k
%q0(#ncL&H;4M),2cl`0)kl.4RdqrVg'BM#V:f"K5+BO=?'fQrg`-4a;@oIEu)6e=.k<LE*((.d_P&,UXkOWnR3tR2K7njW=$=@]_
%Ql*%6GAYTR*:9!Xc(0\;Xt`$pe0F$?4Ta`&7jJ^+Y,6/88(5iga!qMqdAUN;c5(?FI:kVQ5OhuWi]o2@:b&_op$X5=Kt87!a#rDQ
%5lb#m1B$jj]^\,g*maVLW_lcSW$40O`cP/)5\*hTL+$&[`gF5J4):p'>D5[9m*bTIbf`9eY?jB+*%VF?iE+OAP#1Yu!'+#^7M.`k
%X+#+Zk/bj!-T?B_Wb^Y[UBB,,nDDn,YPm8gAs,VDU5HF^&iP%MW%O8nT^%7^!%[??I.a^V?,_[2s#P50V.&\Aa"M/P[S+$off3]b
%FAm[Jp/+L[jQG_!8GWc#_>;N*hf$?7T%U>4[_8C'<2lEBi2#jBC.d5*/_>i+nR,e?B]S;oIbYccd3-dt)kN-JU$8>TMYM[&/RA:+
%B<k7J1\fjl!OG:"g@1;^r<H)e:8tLmL1LJ*(rbYCU^mZ;WUaiK^[BS5"W[*i"F1tG+D\;MU^jo"$]Z2W'[DIb,\ohU\iW.^G="\p
%GA,TKIW4>nB#=N<$P1ZV>BCX@0gkZ-0hNnuNqhr1.V>&d\G+^]F?.G);a+YmQBS?"alBO8n_L=^^dU(87Em)1.6^JHE:s:j%k<Z9
%U&M;AC5`9cUMLCt(Vsj4`9NN7@betZnR8Yd5MU3`Q$jV4V$]T2&U'_s+Q'lRk8DQ@m]*t=/5`9G[FU.TTj0`R@#Raf(S!H6hh5Fb
%YZNc.HNr(RL<3[AiGKM.RlJRJ]D%Z%Nf/^>D(1EL65S('Voo2k!&nA7YW`bn`)tZ/>Q[:h&-W@VObsceT#/V;`B?p!E"0)kb.%kP
%JC?Bs5CAMFG85TVp\Ya$EN4e_b_\nT.+I8#'PU5?:$U65kb)g.,.q@,WLG1u:'[o';Br:u$J(83AU>#,Se/K'Ws)VJ2Eo+LAE'LT
%3kKWL6P,]aF-=KcnF#Wr%D.cZmUFO_29HIc`'H1WZiElV?(5fl<TOE!aZoRC%q<tI[9-bB&&QYNB2T#!LB@=;SlAaHbf0D3i6.M)
%i\?Zd0n(kmNc>h;N]5XV%Y,TgF()<d%l\)KmV'8W/3q_GG`g`T,q^#.NiWKDZ-#/L=I!qWCeN>AE\,?Z,'SOQO*.k'%K]U?EPn"h
%.!$kj.$G]9RSt8LM3pTt!e\?2b@74eOU^:KnQ'[XcP\?JdZXraip'&d?de4HRLdXu*:#'AL4)4][90R+NM<qEfI9Zq(%%/4B7;,,
%)M!nX6LqHs9JQ;7e#Artd$O:]CMU1A%\QWNU7;<'E:e"`6BsO"bD]4RMWH7&Kn8]Zb?m\Y*.W:=K`nJ#3Ws.;-;SWJ;@K"eD@cl&
%2;=UM9FY7(j[h]hkScFED-J.Fi6-k63/sJT\Ik"?:YlG+CiQHMi`1s[dp]_tr+LUoAt5;_4aMB3TZ7q'1UCD&.oR<296ijbeG="e
%9coUbR-::Us0XUs#muZQWC8.9ocjSB^FZ'ZTG!_9"(Zna]`6kbDZ#3LTVJ>u=-0/[Z.+Q?SC9t$BBh<U\[@$a7;CY45Pf`KE<%>G
%(K%ek+gs^"/hsSRbL6&^"'(H5H2XlN@14mG;O)H!d"mN^/>LA$l_teb=pE,#8gmrl9]ao29sANN-2>?58bHUOMK[Y#%cRr]<X"+C
%iS+W]FTC&Tk,L[-A#Y<"M)^u,\)9J$+q,15>74`0TU9"RH@6P`V:#=_r\^f)FIl(gqg@OrO+Q)ReNI[#WiBdQ-l'/!O]/gthJm@t
%+mU,0c3TXcik?*-L;Zn6=o)jWEW.rkpL)iA0B:97+>Z4/iWFMkP83*hr%<o2cRTs(<MmSe<3"@Z):LY5)5b0LZ&uAt$:TlH`jb;V
%OjlC5][E6eaK*]tnYpi0f^9Z;b&%W_S.llK&@AkAE:JALgZ&+[f!eUK0)k8Gg/\SV9$12#W`NYPR,/D16K+<^<MPF<VJ[R!VI?6k
%@qg7?n:D!.PI=`!@,MN&"AN`7c@reNorZP=C(7OV8h9fY!JsW\D2Ql0q@420@b.n/EIb8JX0n"S>7hVckd%_V`!.AKcNdhVX<Hh#
%l+B2g^U1a*^R=N,c.p;]Wi1'T;T(XYq*r+T\,DQ$PT>%5EM]-/bqG?0.ruHKcLJ63W_.4$?[(M5,@6SaJf)r!5-Mn*cgo)2>i&#Y
%AJ&67"'qXF[kKD5?>CCVMo[*-Ku-8S7q!>;:DmlLJXp]LR:n?XnqG(i:jImKZ:RD,e%Z4j:T8hZiQj=q"fX"WBq]$%]k"P<CFW@"
%mPI2-1n#p=rP9hQoQliT7ojIp+W<N/Pa7P-7uT+9'/Oaqh\"gQ!1SufWe'ljR4g`qT\jj8?(r?NY>-f"4IH#l;fhKPnb*l]GoI4Q
%53QoiKkheN+;gjX8_pt$%*,O5"NPcus#5dY!OFtHdoqF<l13:p="d(YMoc1<%fK=r6(F_SCV=SHQm_?l*+GERBgm8$CA2HI\R\R,
%=o2f#]0XPBnDZbgS:k6]AW@CMEJ"nNq*rElm)*t`+3FjG;(sUQn#X7c[?5qKo(*<EU0\**J+7jm[blZOGiX)^4KDV(8riFFg(++)
%e:4mh=Xsl;A8:?@a.?QE%n[0B#]iJUo@Z)iLZ3L&ZWL]tPNkaPXW'^UH%9CbNC3;8DL:I#g&EV$n86:-@k15=\^H4GdO:r8Tp4Pt
%GAt&V*7TN0Gm<PN#(l-R"qM="[*t64lS)/4/)ZJG>XPIE[*/_iFXT#dJTEHmCe1tP6&Y'4Xad-Fe4;sq1]oamR3Mf/Hl>QL7:(DO
%cJq(Fh\C]NRFNQA=o\XSO\=J0='t'`YZ?i[7hh&M),S>DCWP3=oh/Rppb54Ebo-0ok=OA'<+M4-<1N9#X;$1%?ThN?++Uj!N7IJ&
%`SCLUT-(LY:mmqjpZg.XRIIWRKaV*]eDnAEGsi)GH1a\#@hmXSVR&uol.S,UURlF4ktAoo%SY$U@8$)(&J\;#,3O/Sd0a<@Mt`L6
%U7r8*,c+ZS[1-eRAA*ZVVoj<oi14=,Kse5lqfRNf6Hg!Rj\>ADZS01R;sW"SA^39,eVGGMWSjIe[43%c!9d5_8eT+LWhdjEOg_@<
%6Zj\dnk#<q2uJ)KWPm@>Asp=bg+[YIOOd=dTN'B?*EP`dgn->aR'O3V0&jb:cn'&Cfa<[C<lt5<%gn:CN?_En%U:='c8]lGa2NJn
%9Lne]XF+$1Ag\6W4/F\al`03K**Je=?Th^;0+0IY#4h>J<la*FLhR-,3ApN3UA_T@[T%P^XjNH2+(@YI=9tAi_Ve*!)M:lP1pmmp
%.H%ZuU#o@*M,R0A3/cBCe&;el-OO\2lR(I::^YNlr>5pr4,rpqf=6=pQ^o*^"8-IX8ui;r%IQg<-15MOYZ40K<U7/i#Kjp!PYCTs
%dT\4]M@j$/+N5qC^+h2k<Q-sPaZCAn.4%`.3a^)37;rafA>bmmX%0Ah"Y\C*o_`Ik&8ntZeNi54SN">aa]]57mEDi0'FLSgZ*s$d
%:Q&q[:gt2`$i@B-4c6=&=HgqYpn^<#^HE)pr:HOmmkUtuBWHb:3mD>0jr2@!?HK:K@h8&nW6L>2lU38:0!!/?_^fN-Z1dB>K_]=^
%-[E./WDkBiTb)EM_&Gc&aG=3FAiX(1;9A"EcN$'6ZNm5LT7\J7^ENC,=7sJ#+5XUKe,+j#.V[!fZ[L0&[KAP:Rjj=6,SFI/Ge.\L
%=?3\Tc7XElVef><*JV8]0?.YIcdgB$:i@TN#L7lqV.4]s2.,:.a(1BJ:UUAnM[hd9$qQ=_^H,L[==^"38Y!\4APYG$LaCORT&s"[
%V@(*l,tD,t#oH:h%(OKgn:h:pAP?>B;QXOE7_t&&FH3Q!5U)eh=9g]Z.OF-M>$YYal8rE)VSNeqDf]R!HNpS49,ld's1`"@i>@SK
%rb7QePD+>(QP\'$[Jl2rdEOqY[G2>sff@Xc<BRT+^<dIh\;*MhM$q!J?I'DC\cr<8e@uQVb*Im=;%Ud1U01R"opT\O6gEst[boY)
%qa,lNF](LC$'_Gq;V,sUVDj4)]n3PY#k2Xfj,s!j6p]Sd,UhBB"]c.@Mg+7s.;[>iqh()MA`8m#6tKrQ=q*-u5QRq3VO<b>%F(PL
%O!T$plTDZo=J`NS/&t]C)ZpP*XB<lW'eoOFA#>;KXjK;8Y>Hf"D=9de6)`-oX^9K_-'U)Os4b759,tT*Z<jAJcu4$_dOhe$dS<02
%<oS/RX#LI,=Jk40+5IcJb-J?[5/Gm!.D^>p+hh[F_1f*B?&K(`=HQsV</Gi&%kE*a7ZW8hbi1'=\.>$WXNU+E?dE*Kk'^k!MLSmS
%H)Mh?MR"V8(lBBnL'pE!nKs]t'bamab2bWI`&,u-/f_]$aYFA`It"MS8rW?/21"M03B-kN=&0p&IIk%;RR+ub82Ft@W!/TJk-H=3
%,$<Xji3IHJV0uLr(=G.a+J;3MK<DX[/8.K4=:fGc55O]6NE=+;7TH3ZeP8-BMW'9,5Z6)M"OIqC@_Heh2F9*FG$\5XT@0kSRbDOQ
%&Ot/>8!K_s2)3S^Uj7K&eMKOR26KY$B%tLT=@j_oafcC_#o22^Z[Mi*hCbkYle1n3dAR^-*$tJ>]/pSPF0<KnGji7OG'H6lp3FL$
%8c"CMc2G.+j$$AYr`A`%M_VXR=D>5@iP?hoCKg@f!M&+Z;g;M0"BOW7L,2WL)/>",_`H(74V=!<!b[QTKUf2okD0eBqMksh2]DNL
%*Id/nNlDZ<Z]+N)ek-Kkgr+nmXINO+'>G5sB-QWF;TM=er*kh<.bD!_k!>^MH*44B!jl4q's[8Ho1nK2*g-=FUKZI-<=L,H.>GWW
%Z%]+`\7MM$3aYT*-oo](eV6WE=-ssU4j!PD%k,$(qf4GV3QUW3=ru!h0mUa`4K)AL\t%2"2shl4JA%Nk"VK*Y]-3%M4e9l3!n7s_
%Ia0U)@`-*[0ajk]S-TN.Ddi/Yki%@":(=KgDU?F\@RDmHR)p<M/E'YliK.%Bk@Z/Bi^ukEk7nZ#`(<kErE'sI29iI66!8o`K6Sc/
%RPi<bi^<UQ7kUsN#;h@q#o;[%[q^Ts(*`_=ZG1GWU(OLe:emE0YO<lK2APhg&+oAULL:EXqj`nDYGkr1:.6`Jfk][f:kdERl,0D0
%SI+)fX*Bg^ZN3T("'4at!jBqNHB#N0A$V57<B:8#V5_;`<(qCR1I25pc3S?5drd6agCOO+RFso:0"'f)GI^ps:UeTqc_jK4o_`og
%h2nr?9lDRLFKZBb=ZT7&8JuAA`PRFD^$.UM7GJIU3Za+@CrL`5IqlsY'%^1=eVt9?J@#1;F19YPK_WBZib0c'ao_ni7),b0E\o;_
%X&XA>AVfpQ:os5XO-QTfklQ?XCAk"GqcWmeBV2iS3a?=ST?%Nlj+P6GWNIN2ZcF.ch*#A1/*Yd5+S@0(i3sZllW9WY,2b`l]sC4p
%7:j#s;_@bIF-IBCm:)qoPN^4II,>m9#C-f>gBQ7D;j10Rdk"dXWOF:X=J*5tK04)$/<K/R=.JQ4(cV%Rk5]KAFZ).q\*5VDr=E!4
%97l;8TO;)GGirU%B(sIofC;R[7Veo:go!I=jX`*iUNp2j0+6`JEk@"fjc;#YK+7+bU9c[jIQBT][*!EpD@;B]YD$n1ZIm,[&Kd-Z
%7g.LVM=8L?f>[pjQM"s$0$DpP[)$JUMTR.4H0?t"cHcBYjBlm]2A76T<N:oZ'A90SQXmKsKd%3#U6;P,R4CiD7Nnm;XhQY`IUW?!
%p1fpf0RZPZl3OjPJW*T9>H1K_/9aM0f'X8qY35:>.;)Xb8N(F\q;I/"#,t[A9<*gMDp^18^cKtE/^Z\,EZtoI^,=R-PCfc!T*BGO
%=Gr$-W6,nd2$D2c:C&d#![J@;"cfp`3&B"9[gj;2ZM<AkgmaK]DnY*Ue(+(n&LYU\58BO2p#o,>,+Z89SOemf)FRqhCbJFQihA7u
%3_OQkZh"NYJWAE4A71<TZ3L]\)7]<[XonnS(#bm;OM0#j9R'srW;C`>K-i,RFcs@B$YCic3]n:jC3l"N">FK/c<\/1GdX*AD(Al?
%[)(_ee%qtarDWob;bN5%GI?X>U\,g=fNV9EBrY5Kf0T>P:H'WsYdu?LCRhZWc4^'gTkkZTXB!YEgq(';=m(>n\62WG8%&ic1]L+)
%*l2"XC!=J8p(j>fLhh'URE?_p`mn&<(;iVl.,%Nl#WG7pM7)Q40_%QYBkZ,OOH@/3WH@",QWCo3&0ERqJcc)O.g!bV$WfY(5?(Gr
%U&i+JZn1@mC(AZ]e1hANY1O'm/l+3i;@$,BMO&PB7"d$.2[Dl/,k'E(eRBj-$)s/_.GrJ*X+1DgQ5D#9MRHkrFI+k="g+AH1;=m`
%f62hML8a\`^I'7P]gJFrV4V!l[2LD>8XihVdK$F&nrb)&5^15;`74"jC+E,lZSY[PNu^(W-JbSP\l*["QI%h9mOgPNiRgf[3u_3,
%SY;FtQlhe+T"mq9M(:h99SfK!7'qS#O`r86B^I)a?"4s%eX$h2?(e2W$(D"h$HRCc$TKn?Oks0pWled!l4$H>pG)\irgpUSQH\TG
%&5%8<kE9;^l`!6]66t_fi.GHaegI;.k0^!$^Du*S*$_Ncn2Q<UQ1/Eb*Wn12$W*9DVL+oB1#Ii<,_?$eW_em>b*c+`Hcg!:D,d3)
%JofQS"1f4g!Rt:>BBh<D][T;0i@__W-d>(ZoRW/hLLmr5O`FhW&Bg*,;1ZS=;Vbi_]fIu/_SINVKM!\UXXe/&46>U>I*ucnJV;^N
%E'4+p?1Pf!^@Kr[;Y0+YFoJC+fmHj>l6?F!`]8K2<>,T5G4c2Q_&aIR1(aplhQT.?o>1R%8Xdj4YY4@1ar5!hZ$,W-[h8`,1fV,o
%IE,hgEl\]P7J3_S7!nd^l^+2hpc7'WUDNsRo:s'WeA!83i@if<>,YXWiLk)A,_.cM_TV%QEJF<j13k;m.nOc!ToBZR8B`Y9BM0!:
%2nG&lL"MtB_?tN67[,HV<2(t6&m"M0DATe<AX(&W9%XRD80%jVnJR5>VhTQef?"#`j(c*7b%6$^<+W8\0V0/Y&:CJ:&=K##nSm_t
%>B,lGqL]QR1F(,We\gZT90R;0MOI`NAPKeVdtOVI(,,>(a6$":^(0'.*>fNs+X#iBL*bL+&FV*$Yq"VIdp_*`pd;?^+mROO8UFc,
%+1(?Je(S,i47$XiY-iK?6'2qRgJ_;I/s*GGnE2,^W4.[[(eTL7i#`2WaeHsn'^X+#F<;a"Ol;7\'1m;ZjksCiC6YRC!QIWsUeGP[
%FU08FRrG]2&2Y40&Eou_'PO+l0bdUlQ$qJ*nBU$.pBb2DR+@I9<TVp]SaWY9.Pm4CU;DHV#N,1?S@epnejipt6O%R*bPCe@Kgcee
%p$Eji9ZmtHs+b3?!LQN.3rn-qIS.&F%a"(:U":/HX<O($o[pb%"%gM7U07Y<3M%H]cOT!+du&4%h0lXr,dW0![Y[b2:A$2=rIVV1
%)Q>RQ.I1%Tr4i,kGkE_]&Hsba95_gZPXt$dYRfaqOD_25+sPX3]iqH"81KV$J^9_DM@4t12u8fdY$;)lm^hLOJ;N:<#fh'orL@'%
%XI9a3-.[KGcSQWT,tkTrYjP[%"=7f)1oM_Cm-pa493cuK9!o9Y9j1&+eX+[U_P7c2FV_/CXX!Db6WaOZ6Em.H)Pd>q\S3FuE0SHP
%)F1?[p'5ZHE`->BU2![ABem/<nMXAZ.K[.F,<+IF.]5ltA:Yq\[Ljpp[E=(Sn\o"8iItT.$5/&&TX_t!`!T!Xc8m&H#kBX*O/o6\
%;IA#qag>*$Xc)FYc2qJkP9JPdh3p]]O!9FEeslrnS-dtI^Y&d'eLCGcLrgfa?:a$5HAj_4T9D6Q8jp_mAW@h)b%5:*Q'?=)&WiC2
%3?+lo>N_N/2S8"o=om+8Vq02$`>D2"$K;cFJPoDo-le9s;l;u0MKFQ"(/C6YQdDlr^s4NcfHPF5TJ^-?U5WU%8I0o*)3oq>:dT'[
%Z`ALkgi2:,s$!NQjJLE.7N9Kq$jNB`/O!K(33cl:cDhqs.bEPS;7<@q@l1*j&Yo'1eCA-lGq)AmDnZ]+7``_QlYG]!eh'fFaG=fF
%]LLG8aC\(4!5KFL0_ao)=lfSjDR1/:C#inuD:-8-*Z*EiXU5t63RT&*mA(=PWIe;!Ha<Q$J=](\akVTIilX8uOWM[#D2LA4Z'duo
%1gfdcVPQaf8ko+um&g_A9WUmXp[IL3W:PjgNN?)$aR"2c:T%!cSrFR[knV-5Tb[s\R.q2U"W"f/LNT#Re)hV20=)VuFq6LI8Q&)S
%'pNA=n5J8pFQ?r1W\gf6<cC8d)U2njh$SJ(kEe^tJ)J[:DJ>CYe5tJce"Zu(23M+VXH>;<0%RWdQMA@qmo7f;7jr.@q__9HRqRVK
%E&#fe&N0h`?3Tbm&KFEk<;WlB6$1V1PIa+][.4@HZRsUrB9.cl0pEu@N2Jr=*.UEO;IqbQdY!4!g(e8!AR>?Pogh)H2kQoaH>/3b
%kGUI0U@c(1Uc[gl]!&I]7Tjf=iQa49%[6N3rA=n9Sn7i'0i$lIi3"OMGr0]j3l\A]'87_'-0s;H"C6%2)V`<?6G3B];EGRjK'u*c
%YY<l^\@AN]pX_B`(>\QD`PA@DN@^3dHN,#7W%pU(cf7)<DqNRBAFS7l=*?aag-'G`@lkm2Bg*O5QB)8s7*)ap$DAtZZ!CP3<m3DQ
%I1sWJHQV`.S^o<q`Q)nD5t`VEat1XHFqE\5O3XgN=R9<aV6;!^Z!A3UhpOpj+DfZMeNg^Qk]Or0.X(2ce&+3ZDRL,ZZ%sN,ajJ1/
%m6DK]Znij.?)(j"Yn1sB:hX%git/Z!&HT<(1%,=BC*&8qCQV&Fkl$,mI2;JKng"._(O:pR$?Uu0*T'AgZ)3u'foO7;@mss1d;$b?
%m6q,VLD"+O<Hfr^eT8g_\no5,McHNA7RWOKl7]_8DDdADY,$or.TbS3!^.@%`A&8%EpPG0H,OgVU2ph3Uhg@>?gELl,fHIId@&st
%P&=YuX$<14lm"CLX6Dt-*7\i!P2aG^1].C8#MI/Uc$Bioalo'[3/@s!_>K,.2<&\$q5:7FdR(R8N+Ykb=+mW8bPVtbS<r*=TH7*'
%cHI!*s#t7/fk1rhLNSsM"YC(`#m0AA9gKpk8D!B5!PlY9*a&hIj.$Rr8IhB!G2%lip8%:hDe_k1GF%mQcS"I%^S8op/nf9u.6?4A
%gHfV&N;2m]RtZ<Z0p6B[WeR.kI#WjY&M1R-itFW*rB*1a!s&aO54fY,Uh?oWPRSUrjqg>`IZD;:r_b$N3agB$qYLieY\[3VC`uI)
%>8H"Y(D]`q1h"m*k43[uRY+%gW^X#KV.t]M#^e^E]:pl?$Z3AB<T^5>2]Y(fPjMi*]t19ZGHBh&CT43^.7?b3[3ESV48[i6Qn&:,
%R$$e#dAMJ-*V=>VLmMe#r'GfjP/9]2A/c*?UPeN3W<>(g0#>QCL29jD7SRH%gN1g$aTAB$nFEb)h##cWqZWPDp\=a`nFM8&7`H/V
%A3nPas0Tpu8F7Lk<8RGHn)&Rl]fsQqs0G1qr,B#LDHMRp(#WO[-S_T$N+jTb@-`iQZ7(+Z(G"nL:,q,a3WSkYB_38eK=a4[khCT;
%)ZJj9pk,LT.]l`_pu]uo.?Z4GGcjcTmH(i=$iY=;S?\`tV9_BOoGD5r?th:h,VYCr%e3AZ7$bjH;3JmmW]Cr0<e.YdiqMm>\[Kfl
%ND5#j?ohg&jabB@70AG.;<tiHi>lp]8i+;6Q(sU8#!b-7!J8IRQ$IlF05G7LVMV)ULoXaHH>%iq4fS(\h3<hf-ZKIoMlHN(XUBD:
%*I-Zk]8>FWo+s;?kHnU!#bt(rXV_r8i@aM_;U$pSA4^s/Jr1MsK)js)FNR;$0UMFF>CU'K"3/tV=/)gtLShu"=<k`8U@8uhaN>uS
%n.[S[P?,(g+e8q3?K1_Ir)lMO,>rhPe$`+/dh)g_4'-NVh9kSlF@BlbA`"TMIu2^=GDfj=(>IaF9qRERI=_Xp92*#(k/_-!NH#it
%"U(S1W]KKD!o].LgRLX3-ndDc.3o&li3$G:TFfCieH^!Te^=Vt.je/l4,6(npK$-X0)_:mVPbo<Sd0K</;*M;5=VLD&h+ioS%Taq
%.>Ho$5c==4K`_bEVCSD)\3OsjMUf7:r9ga:5VCM'PmtEmp(O:0M,<L""K\UOTEPtHD_<^E,u!:im^Eh#ZS4I%X,B80^,c]bg579P
%-9P5CD\M+pWuZ<cG<68)eKYh:r1OZddjcq?k^[%>50s<t.-4[q>L!\#oM4pAOcu$h@4\F*/d)'rh;M.3Ea\]>CM@c6C__8^lro__
%53Y1F=*93pfh%rTotc`>.-jX9g8Dkmr4EjI[4oa\@e6];NHtb7F)_t4%%#uTM[H$5722;OWopgO/J:9,0Kb3`5&WH)W"a9M*N_4K
%BJC*=ATYW>R#BG`K$FB>?d!h)1a3J\S2>=!m(o9dp`hM/f=Sn!4G&KYHsW8X_S=XJN=(D2L,U,&44[b;\\Gq$F55[s6@B5l[1kU&
%'\p)=H<O6I"SW#m6*q)d0q\GYr[H<gBnUBT[MC8rS]3ul0,N6VRRnM/HYp?+=-6bJb0VB5GrqK1oGKli*`G7<X!VOD1<Qhd9*N:Z
%op*^f670^()$O](-@^>L4/W/F"8H')V;4_Z"g\n=+'UC@VL0l0SAiTqYomqQ!1_YmE-DJo@n'VL&MHD1eS)!m";\i%loP,>0"CbD
%@HTER.4WA`dB,kBC28#%7i$2nm4*l7&oFajlH5(MRY9>,bVGCuXi4q]/VE582ZEC&2:YZ?R9tR'qu_*A/GE03)ldN7!Y%O@A(_5X
%YdROeek5gP-WNaS^8`q@[bC)W6;u<6VNf4M_`;qj;)l58C2;F-CFune,55L/#!,-EQAh[61c1`*Q^#07aFRFt:#o-`??C<+V7F&7
%'NY!#A\1r]Aq;VAb$=DMr7R')H6#bTc`kaQ0@3HHXH.=S&4>>F2J3@1MRZ>gGNjT.:08f8WCm+^"R4Z_9`6Lp#P3]OhU#`WJ4<5_
%mRG?mlSQA+p@E'D-l5umOIL_eh1`[e(77XL.s5#"JEJ4GPl?ZaP)JMr/`=GQSYhb]NDak%k^I!^+fRC8'4s#N6;pbOVdg':=ug+\
%9NN&gj&Q9kl8c3!)`\[S-pf!J,0KSUd^C-'"G2-gOt?a).r&CR)g\Ffc%r"[Zn+jL)]J=PU@\*/!AfR*UI?oh<2XPCa0QVKNPMg:
%)!;A/eFQql*1YO0ii[^R.-!!uZ>Snp&@fg?<[,2&-s:C9;/Poido?L8;IE7+7RIb#@lf>3UAfA"h7&8l2b@&OMV")c<caTb/JHii
%MZk3f2KAKYiiNhF9i*WB'N\[qX>mEK3PS:6W0dCHn1:0hjo)*D=jU,(%^Gdr=u7m;7i+tc%e3G7OqtLc8!%PGW9m/o%ttG8q#YAD
%>5B6oka*8#K.7ek"tQ9<+N76\`^&$4>a3a<_/p=t,&5#@S/!o]9s!,5C,Pkm_V8VOn$eY,E^SPd)JNTG75`]4UQ"'iB4YGg&>Z51
%RLLA\_YOnJEejHWPKt01`e5.%ZMbPddXkB2_)^\YO<O$F?6.UK./$L!Waqddd^g<oFD(<_V<qPam?slN\ll@Nh(mo&WP#WU<SE#6
%Mmh+020goM;84_**_an+XQfW$n<kM<a#b@mLR<0d<oMQ0;iO]gKasi;Vm!EuNe9]jMR3<MU'<05S`aRu>.^>I'nRB]<A3_QCmQXe
%fJR,+o?2j?Wp<Q*WicouFPJ].ksstGV%/Y!cg$h8Nj](7SfZBR*3#n@!O3!:qMt,)1;SNW;StGi/8]ahJ'nQ/fj;7SlBeN?^#UN^
%Ts)h7]<2k4rdbd2eB)>8";?Uf>EOgDEQ0pk(JF"'[3=@C+qpVo*i&e1.C:acH?=3a=mGJX`3O#b&G7[0"n;Rhd(7:rR#HX8c]71?
%NnugUY\)4TLe+n6YM'aSc-OYo2*c7qD>IG#Kp3uZ*Q3I%3T[+^QMb]04<VL(n,mPb#t;Y10(Rk?.W0C7SoIkTN%0\LN`0Yc@,b?N
%&p[G7"pe#g7:5cV\A'sg+2BSJdCVU]]'spP8q3p?08l'a*m92a"ucB+ML``N/gP2H\gPbsoALD?W!5jrr-8Gq0If\jAhlKbDZ]km
%P7nD0\X,RN1bhZHgSrnk>njf<FV4?-.[m%)+8)]aq[&MJ0>o-(kfCKc+S&P7k9`fuQ/<0H(?@4FX9Q6[)^ATlnK*&sQ^^<AlnJjK
%Gkf-5)mX6&Cj)l`<-LtOjqAS9MO\g(eq4&/_emFVD:SI`Ec\Ki(NmirS(3p5^4$=,(4`iU;\]2+&Xn-YrGq@=1Uo8g11OJ-nOT?m
%QhDP^\am;N&"2dn.tmTh@-B`W24D?s5fI$M"4j9Vq"!M6Y70lZf)i48M`g;(V9.lWR>8C'qg=n)Z.#>=-bZ3@gPQt3@>aDV3Ol+u
%hLnSU9JNUSCF^$":ff&jb`UWNPsN1"oB483rAaK'A#FW]178nRC:TUCq!jr#4["r?Vl$l?l6`@)NPtXdkB]114=Mk7c-jD.[k\`F
%QK%B1#<u3AW#:q[JiLZXOHrMV#Yc+j.F(E:,f[d.<J[?@7D?$P`5GL92PS>$SX._?aaiC"?n[nDMAWTH)(4!Bi:7e\fIeip1UgMW
%4A'=R1ebC>X5,Z*<Ru`Yok]mk*-J;!,=T?bC8%u;cBi0A$RN7+VYjL`V\uNP?E"@NPh9Aa&QL21F&mAQi;?9m38X1@kiK=CE-#*A
%&/s;=M\2kVnEf<A]oQ?"&Gd&5SM#[4"^C@o(?5\YbGD?X!k@8%W3#jn_hH6NW\9f\\VaIg/O]+HSu7cud_K_4(<XB6/?Z25U&0'B
%Q6N?M95moQ9i7hgS6*r\]E7nGZMM"`Nu86bT/iQP,"K86%C:e&^D*rk_'YIeVLe=nGOS\(R1O+4;-`_)%=am3Dc3CNQml?m/m_/t
%l9Q+M!8V]T,A?u"!YFC_-^L>VB43N,8_mmd>k=p3Q2F#OaUFOEN*Cc*C5A?RA1-E,Xt3;[+$3l&6tjm[77n.LRE'gJL02s5R6cp$
%5U`l$JI$[VW]sL-`b81j,[r,Z8_ZN8I$?ZX!K!j]j(SDZ/J'eJT>G"U!3OO=df$kh^QFi^Q7kLh5:,\Z/4%!S@/B"K;O6n1FF/fV
%_6*QiU_T;MenN$.;UHAB>D'nB0]UL2`D^+N/acD%YsG']j?fErF8<,kU/GmQ/T80Z^!CFr'^4c*bL%p,Gf84l9M%-u_g\G9V<T_9
%U1MW],D51tD+>AXXkoAtrb-K`]PPg`K6MY8<;FY.I\+o\T2R)U74_0f.>a=EYc7JX"kXaM\89/T..%,gP2Vo]lA&U-j'8rkVAM_.
%-`CS,GA!?MZE2R&\QhM/>WQT(\q[K%lI:%HfBV2ei'j9G-@Yef^r_d>^WnhnW<;ch:o7\Ea*<NP'YU&0\WlY`[k\l`FaMlZU2muD
%?_p^hNL!gS\5^Hl+'piK)g&Un@Ti:Ta:5M(<YFM-*Vbg&O$@m>(L@oJ9/X>oJ_GI+,=HF6IF'Ifi3@eGYr.e"D4jB;$ZSuNQ:U8Z
%Yj+A!>.jtJ0bPF'.FGmqbTcQMFt^f,'La"/VtVk:daKj=3L'o-Qat-a_]H:%BP4oAco*PgdM9+/Tqn\:n:K>*6DUT;WfS.2jFJO_
%ed@@3U.,6iWJ1VH"qYf$<0IO\b#aX2l(t;GG1u';e7$G5O3-k5n?L5Z%\e*E'igDCV*Nj^LmNIsR73FY3=_=SWX]Z=GRFH#&rs72
%%*dB(;0QI>-HnIu58`tHYFf\l?66cCMsl+c_VMZI(stg=V'pBhX/YILfEL]=E%E'8Cc]9j_em>li1LoPCX8=Y`m6CWQ]()#dI>P@
%\q[gt0EeTb#0BQ44)@ZTiP8[$i[gsBpYW[LMspWZ7Nh05n9D^/_dWs"9_LTb>NP5_SQ-aI=3/T@FK/OQT4IPf#ZVY]lE[]L.rqF3
%@/E&u]E[WU+3R`X\<7:Q>gO\Jh+PHR)LsY8:`2s@*aIeg]0lMl&lHDEYJuu@GH5sV>(MFXd&aq'Wj*(/^I?G!hU:>\n=N/,KT4;m
%,3SnjNeqQccX&m_c'D9rrY7OTI;3HG5nH*h^)U<s4N[MlgV6qqFg$MMh,IM=e2bL&f4:%]Qk_Ht,.[aCQaO&j=X43G3A-i^?;G8/
%ALZD)mK*`X]?Y]IMe:-K6rI0rXcB"j7gHTpW\qf<4#o@_J"Vp@<3#Tn4Y*QM/n@C:<oM6P$u5U/>*;NG.H'(A4E]*GZ=LDt:1V>p
%8(_E'kEg$T6p9f!Zq@9c=;AP9'RB`C00ZfuNsc`&rgR]Ci"dLp[_F0]_trI+j&U_+G>Tm2*)*UZ?qTc$SY,--.U#.V*^)d88&)mV
%f'Us\4$&@2;5[j^Y[A1((0-bb[T]fB!RL1FIDd*CB[,(IOL#D00be`>s.1%`k=h(BkUOZFH4AMeemG8Yj*PmgSCpCqah3mUrE#V/
%]$L%l'?FRB[#B<JX#"Bd[SN-;\],n2=/]"`$+@a("5Va4h*8Mtb0j<Z-kkeOl`t.Odr5%uh<jbhmQTm3*JLhE91kNsPLeh:OhR$k
%8%/Y1<j6jnpJ8Vi@J&L8m'3<XFHmHP05[Xn,t-ccpigl'Gdh/k_0IVJnr-*RkL5bNXD"ut$F@(;>;>D=Zq1sTc]l+mX'.4l2<5-o
%*-#AIX)N/hF3+Pd`'dtm>l''`J*CGJ18c]KOc\Q+=iBbLB`n`R;a2k4XGd!0!+`EiaCgWk=DKT@SI(rqHJ!,3d>,V;c1(&[cFQNS
%$%A-n0mbJ6I8MP11%Y)$3Kq!i*h+ae57T9Sq8LKP,tR?G6^,T/`TbW.d2PO*\fl>H@abk%qh8#p[-oS;C6_>L?r<+^+oAX6/R1NB
%7=GO*CQZH]=G[BQO@5.\*ETr^UJ.LM14nH<:^@`(H#SN%VbQR:fW0n+*EeBi,6T,&kDBLL&Q%/sjC0u15Qen2SkV/Vs.1$6MotiF
%<5Zuk*uM^o_#TBs(G$FT:bNP$Yn^%!B#DUg"V1/]YLNd.=DYGdJXKGV'*/au0IPsW>"t+N%nGD9W8oXALr4.bm$<B\78M#Y9ZlPW
%h$PP<d%,Q%/1<\k^@&`!AMrL(<J3U4?9c+?RsMdLHM*U_@bK(mZp&/nK(YB%%]Y1WYiDgL"jN<U1q6N]V\"kp-HP9U=u6eJXs1I<
%=?Dj!PW4_aTBfBWM#s`gK]t#<J-/85\f))DQE\)aOkJBCl6(hn7PoS"^=3Q,npfGU.3m7]SI"J(l1%b5*7R4T3-Vai?6H*6X'RYk
%5p42`N9=Y6BL''nfb+b>J.LOp^1@S+`9/6AE!-mpU5J9FRVKnq8_Fu5KoIg@/K3F@=@5.$V3Y:dAL=N%OrL+/C312CS<sh4:O5.R
%pI-o\O9I/EN($gGMW,[jF;H`M35P4IMX!=ZX[MP,G#/r.57c=q't>Hf$Rh3P(mN.FmXr0jafauH;,b#HS#f"mLdZa-ZD%M;SP(Z0
%f5%Zi^[=X78^B*%=e0rd'an45Xi2F@PV8j&`/4[W_&4MtYJA:6=Pt75YE^V"r1EF6(h>/JjR`2A%WUXCF[.lHlhB[p=:ErkD=l?1
%p8sZ"J%"9\W+6OKF1+i>WW%h=gL0M/mWBFO`lHmA^V5AHhk[:*>c@la^,]<@pE+T#PehN"$Kkg69I(=_qV>\;l_bMmRZrG%"N/*:
%1)h!oOon8%,d(jc3Z:'U6a"QZ$Yn+'Bon!^^i;?'Cq201e,"l+Z.)+)jk34qiOfW]RTfo[^3-K>Y.t=1l5&ncm*=nAKL?_*@gGCm
%*:T]Y4#YrJiW#Ru;30]4dBFn"rMoFACqKf2PU78G:44iZT6)T46L1IPRkPCQF)0]el@:P+i1DI1=8`BO=?mU%,%?e3#>q3G_%IEe
%!"CBh])LG$rY:go":bfPUMOT-[Y%;4;mqOiZ_4mNBI%Q.-+]YH=l#h0#3\ZZbnL6R&&.aKa7KIHlqb4EcT5R8:AafiViU%)s-)pI
%1$A7Oa#-.q`=/$j/1+n7[)$$?<5X:u8*D-Z,R_m$9^#UDo;^6;)3jd'FE(_@.Cm$j1iIJXML=_m\LbhT=8]'WZ^r:Vi^lJ:DDI$R
%K6n<X*"Au*i#E9MU>smZ.L4fn'Qt)d\q[e#d>^J(-kI^Xiiud_>EYs*PDG[[%l,2TF]O">rF>S`Q=;^UeY/Q3I0U+#$jYuI(^-!X
%ObdF5X&5pn4dekAqkf9I0]SW7;H[.Ih-s4_!Om)))!HdEPK(6D_4%0>BOhUXTZDN!(UF@Q,Y9#/OBh#OZM@6>AG)[4_^_9l`JWPR
%(a]ikm.V`sGJ([ZP"X`*gse4$mkQP06\>DRqKLWG:sA2N&]q%9/aC]mT9ku8jJaFLaI']fOYC3P=.VLSZg\j6#pM]*7]tsUiM38>
%0.0?UAGCiA*&,:)!XJ9qIs)8MU2B&FMRP4,Ih:A!b+18[aKh9$]#]9#:DD/:g;:]g;dE,*1[N\h)7QC0\_IUt<T38CD7U3JeSDus
%!\m$@$FI\:GlIF?[mVNZW04Gp`[PrpbJ@TG$S=RTj!Y6H&R?B<b7b6)U)P>m/$kR8<LMKtSZ#;8=U!3[U/e::eAAVN`>>Efc6CYP
%E#MFEb#8V8l#E^A_(.PM#lC!j<!-_e@*mI+*uM)p<)_dchSeC!TIYa`.V_t2L(/;7=nh&B@ngDr(m.T*J]>.2MZO6&73(8kWpGGF
%W,</;G+;mU]]p+?[&=c+;(VL^MV(h$\<Gb+6LS+p?*T9lV#_g:P_1GFK?G("7=Eq+/6.GGcK/j#8#tBEmDrqT2Xj7^+<pOEW@3-,
%KW10&e;XB-mK;0qH!#Gi!mKW1X3H2l3'R!1+c.5YRg%1BeK#,2O6p41ARI^[#p?jeeQ.Yjn3NeAps^tcLmSaX<iuj\qa3Ea[1M;F
%4$K]/6rY2!3VJJ)K\<,]r2@p+d2&[\OVcFI'Acl+:uXoJj9!(NNK]6gX^M7-k2:D]D`r;GYHGTSb'?``91"3\W^s2.Jt(.'#SSk\
%RACLP3sutShC<8'U.lc2d=l#/GnFAI/%ch$m+1h(9XlWEq4^j6*Q.O)$iOD,3;75MR44,e0Et)5?p$ZC9$i<HUFlY.TOklaei24H
%d54!43@X4uC><2ud)[laW^!P=Iah(TH`GNe7iTq8HKYqB<]O")i@-Z[2a\^7N:F&W-76E,n#5qJ?b9j%0^--ae^G:P:&A]?WLg$Y
%cAJ`UPZrZ23k,MuZDpckM^\F&URsg/&\&jG-C(51hkW3]bTiHfDHXFnYQLP[^uj:3lHaZD?mldBaD)onEt54dgF;9uC%ZJkKld1`
%a)I9P2KRO^X1i!74A10p++a[\mrEFYik@^;8qb"U+FK6tN1V51C^;ABF&`rVEM/O09DpRILK/F/pT-8.'kY8sAc^2<1=Hr7!.Ej7
%+'WBr3IDUkJd&CD,uSqh>t^u-3gR;?4<jYGf*F$)722Ei#],:;-LKi*FXN5&Y87oe;R-*gUXqA6Uh!Ks-t#W(7WqFkDc=L=)_rj0
%W$u'S7h$mt)/n2`A>)!rmVm<(<8(PVT2legC[7hYO(0*e9.8q"j9B(c-rm'e@phke.L^oa,9(A(\Uo#1WOm\?0X@uk*gie]rh)>T
%UA:bp2U5(PG-TY:=hsoOg5+K*Q]DT(JuSj'VqLl8#dX'Q7q2Hp^%_eG\3!k'K<DnfMDc,ID.Wr`gD:lq!2"kj;Hm&8,BPlkESW<A
%krG;?ETu*qXUEF]Wk6SCWkZK!c`[I-k(`V.DFhuOjWI)1rIEFHXZEF@Pn?7o5uN5gL:a0tRT^dK($H&\#X9/sBBoO2>l&);]M)2r
%4+,nue#5*#GLohTL"Y!>a5$nsd#A66d42VS1NXmI?Mfs\GLs23%Od+jHSK"7qKT'WbB-GKCq!00,L&b@1d$^l)1aRU9C8+KNo-1H
%h_1Jc8q^T)Q,A6PBXF1]N%,][5,V,1`X=kEW%q\a#7A-2]8RmeG]=3eKrotYI#Z"DM=E]=<4-*O0?O!`OPYZ^\mOnqhb;(/G])?S
%Lc3dG*RXfs5+>1>)2mF`%NFT]9M76U;m"i[nJ!n)a1)]Mf<bENO/iIjQ/cOF>j3c?dR>__H]LX#.B;#7NZ<!ZX:`+K")&Ud6!aN4
%&Q=9&S^*tMA8<n+B+*.@WU(6kYfG`do1Wc:^`+=K?+d/>!HQlc1ADhVXC%tg=,ZnG<:940(.\,7GGn/[(V'tp:@2_Mo>Y5K(Xab"
%&0H;eF5`D!]plWPrp[PWrT?+Xrp[]%l+;/:&*_\qprdm]r?&cL?f1hMGQ6co5Q:VNn,Ds/Ie3M^0p?f?U=e.!8:UMdJ+q3WVg!(W
%]AJ&0h&l[ph4K-<(Mg_6LHiEebl@[_s7tf'<dOPas7V6:rpq63rnZI+*(poccb.-pLu/8=^l`m6bQ%;IJ,e\]Lu7<l^\t?cr:>8"
%pof2F_k6tuc("b!T>14!5CN.D5JR0]s7)0MGk]iLs7l!]pFh$kVsch/_>iW/5Q&iWq"'9TqS3(+Rm6lIh=(@#mcNiMIIj@T^Ak)Q
%q<&=(aKGJ=VPg&12A9]+75u`$7NA#g,:"PE4P5b%rb^TW%!X)eL6;`b(K9u:=<Dn8>FZn,XB-5iU;dL,:79iff^5rZ&hWOJ")1Bh
%'-(H'ar0>Z*\G7/ZX896$'#Bj=%.jA^<PkXUs2UTO95BB8Gq@9J.G1+90i81>9Y]%mNOoG)LQfuMM*+oG[=#c?QEd"ZX!<[nQJ=.
%JolR2=@=(g!#G]AS6j8%#$Eg#\YY,E@LF]H-MYmK%%NR(3:'N#0K:H('Jm.'Kf7$R:hat4h8Tnc;jEj)FokN?/>YtF/bLiD;W"HA
%i2Ha*'UTh:%Hp<W'<qYn:adr%.ZWq.Oc&#ZiSN(i'H8Mrf:4d=Jn5.SP?;N;mXj-naOm6R(m1nI,b8FOQ`A=-`<18F)qSu*)EnS#
%$]u-YZPB7Y3Z9<PM_41u!"e6p02_JgZB1WCaMVo&2_[g6Fplg[@Li-o-9dQ:mm^d8I=<W,Wc#EmkB*[GOFGla"ruGs>l^]@qmd[E
%\*[P^GVGG(_e4(uQh64>P#@N!5QV_5O_!`pCd\]Q4k>^0C=kYa`"6Gi>HVjWdRpF=AVZ)Q='Z-eGmtp5D+K7[$5&L,LpB]l6u/2/
%UHr6e00[be"9MFrn^I^c&X'6hp(B[Q'G6,27+"@iQBp9]KXS7dl:iBFmdVV[Q$=jrQlTOlpFU!3>iU$Vl`m[n?#S/lPK-3/r=*2e
%n$:*%/ZRKug%m##-)fDE,;*j&:-^Son.[bWHi_G>mJ9OomRE&?W2a0%4]HMPkn5#O?$%M?`Q)$r3Jm-6Nd*s#0/YKLQ$BciA^Tu_
%;d3<C+[S4Ha;Xr=U+tI\HWl$-gS@,6";c6(+a9->>-F"iM5(:5=,PgbM(D59.OZU81TqVWZc+GPj#rHhC4t/R%oF\cGE*W&M.r*H
%9tFA![IM.,.&Gn,Xrd+pWZbup7i2I'l\_d@JGXK0bSqpp%u964f.'W</aeosM+agBBid)J1aA`dr)bdMLlumpc>N!CCY<eS1]Z'W
%/bNeEL1Cip6I`qu-oJ8>H5-AE+[j'b6!g6l)T>X^`&q@&r2+'^NZg:(;\<h<GnJS-j*_:q)+6oX2\PeN=[aNQ[(q<\'5qph/h,)4
%Ecc.gpSk'U/gX&;$/oPc;WeP/8a2imat$$2Y.;@n]X7/h?M+u+j*F4-HErJZ<C?A(_!udEYnbI!L#H0_+eFdc,B$f7T^8Rnqn.AV
%*F5cs)R[^fb*+>i[#j;S)8reK]@S)WS>sL#8<Z+TAeBi2rD;9>P2rAVcMD))`*%6<G^4L(CYQ=^krAJ=n:aN_klpbm;4c2K.1ik4
%C:f@9`R;EoiDn2P&a:NsnjSEqTG5k_-m/sR#:HqK7"_tte2glj,Y\_[WX<g[r$qt@^<YMc%Rjo7Y,^u4A*efpeV?3<79utBIinYl
%Q;;Y>)-=^pQkWXHWkrBn)U!G/;B<=]P)ibgRDmtbE0TQA9ZApAYc?KU8"30e0d(KB&lGFb87[Z:9U.A]jrc4e>gi6+<M^$_DO*k5
%6J/hBhj3?s`MLJ#->Xq>2la53;J<>8\t`hn>4jh)F,ejMCVt-p>Vr*?PT?5^`)B5H\9F]o/B(PeS<5]q,u)'-EQT<$P=G@><=dIB
%>,<`kD2i]W8.3'VAD5i6%T-E@2H*KmJ_qKDLfL^$nGjin4S67rlc#gC$C"(e;FFEnY;$e%fgT7LFY+Q?a0k25>1Lf>`rkV8V'kNs
%C`klE;53>8%1)VHf;@kWQ#f!h/[7WVf;WP*4_uGTk6V\7Ri!R=mHc.@S%[UtQ5nqiXUq&2=tQI@)+gA?PAUIb/f!qV;X+'>YNDo!
%61eNL'\q*(ZWC4D+>%L!V^(2k0'#!im=GK-Ce.H:#t\IK\f`j^2,]Tc'gKJ"\65Q*+ej&?"klAT2dM;P.@WXod,p,Akc=lB(<dq!
%]e3<c/mX@fcpHI6ks9h>/V&oEfFh3YP"h$*7\!HFelGb<B;n@C<niq=+YAj<KDbc:lu3;WcKMaS[jJH=82:K^X5QOL:UTALdmj+7
%]^M"e<tNDIhETO:4c%fc6).VMg\i6X-:/$<F=L#_KV,A-?I,u'$<&9OiFI5o6.3n#5_tcV16n#C+3!//ZlY?$RAu;/):sK<nMnWq
%in>!TP:C2[IB9l14[aEQ^4\>f&J#JS=B2KEFh:>)#>qTb6D$2B0#A-ebE*9d"%C_/a5q.1.R@rEA7?cO[rcYd4'b2DVrAm0R+"&f
%J9e.0[12T#@"P;BJesoA.D.@^]#6X12^`L@9$.^%6<Dd5O`Ig^3'1[7LSOYg,-ImXFW1mJ!jtU_E3C80L4:L5iU/]>h=]H[!p=pA
%3VDG1TicCE*D:Tf\=jKDkq.`_59oH2+U).i%t3<8&Ip;SmmLI&LL+3cbmZ;O:A60i:!JZMWX=#pe6S$O$E@R%NNQEg1H[*j=l"mi
%gT>`I'h3&V^:@)b8sIr.7UduWg-jMfb*Qrf@"f4Yq/#U6/%L*G]$ftd;eYY[,l-D(\fkT@,R&G-plS`a$hXk(A0h>FW$EgLW07PS
%9&O=?OXnd#Pbs9@^mp35S#f[,*&<-XTkfbJ:YO4LN&Ke^6,;crnEW`E9-V`+5+T9(FTI)M<WK>47.ZU_U3VB_&nlV'./X#$?(d.@
%Lsj-/`uO%mQQ_<ETNGQQ?OiDf$4#(D&&_&kB!"tR5!X88ZV0'tSJVG(W2VO!%7k2fXslsI)+T\XY]U&bLm%.nic(@U:_>$YG+Ud'
%.9%Kd2TuiRE?1#L_2%cnlfGSjO:<HmH?f1Oo_8@a=24S.^\RcAq>7r&qnMt(^\RcAq>7r&qnMt(^\RcAq>7r&qd6eH?fAn*4.<Sg
%RTXVt;W?s+21$sPQ;(Td!_3`m"PL/SQsQVrbOR+ZU.IJ&qm$'MG;jfO=F<nmaN;s7kn<-l!p"-7d;:`8'@%8gb$^/Gh=sb4&R+:s
%(CqJsl%k5#s7*9W"hjL8+a@b<oZgtHjZcGhN/V.7c,F3$e!*Z=Z)hcCl%H_opLS'Zr^J`[L7#ej9)rNG!aO4mAZ-I,A[iq^e!u!d
%BsZo;Bqk#1OguF:Ql2h/ValQS-=r=hRfn%8;^/ZTXCa4X0BnK#UhpS#,nqc%`f=%)WC&e$8?BmA/?$NN%47<gdq(NNh6#Wt@[3<u
%.+<e9M#g6rIpFN7CJPJ\n2&+RIds`=QiB=<BaIS-eX9lJ0*F>UPi,#/!Q3MA/"SNO<D\>>4k48S`l.<H&HF1Zp,I+`';;Zt>TbUF
%X!i5Ag+%0^/>GZH9nT3@g-OCJAbY2j7?j;-q5D<hjl5c%eQn@B\Us$J'OE:gc\Dh%Z@&[a(,"<nYC?<'ri)f5;Bb(04u#jER48%@
%Bs)p4L^i=uB+qp@aMk)%S^]$1;ds0X<(%2^m-r4Vj0pB5/(s9,p_h=\Y)-b==pfuma]^iHo9:?dISEcBiW9ue%aCRc6r[mUTU%CB
%n?hJsFi!oeYL<]rgT+6eX^?pXPKg]4MDrI<T(-[an2D+`'r5P_p)+k,kNpl5d/`5,?jK!?(B0[jMSF7i9Na<Si"5F\HbBqnV27bM
%kruiu%%Y1+Y^I*[4uYopQ7@_MFZX6U&61N?ag]ZpiJ(S'*C].saU8;9.CRBBP3V4j?:a'sj&f)lB7=Fq4)t\bS`8jF@q/+]H<FeL
%L@W0'&D%oM"DhnsLQU8P6tJ%uC<8TW=Ds3nF2t*q5%OnBo<0`_gMF^+r6bDkH4<W#YPc3bIX.Aki!E.k7FWA`Vu<8p5oiW:5&jXZ
%F80KZKg=@"b+QU[2^.(B;De9-?PQeJbT&qBYC&hTWeo7rXc[_G)GQ"0(%3'dlO7!%2/UJakZ;&AK6V<UV,<./c)\[g62<8qCJ:+h
%!8#UA"%1!l=FrP^#^,;+4=H1o[`8i4.gfC]/#qMS5p)Mp8Mq<1Sa8BY3j):>pg=fN^niaGCW.oB\/[%'r0m!"6[:&McKAhQ!JkUr
%:S+f1d@+-fT9<'(H5/<3f,]WVEaSX&;fTRH3.9+*GJVNY8SZ6*)li`_fa4RVrY/=3\6'`-.]'n#V9H3jHX'/qlY@<'#]e*eeF$p6
%j>.4Kc6dX%PYE<e"bFtN%D+r6I,3(d$[di%KiG6j*gL\FM_]tK%gMP3>R;D&VQEqB@gUmS`/UGK,O.g.';O!eK=D2bWb,X611rEe
%@H*OL-rhW/jir)VdrMkO164N(%*U>ACmBi4;F`&5\6_0\9#h0I&B3*kZ]EtG_Q5q>W-Xh1[92\cjPQP)3"G'^m90kf\#*e[ou7>f
%Z,4]&%@_[K88Yb:r/@KMe.d<SGf+T/1p;#\q@CU8$X<t&MR`/'eZ+gU+HKi(^=l3impG@]e6io'759iQ/uRqcfYNar&d`JrIgQ]A
%%4JLhoZ5n?:bgJ^WqNI&cd3>DZe`6dLk;5h[m;pcpfEBF%UZcLY`7DFV8aHp%U?b#<;)jRas;^fEq2Sj'QK<=FVZ(N*GZ[^cGI6m
%g<rq7BZYiXn:<9IX1!u:<5LQ))oOCK+[F64OqZ4q<1=2Qj&ECA&pE4"N!`N(UBW1j_0[oX@Cq\kCd/jC<gXl%>dJ^=\R0D4,Ph-I
%)MZ8F=bVr0d2rUTf3(^"'K=4<WbgR>73]K:npJgHa8EDOgW^-]$3u-39@l)P"Hjd%g]nI956UDV*OLs"[u!24YYW3^ALde-GnY%X
%-0GAgfH,eoM5HII#4]%$K[8UTFHLFYLn=':X8niD?;*VFJRf"YP9=pF*bL3#6S7cnhV$g4Ng7SedVs=jG*u&SmPt&C/`3j,AW^kI
%:,E:N6!#s@$\U-teEQ_8>pSm=rtScJ<'I,uL&X<\Fqk8.I/T@E+m$a%C<7pubZ1C5<YhE7cE?9rlL:M?6$Wn-rO&J>e#SW##;0iG
%mNJWqkM-U-Q_u8n+aH#/?rX.1:@pj6EX>?jMET([&DWa1Q8g@5,WiiUI.=\;"/8AobtVGCH/t6`5"[RmTNnB#kA*_W6gi=L;:NPm
%\YKXCJ9JZe$%e1b2=NWp@epN'qaaLA2)''=34L!<;8Nr*7RW%&8(?T^\A7FSO5pkfg73GR\6h,n*_SAuGX80DrP_3t7ke\&BG,,E
%:Ci3L$X<puG>um,%:MsMfa/.F]i1.(c*i+WA7Cr"]$i@45BUXH>SCJ"91feu/1V9t`F)7!Nm6Bn809DWG=+EtN6$b.IpT[DPYees
%;cCF%O:E_F$q"j^DOapdLo?4XQdFA?(pS;Hc/Z9iChtI--!#NjLUS<k]X_9?C[sB'a&6NVIn@;`mYKFr_+_05M=@TlD*_,*f?=+P
%IY!EN63HJO,HU#U6[&XkAndn*_:M,k&jd2NFgt>X-R@s6OA'R;G49U4JbqGu=i<]G8u=(`rM5>L7,3j40gD]UB'=Tll%u^Ab8\)R
%^>4YdKs(&6ho/pd+$urLG%km:e?=17pCfI_R)NjCQ-ufSk,_qs.Vko+5G^ehMurc$hI\STb_3R(5<Tk"05qdC[HEK_>GQ=C#"9MQ
%h:kJ.#_n$o9&\Hbp9Q]VR']3\dfj_[6noMCYN5)Og.`67^j+MFIFUMc7O6h5j==NlH=S8Y%b>-*F:(jBFESH]d+an>]ZQ%0l\!j(
%2!A`SD76>1VN;(tM!Tm*\E`aI)Zl4Dh(b`I8ung-mtg3fifdAlapX%j<?p'<DLF3p?f4O!3-X+!_Z>L`<<!pVH8YGnl"">*Lqgnt
%K]30X,N^[<U%gSY24r?^WB7oBJSDZ?,d#-h-l=)"98RVToJpH,SYM3tc$aXIFiAtc_X#U%.nlV`'R_@4(a31CZP2bK,G[7@U1l<&
%=+PFVW3'iTNTH81\g=D\89*S*-XmiQ9aoD=6AAgFj_JrnS_ig*nZU!*OO>p8B^&\,A5tU-CMU9\*c;@Ue21jd9UHmXBB!#<bmeoq
%7s#<9r>mE#8O<PF=WPLC-21=Xd$i93l8QeZh+V7E":c#\gRl\j*^SjFKp.D.DRI)83mt&hCbs$Z0@ZlC$po]]>(aN@X]Yoe;C):-
%=TZ%*mT^,o.<f$3W#!.mUpCV,!NEk"Ccqo_>a?BeZ<9u`N_AL5C,3i!Ir/nDTURh%:Rl#bP__&@0T9A1Y%UpODI^ee&5$@_OKrp=
%DEoD[]b[85.]0D&>nd2C[aiIHCdUlA9dr]*YKWN+RrZCmA@P`mFtdFQ%s,neR,YbBK*i!MGk%GLWWM7R'As_oe"U=XH7<51WXZ=K
%]9Xm$+fKU*\d7PD:B#D`a&rsWcG35+U^09s\Q.@mq\b1+>&D6&itZ)G1(="?XN_I8k2:o;0S!Ng.M2Kbk7#sM.Md:d4X&m&kmCY.
%@4>j,O9ddVQn.-id%isC869/IQ#1_q?^g]G\`4B==<1-:ETiFu_.A"e)mDt='tRZ:?Gco/Y[Q*0J!L67NeLK`8>O23!Ho+QA\NV_
%dWRoIRj7DuM\6@bGpqdOPh_YX*W'pl7<n_M"[Q<[9<POMerU\?q\l&";#A'gIY!E.Yhefud>`1iT7@!=BD7eo!H4#<if<V_fLi3#
%/HpZpB-`<[N#s@8*`IK3]@f?sF$rr#1d>T48>B[Pk^)5)U,0nM6@KP5OJ<N!EhXu,QD=dhC]\RT9iL7\B(@T`eJ&[U=D=NJ^c@F`
%6qKOEMDLFo\m]ZE%,,.HqeJi9.%(uLho?V.V)?35@qM##`pa@@#['Qs0lM*t^3:l"90Jr.3=L('Iu7(186\US-Li<N4/7@Vj\d48
%??"QA0S-*%R^*SLCYkatW:+CKqBcY&IgVR+_\(l[g8]RArcGD_[^D(X@V/1.EX,q9WJ%lL=QlVS)-0VV!REnUa]-ZQ_c`16GU_8C
%C<r6tC@3-o1c9K<J6'-S^#(Q<ip^\l!4j8i05i"1lP$(VlK%A.%9;4J>Nfa/&\`F>:7a81C8;U+3*ecmp0ck/7'qn1AHN1)HkVH:
%HACbpG>q!jL$Y^?g%!3iNjOCZ&t]_sn(s-G7n^0`q;,1*N2f7MCTbpeJUpLu)E;*/&iN%b7H-qDS;6U7AI5$Qg\m$!g/;)&^fh;k
%221Icr]3<Hf>rK,Gqai"4l4+QkG[]'fUIU&6V*Ieri#O4=63+!0ArdfaMX2l+`Yi?MVe]j4.Jr8BJg5Tm;\i_Q!HUJb9f\u6A]O`
%L&7"J`.b&ldSa*E"k@]o'/^1[ohgIN4;!Wl=JO>uc#?ob,YG"=3HA5:B/6f2'CGFLnqtYkC2et]A&pM=gTRmsN.e$ER-_AaGV`)6
%[<%\L#nXC22aai^Fc(/0MNr:*&0b/_22)SAK'b!0Z#.3Ma);XtEHacm=Zh<Ff=+f=8hQIk9!YqTlW:4P$)LZ!q?rN!?M"+XIU4Gi
%>osQq0BdPSU/*YBERuarVe8G@2P(+m70oMe%V1'a5)f#M]u:6D@46H:l>Ql.=.?_.R5FU*TkNph):caIm#(q&*;%4pfrq@.(dhPV
%mBlt7m!KZ,!FBB;)2]VnGtXW/"*GGsX?rq<&\1/spINDrI*o"<g<V.l,+9\E``<-70N4TJIr0>@X:ci2N'l"=RJa0IppTur.:pF'
%C$I[R73m7dPpFfNRl8M?p]a0<X$qZk1@-j0].urBe+_8=8Sa(Gs,lor0764Y:eWq\%:NVr$Y]u.a6S@O-A7`9b_K,F%Td-Ole>hq
%J:ab\8#eht*t7GqI[PUr)#;M@G'9+R3Rmn__N72cjEnpjWc7Xr<"Mnef_UeiVCNdNF.As$L3c]npX40EWP>0B-7bb)lk8ZFSYJeQ
%;JfB#/(oR?UImsH5Fh^(#R>2@\[p8t)TJJ*NNOO<QU*pr\.4e:0_Xd+eAFa=/D(@l&niP-`b4#hjp3UiLpLp'9kKu:8EFSl.PtEi
%KW9g0a(EjBW?dZ?=3jhMJW<T^eH)1?@fr)Xhc:'0?kfD-B'l7AD"+Mue6G+2JgG>@S+X<\<UIMb&u2:\jaq^G`0Y&OR2F9PeG@!d
%IX+s<H'tL$=/NDl'*#X>L$j[68Xud/q4R)O$i"_c=FhFJbt-@#_Km0rb46uV.!&upD(R=d@[Cm"C5Gj5P)OVR#rT5fR]0/3b-aTE
%HjmbZ(FD;]3PhO==ak7>fjP%/FumhAM*t7%`RB['3=kf>pHGK?4sB%[-<,E%fWRh+%C!'u62?L\qU889Ipi:O$7a`"A3L5!s$Bdg
%G'&<hR%utn#;Ge*(t^i90/=Mc@*gb_3fp<27u:b9hKr36&'E\Rr?qXS_Mq$#"]Bkd?L0/<`?re0<n:#Aj4MU%Lt]Ss%M`/`O^8qQ
%;GhW>>G3h+g8uYC"ub'SX(hC*.$Wl[$+&IA"f0ed)(dmdUC=F5]^p++&b^nb*9R6IJ#s.g)P8hZfA+0+=d5!#^kM??F'*ka%I=<a
%B%Hu;2t4`IKKkYW*m@hI(7'2e18)-q!Nm/o`6JDq8EirOjL#*"TRDELK]I+!dP+;TOh(UaUhZZ&FJrfa?AWs;(D+.K6<AE-?'dIW
%C_M0rf:[$lc6qR,3Y6I"KC3jaoOJY;JPdMPZg,IpVA&'>6PD63<;Hc##o5d,(s!.]C!k@`7+h]2?0N4c%=;GcHq0X:U7+.9dZ^`@
%i<$22C<p!1PUI5sQrL,X?+g#AUu-Q+F7&/!r"0M'8SOV^.ED2TRNim&_Mh>>[5UXGS$^6=Kj3q9FlNtDW=AO)BG_4G=1mp8i<Rf@
%@rbMVUs:4FM+>$YUUFF_1k`nMlH>nYo";J&g/sIP3#8*cKje3-U5"ciLaQBfF=XdY718`uQ58Y3kZAfE.c?(&Xj1f.*V\%AWAslj
%WN.A[RJZ=Z=U(gD5DXdu+VU]WYDt"gO*(IjZhh*j;\(!K0MQ+u3!D%/ePFmZ.hGaYmZU_[YLG*4g1W:hH]8R`oqRNE=>aN=i^f(o
%F=LF:`)=(sW+]@Am)tM)TOSuHpkiR.`P-)/!`Kn2S90/_H,N\3o5G'T=I!E4nLO/#6l,icDA:uJ/4Br'b=FFk((!#arH^mIG.[Y\
%[YhDNBYOm4#f_]A3?8MIY_#.Z+ncAo,ClCl_h\H.W8f]SVuF3a##\-m"$:Z(2nVePd>lM#3!3&$@QjS8'k;!ARP$dkf[!PHq[m+T
%?-/\_Gt/Tg=jc89On*Z-#1-BjB#.tbCtG1E,rZQt;i=[So4nRE,5]*b!F"4)[[NX^Z#XD5C`fN^m*Z3q:J6M$o;5VD:Slao[p7YC
%SlRMsJ>VXMV+:3+`FupaMSFaK9eVYV7p/:R`)ilo-S2EX:$V"Z0rPCBceMMf$VAO77g[fr[>X9gAY"=?;I[T4&FHNb/<Ooehdq!K
%X\T]E50fg,<a;W7')]^!GXCuJ7f4eN7\!64`Q]n)EK_GP\&PTt)O*pL(lO)h5Y"+Nc:r\;>F_mHH8#Dm3A=?k>s@eMdYQ9*PPR20
%s)I,RK??J.qYnWK[dFt-f9W;5?G4]3D)#t/#=u;%(3QRLn0a&F@2VDT^el"IJjVh/SJoY%?^+tD@ObM+7IALP=r.YEXd;dhg)qpe
%FsW;&=o]g27.77]YM9rW]p[5kYYImU!0\>gmGSRTDP$j@%2@^u^qB:bMX0qjA1PtS[#\4)n)!Q$V%>$e]SBj*oV(N7\-_4#S'(P!
%HH7:o8ISZ,riAMQ#hoqG71QgLEH5jQ=7A^ZY`\S(3<MNk($=@JD<8#rkurqc5(V&h1T;F8`=V-OlJR[Wbtf3n17-J#[!cKO5Xfj/
%`D?4d,%>MO'EXR65VSF@H,JjbNh5H/guMrn&(7Ch7ZSVbBdBb5\?(^Xe99t?5lF^\7FcQ/DgQ$F*/C_r?9]3(ou"Tj.nDmL,hsPg
%=7oU[N"X-%Hf(R??uDsHTJPI'LLM*e/5p\lAC-oOVLY@Nc%QT>RlNueka]elPR1+61JU<^5%b2,0Zr/Qc<%fd7n/cESpum)jt.3;
%#&ac%lR/Ne&T:M+^!,pJ5nblsGnbs(R7`ejb>uchk[1BjQFn&Td9BKfdfN]u`)H&\?=AB6FM@$r@!KP.UA//)7[u-%DPm'+s8VK"
%>Dqn%Q/27Rn96iF##fKZ\mPBt:03),co,d.Bg"?=/E&5&X>6eR2Z!-\IUgV%NkH[s7,C7#.@!:.,%p?DD-c=nF3HA#hZ_5uX77Z-
%^kk9HmK*5<(bSMAAu`FP$Dn"o[^DT3lBj"[`_02!J4,cMT1*eY,O%cG@eAqS'l)Ql+N7Dm*Z>RMLL=fXVh8_b>!mZ>I:2*N^b4GO
%#V>dt3aj7bZ`!P+9B2o`WD>jc8p+uEn6>-&!17iYGdbu4KT!WeB!rQ-_r/aP,5G]pXTD!<Bg9K4'#W/ZKW-m<EmpW"lr\Y=+2kDq
%02=FbYqk^qX`63Xl(U,_<]9,J.A(MWRW_FofMo%#S"s%s>Y[&1;:pQ7:_PX'UG8VjjKb?:2,B!LAB0(Mh:lV?/lk"j4$[PW;eY/q
%Cu[7o5p<niNi+\-7I;Ok[Tb3"G-7F,%#GBUOD0WboPe+$%3gIa&l5EW'kfhPY2d?0N>Z<gcRgM0lkT[ZjW9<<&r3;PFFJe8nCVDk
%5#YU#iqg\Rbm,]P#f\'qY^SHOnWH0)fhI<6<_\h`1Vkg1]SMKK$F/Q":kjU4$3Nk>fcWP'[^?^$c#WJCMrcZ;Z>c[YVf07@@Er&$
%0ct=In5CZ$M4Z\fnZl0;=CiEODY8*BHSggD5n"ma)$YW-WTl#SA;M3('LnR((YebEm`V;i'3e;";Y4]&9]9h`RVCEcR\Pu=`<k`Y
%\KFM2CGfYGf-pj;n^onl?+i@F"<O/2^T*nt!R5E(81G@2Q>8%0R8VP3UeD"@::_bC?b;,1DDiP2O]bbro%d)=HZllLlDAY[X!.]W
%0Wgag\EZ4mP\Fe;$$'?NR:hf$C*D,0B.-F#R?s;mGB^1<peIiAKH;L6`(q4-(0j&afZ:IX4R$J<E_`@,Qcd3A.<5+C4&7>^@5BG7
%(%N2-n"'3s_F5pU_?UN:pDHY9mC"=WNjC^e'qje2:oasFA=d7,PF66cD5+S\2P>c4:!"p=7]_Zfm,>9d(,U8`Z3Zb]SE,#(]Khl-
%8?."1bJrY<DY.ajqC1qq0C=171Wn.Y-f1a:Y/+tHQ$0#W:J^GP[ke?</G:K&hR2&WgB^]`/k.9'Mo]/(>D`"u$XK:'b'Z\Nnpgh0
%bo@X&^JdHY+IclMhO1l$@AGb%bhQ,VB,/-Dh1,Jj?X;!OAECHd!J$tl].Ot4=1Mt/;KSQYI$9p;1ND#%4LP93&C$FnDUq?fe-m!_
%B?H[kDUEdYNmGZof)'p-;#R$)nb=fE&8`95*HM)mn%CN$1r'mrepO>6\)]7tp=EEp16@!8VKD*C4YluHOrPQeaF]95^Z@8.g;J'u
%N#Y0>Ena@8;a,2;@):Lu=kaR3rPuq;KOYG:9c_O(a?5.kOfU?q*FDQ=dRVB2'YTW'XEYgil<V^`A$a?L\N3;1fs5].cb]3SP)tdM
%`6Q_D*N*L44hIru:=L*$gZtb9=p>XA#lYdt<9M7*[u08kAR:eD=<*66i@9F!mPqSAl08:IijAOb8J;e`2T&<C1Y>$`'!KF>RK+eY
%el;CH%JTEU0Gi$q*3fb1hD/*P)*Y?a'/&mqFNq*l_<k-o]oSHGJD!:;RQ#7%JN0OAV$e!C^u5lJe9`#!>Ptjcr/ETfS:K6n(5%:E
%bC`Mo0Incjba]jq6\FWi`I1#PSc_J0F,+!W'ti]u[h('b4kS]>Ff";S<OE/,ne7E(@0-'9iR!@M^^94P[IJMKKAPA(UBKiHSN/'&
%V-mVUY\S+TTEbp?Cub_b:[;8?(jh)Bn7HbMjA=$EZE":NRJ<LdYPb2%/\>SGHk.kkC].eCL#`J.d<b-1.JWkPZl=Xp\NStaaf2L\
%B0o%hLtV90e/_XSe2P^&4B.==bW(/hLG@m-eBiqbNKF+_8mW?>NPMm@aQB^O0ee+:aa7]kU+LK3kD_k-J!M@7ma49CB+e(=&\<<H
%(@>s5jbJmA4K_BL_f)l^(S2S(.Z>Ia:$?49[I:hhYkIG2&D+At1oM%oa,a0`Zah;&5)t6ohP*6;O4-9B1#olilZ,g*HiA$;V,$sd
%a1^'p_Dn@Lo([?<^s:P;O.0,>AG1X:WgeUM&F72`U0Xqd)1SA=%%j'W2LE*C`'>eD$k&f&)TLg0iUA%\+Ss/Ilm!;;TqfdZ1"\GH
%`u3m+e&KuJR%t`YbV4C@&]PU/(E$6lD9946\i[g'j;Lu:Fflh/<oiQV@n.'GE)\.EU":%=+H)71HV@>:%R&fkjNm,QTNGYH,>t:\
%+QYB$2;pMXEB<@2-G"39^VumVbDVe9$tj(+Y7M_T#:5'UMYCL`Wc:7]c?>bemVp`\h#Wl@/B`#<&jY_>eLqWmJCIcZ@8$eXO"m,f
%*hu'0-&u'IhSYfB"U)dp@8%dRD&g8=>_A8_q"gm);t2UA_g)\FI)i`i7-$-lWEBN@@KRf8dFjZi5FnJamN>CQkI_+j1qq;!e(:j%
%%AKC%0%Ln-R;h=L=S_3#AXS!>p*C-MhJ2*<_G*J4FLs`FntlC_`-A#"h'F':.48X&\'=cp2N#'/(stKK4cDEBBTFRtPfC"1;>PWu
%,;l,]pXn=65bOg,O@aI4cah#`YZI=p3T,sc^=C$G]]==f*n.Ki#]u"ZP*[3/5)l'rXY!SP&_dF^O*P_%:t.aSh$Q1k(YGl,kenrn
%4bp?)(ZPolO`4@uk:gq"+,]#BBtUX/:4hA18$&`?fKbRpl>_U<PX9tGo%]RU+Nrs87/<Q-g4cT+)OsN-Y@C38i\N[scf7MJ.nq_/
%#h7?diq_3L3\mEH#s$C$G*"sQ:^T'FVO$SD<NfY$..c\O,-M89:^&595fk*>ZUeR)gek')m#Z3-iAAt28b6m^Z<A5KbDK7mHoMZX
%GuMM1o$ajpR1/6fZg+]1-E\k'f7EbF2Ae5GQRd/,5re\7`-QD0cULSROKhDMB_0H\7EiX-@ntu+,0%cf7LD>Hqpa`C9=+dr5)iIf
%A&ANnbI68;IGSeb@]>b.Y#cU5&t>SN2;iZ9\#788@E)NWP3j6UD\Y9+S)kl\K]Yd;N00=H'FGP?U*fG1F^3a(A3NMO+.dS*+L*V1
%RkW<(01HUlI<[=qi8hoH+9+o3"=6?MiB*D2cuq;t;Vg%mKuDm7*b/Cr&:3$ZhBc4Lb&mG[NYK&dRQ8a+i\9?EDK!l*fqGtCLNP&I
%fXQ9uCuC3;f5L!I#mtG,<8sbqXZ%-<.+e(`kB3fj@XXp"-OEf/e4B5F<#V5(!d^k_31@Ds2%LjZYR[3oR>^(3jG$CHjHXZ`e%kXB
%)#)2;\K:n)9/q^q%G+gaPcULfo/"%]kVrJTGhY.ur2&@uoKjLH,e+me2J-mNX!oWJQD8&6QK9I^KIH-t?0Tgsf"&!WgUXS88qTE:
%_isr&IsS?f4fj;*bqjE!oHK4N7c:[+?\S\(62@U8_9M[r*2k6FbEM`@R8ZXL52G2^KqFrYD]>"@cs:#S[SK,6b5Sm-If1q7nJM$=
%PP3o6kC<Et2rFPNh`n`pmH2X5huD`oTE"E<s1g5X22If4\f7;dQeW+rmsi,Ss7EpQr9`qoDpKoc5'M?\nDA]dp]'a[J,TuYU#'-3
%J']M'qM;b_IJ;dJ9^YUtkAq1/r5AR#>?p(^n,JGuqVAWqq<!Gi;#S5TqUf`N-ZqrU;'0oSl_e=`rn#I3_Bs7"RJ!c@r-f5a3\NjN
%pR)hCfNir*MdD%phuCaskF_e=S)=7hoD/%3-N2%&?@B?Aj4I>P^\(J(f?[[]2,X7Rmf<<s/$!n"T+/N`,qcO#&G+O\i;"07GFm%!
%7Q:AUr&RP,'fbitIO0iP#X#$i'1Wb]9;:sKABo2#S'hinfLcWMQ0h+!jK;kn6lGRiVPMuk_`PepW\XcE&M#ptGRhID=)ZHPff[,2
%L1FLiF2_l0H)uV`S51E]q^K`lJUf&#9+EW_*[M:RC\()W^i6e9L!+-=.;^M37=h&irQ@1or'@btqKQhd(N''s`9=l=bM2^_J+IO[
%8U8o>L+QAM)TVGf'h+V;Z%'-0O1LYXJIX<Bqa5Y\/QOK!Od%X@(o\*\IEb>+JKT7TUn[1j.*.-t?jV-^:dSs;nVegP8n1Xur9/0@
%/`dh"`"S/j%"N5PA-G*&)Jt:dkU8@MiAW'L!D+^P7*2f4+A+sn&rGMF\D8r+J@HH61YAe4jENV2M8LeD3G;U!a[28;L6#YEH'?$;
%%UdHCm:p-'KB\>)j#1G-V\lHl"&Q@.fjLh+$R\7XW3UdO_1Y<T!aaAVoU<o-1k-.<hbQ/N1VnC:l(3?mFlI,D9lrm4)[L@+<Ia@+
%cQE-b$o\FMJQ\LqEVFFqK$]95+\8Z$mB3pj2M!=<mAYM&`"[.nBhlg.lF!D)eFq>Nb,HgG25EU7BS)m$Q9EcKBbJ[^/OcOsd-t'>
%$*$ER;JO7J1d=7;*(&gD%q0B1(B@GQ0(g]g88P[BS$k[?@J]h(DWbS0TNRE5\K-;ob4-!]DN[AV75@VX1$VO)TdTM+"Su]Q_T8@!
%2pj(1!J$gp5.gOCW+r><RA<[pcNYXB+>oqGL_M0,a=(Ih@,AYE]bfRH^OPlXq4#.r8Ln:[LqVEOQj!FsJ#n=!A"4kPN\+Ju3W+/F
%&2'/g4?6$UU1^d\7HfIp&;+)Sg9!p^H7?O0YNBAB<D49R+9n8&9"^?n(DL(TN-.\*[;"BjZ6aWH_@%7fD2!C,-a@8q8rR?,f3LZG
%p-NA!8]dAKDg.2HC_a&f<bLVZUd;Vg-^Gs%7$?F<_tP@anL=#e9behI@ggiS?F1B.p4][M(AX5-rLWEKS:T"KpDrR&ho"sc\#RC#
%L@t\06\@bY:u%\4q9u+,X`R]'n_O\#N1qFHiE7Un%7Qj2<)g"mXl;*MO*l8+Y^Uo*hS$^3:W6,=s'`sPlZc9mQ#6P7-XnQo^t-0u
%M>0TKc<o"^Qje(T5NkKD$uVD=id(;hp;?8W4Rr+$(pUi[j7#,_aZ,#B-$a$?V%d^[P5RG,41!B/>uD5MTc(kA#90.AA6PVLK)#E&
%dQ0H:WGh?V@^<FGaIW/#YYP9jGkPn@l7@A"GQUJ(qE.7no?QG]98&XNcLUiU9-eW#F;jg99-gp*^</g3LqRW3!3]XAU@&2k4\l`6
%<MB,A1_Fp`'2RX;9dC]5B=n$lOiepnEZJ:,4t-egqiiCQjm2s>Ar0@3XMe@mBU7jX5jIj*QR05d%%Y:;/LL/mJDf_/S^0-JIV##&
%/)STWTiHGu?6/r#GF*nbL6B?[XH8j+f_1"MCd9ogq=5!!bo(R=k3S=EfS*V(&/:5EN4WsJ,r*u9YIWD+GJF]0*qi>DTq7!<R-I6V
%R^,nHlP7Qb#HAtO"H992\:?ITRF:&OJ26DKgSV5/j'sV;8a#SI=k6s,'IJEpgR"PKIdZOZroZ:oTB1@UGCP?GD!_"-K>p+<D(F-@
%%Jdk!`:gW($_#e//A9r5Mj6*a_u>UR8J,Y7DL[tT:TOHires!s_"DDk7Tj;Zp>BY7"uJDmUHWM@io)8Ps0P)X;tIEUH\6e7oDeLO
%ckVS"]O%5<J&QF*noe\D]['oUDpd3]J9Gj82"X$j@+)M9>*/?c_u1Vc8'BR1f>AX=n^?:e@>gFgjSjObQG"3BFk`Y0r%a4,^MVBX
%._4td[mfo&V2tPY7I,k9h%*`^CX)@PG)uV7PPD8nnunPTH[rB"9p?FA.R<\Vh]2t>M9\E8Uu%@1fbN\@k=rL_AF"e*D\U;%_^_AI
%E&.l>7:%M'U>F,)\Y>_+Jk@Lq2^mtJUoKY7BNM4i3[&i5K3Np*R%qDQWu/-(?S7$[Rpfr&bBW_P4Bh"C.cHShpNkrEhDJg<!uBR^
%"->n-EDf$jXCK&3;:bBd0=84ZNVEC'Hpm@_rA"OXT?mCgoUiWG+$+qRacn()1Gd_PqRg07Jh7=h]7(?g97H5oQQPptqW7ItgtJCN
%61B-]%,_-ROOYRW/E/OP6/KhX*m?8/ZY9!e9g3($^W@94]0C9uH0+W\CuO2I=j)5o4II9Us"fZ-C=E18b\/Fre`ODDcjHIX&DPoM
%h,us*=RR3ekmjn$n*][60L2f`(>ih,nVnJ"_f&n@#alc)"PA>m@/P$@I)^P`P<Z6Rp!>1Le*#:3:Zf^Ds%Hq9g9c?YZ\n<oBf\K&
%WgiZi<]r:TdiDc(hVI/6cDm3em(L4/Ya.q9pgK:;P`Z=/o<:bMR3.`cVji(Rr9(M2^%1u&HADZR97"%?holV's-^lQ]kRL_-5gQ9
%_n`#D]aI,_,drScc0N[Qcj!9)q2G,&@/nA!8ABnuD5AiteS*8ElC7I$IFJ\:h;U6Q5I]J7ji=DnW*8Pg5AuaTq;LXHDlQm.p!78O
%_9=%o,&0c4<N'37'VFZ]q9u,7T`o?.Ghm[iMa-%[otDT-;D'#Sa3q5D8pB%9bHC:"&#Ee1k,Y.J6p)qQGUiUmE]m@5O%q*8=;>in
%cORu,&oDV^4Peu\KqFrYDi9t1?!mE9\%;!7+\;#ke:IS+FR7<g-PrUhT,U4Kq5%S1Jn$h@o>&L3Xm0l>BJFEUD(Y2q_@BF7_\#Fc
%BgHc)Y./[Q`'Q\W+W>W`I[4IoGJH*AV8IP[X?*7FBJ2iic^A42"RP5K>rA&%B?^rG&U.o<_gHrt3oL<@N9`:^qjZ*A;-4"_F63^$
%ht-R:_LBf-oP-j'Cd+(fl\'su*`YDMRc;G:h\:8nq2G.;-@ai2Ik&&-L].&sD3s=L`ae0%YIO.q[pKoNUh9V]G4>hh#NqT)kA^CG
%p<+QNOZsR)rj/<[0X.;Cp1L[:?I\l8"L58XLoWl-k*$<lRq'4!XG)P<K84j0(SAn^gXJ\,pu*publ"[K2DEP<QMc^;i?jh3G'Uf4
%hjGRp5_&o6dJ07-1[G#NfFD5%P<VM2kgC.3\Z+m+;d]05RiR5c&9E+&+I=)Q385\X5CZ_oD!o4:;BP-6\W;,NG3^G6Vs9iKm'\\U
%XVMW)'Z/aq*$Yd8iB&hp?'N%[h3#-@<:o!0r3CbD/FsEbB-&[Si28ZPCd4h4!cLlG\)"aISb[U1]0"l`ns+B=RGQi7,(T2YI1tSr
%p8i3#_S,\l;^Ck$n%7r=b&NP3$%%*USa!j+m`egkh;.VPZM1Wd]=th&ebd([%8$6B*dX/4O\N;Nn79*P/iW*5>Wpp2C&#AXUsF8/
%lP!qUX+LUUJor&Rk@)F&r9I=4XUGnhq.$>(f\83Tl%0_dRBf%U+7-.6Fhu;WbhA[S7XQHP7#=/;r<%TeBE]hBc9On2=<D_bn/X`I
%iQnV!V1MKsOfoKig0c,!+@KB@?.q!\e#bp29QLCaIXuYNp>;^hqs?oB%PdS?"V'hd\(i59bXX''Hs;>5G<[#5k*dkC+f`Xc55fi4
%'r)pDr/Lg*PRs3D4c#Q$-eX/<pc]nUB'T4ij0*m_F^mc@R8%7!5i9t3B2q/\,m9!88tU(?DlI24l8I#'TXX-[D;o-s/&9+1VrgH&
%:WQsh+<!?R)6W"31(['',,hu+38_\1+A-$)#h6)$Bi7nUDaFqCW.\A`[t#YUM98I]AMFhu&gPJ[,esbXl5!mrl4E6#a<PjOEaEsq
%juC7rGCmL:79It'SAF2[NPfP6oKBlm><b4<qj)&h`i;)\[9c!*qge!e0d%Ni4",?/P[(!C;9\tqUc<20JIYoC1<KnUPs)+XT_P%@
%jssfP55^kA^=GPeaDs0!Xi]<J/O$_oa!$][&WK,T3Q8B9?@6FdU$@h0^OA?N\kA/jU67+!DTk]9-7E\bB];Mu'/JV:j[\0n`?.l"
%n36aN+C6WNB7t/_MSt)"i.\cpBECcL@lO"&B3\I,l_(];CW*2R&)L9RCV=3H,=s<d[87"24sJdhRW$o^YpEUY62ZRbGF,b3-"$>D
%C0K-I&$kQ=,sK[TO?s4:,&FPs1-$;O\2(QT#NJDCNj<1p:3iD%YB%9%[Drh!J[KqWJ0<tjOW&"V#i8c&.E(BW%nEd(,:NZS)cX?4
%?%`?=1Bb%s^kd_3b^Hue1-brn+#7NY7>nfl'ULdQOnND.rK!R[ITU".qL!%;7.$unjEAqgTV"&7(nR]hd.a9*Tc3n$@mR'bLK=_r
%gKXtWq6eiRAQ@<eX-_m6.W(QZ`,8@`\6=P+1NuD3'niGbd-"/H-VP'*K\B"LJ?^r\d'^6oZXLtCL+*PH]pCEEUVsP]d?QK=*;Q-P
%RW%tDlctW4Wa=R+6IG$$WAF/Pb[1c*^'?U'Y)tusQLGF/YD[r*Z&+0?QT&Ghin`Ro8U8:eBDF@jd>N/W`0*R(bOnpS/+XuBcBbD2
%Jmc;:9NAcZmVPSp+t<idDC3]XfP9f::$OOaN:jPO&RWQ"'RP"^c6ZNL=$#iqh5nspo1Y?l*/L^<Vi6%=S^hT"a\5WNkAaJ0L)hF3
%q(?;9.f@\dQ$=Nu33+#0BRXD1:5p:)/lO;J)6p)r-Q;l:(pIR5X6m4^a.0tY!kIaPB"0?(Xn]gY]nYuDVE)"B_Po\@25SQfQaB%i
%/\Gnp#g879/X)Ht=GP3N.FQm8@S=Q['2dPj0%DWEf?-'SEJ!f*??J^]Zb2uuh];m_%ut=9=QBJSAf.DGES?6&&M,8!DKQsu<?G;Q
%GnWtegl)L8-eU9j"s`>:8q[8k`.a&[R\4rd!6NG]@O_52[b1]mIYJt%g#A#X[i"i\2c3j'iDXe_Mgp1Zro5I03@ba22T,m6UV7-'
%,\NAS=NZ4M97Tbe;7C-4p:<A&X;WQELd[OPVAU@Adt?au4c.dFd$lflNFp=HhK'n=r6lH;C^Mg]D'dRpXiG(k=#Cea9[83aXHLLk
%::2HEhZp92'fT%-1i6OPH`78'&0lHmTP9irT/#6N5t;2tb71T)^R6eh+h]L+"-d7>NtM9&#d;N^J^,.cC=M=mO(4uq)MPsP*t_b)
%(\dn(aO"l7IuoeEQDGQ,?H<TZI/N-%VK5g'h5oR*V4c=0i+kF34MAH6/R=)8Od`7N)Y7gln`QYt,SFo6Y&aq&/#XpuOoRLT'@Wkc
%&>?)3=1(f_OBr#Zk:QdL,jY/XCKPV3je\_"9nenTjG-1KqU!VmjT<tYCjTIIKoj)%3TQo7e&`KHQ`NqB?$_sA\Zr`_-F!!9E3oN*
%HX,?Npf%mlPHGt^I&U3oTj'S?,:X>EARk(Gqhpq>6LGaf;u0JR30g79Yf>efYN=eXT!=#FH'h1?TM3rhN<XL3Xg:F[W)W^D<*un,
%+"o.ImTRW=^X=TZ;Z\iip1.tsm2bA&3m0_T*E:Jtr=Z4F"?SADCcQ9$BG/#B?6ZGW59SD0=';)]pU@NaG."]LL9o/cdb;nX$[QC"
%I*\g8VFK>/\:#U)VL7EDn$A*VV%RrC:REYu[dYOi23.LhKA7eOP^)2Ors12^M6BO7FFtqllYqJGbrG]o_a:2(9h@:*<r'#Z$VGP[
%(44rEjXmH#oGGS#2f[(oh;Ku37SO!g2\elYg8TrUP0:JM8#R_Xfh['sC(k1H/6$YsQ3s(CBkp-Bdl'qAG&.n)esMiFHlP4re$Qj+
%.kU=I+1CD.U^rlP7cqjuf_!$XL:GP]TGiqR'F2$r*62Q[D*?UE.PlpmSO$GY_,[;60T'q-](S;=-0d4\s/'+!&<,=]aiV]6XoKGp
%KVO3'dU0rXaG5%'=('4WD&pot`CQDu0:/=U%:sE?j1SdpKQ#]crR*ltj8CCdIXIW+g672`%]PRX,')lS15.*ThX]i$h_W!X8:lt"
%Y0/l9.$(S^1#fXMnr=hr?+2_]lC9>p>D6[F)b?5.Vc'mtMTqB$+.4F>/5F6IdgR+#mk05KU@e:IC`oQ&gD]o+"/K;0Z0.'O(Nbf<
%XEdO';fYGioLY%mHqTAg_ALZAMf[nNE.ujlH(<jVE_r![nmaCo^=&Hg/q+)=&06,<mXHD;9dfZU)b2jOEHNXQ@2?$`ZrM<313a-m
%QgSh#(:@J#Y*CF/(_XXK3XU&>F@,$N].7^^l$C??YAt*K7:456QcI@oQ[8P%=3qO?qs9qoY+XVF6'As6?@Np[aS?W$rLQrGKlNOa
%L%SA5DBgsqUCoq(?=KNXXuk=\K'n7GU+;ZHKF"Rr)[]?2e$)]2)cLKJ[i+<rosK60[mWs\99\Mko2gFJWB1]RZc0[4&o:KpC\!sl
%e+MC<)jZ.Po7#DO:WjP>dSIpL]9*N*<NFEUS?;*k,b(A-F/pb0>ZXAp>E3e4\dr,;B=_;K7N]'>k,cR76BT@@(-1:Mme-nr#+$\f
%a`o1a](T1!*F2%,5VK,POh%?2[FUu"Y=&juL!e@DB*:n6P$d!a1s_d1TD`@,9%Og?o63`@Is1';9D!M7+8UYWah8cXr=GB3;B8,-
%<a6UOWE@#BIM>-(&h"uN--G,J@jA.ZeC0mc#UNiPDeMut)[!(K;F)KBY)793,?l@=BBL'5FWtZ;RTLc-/isQ@25LSSD@JXaTquH`
%3*ZqR.`]r;4!a-R8hH#!j&hs$h;SjTHYVMO%ZQ6F*GPcNQ=[ro@nA,9@r^5N%3OU#i.1=&e_V?.BC6GhqPE6Qah\_f?Q=P"@7K>Y
%#MQ'_+>D.;k[QtGEE%"?T6<Sd951+HPqbh<Qe0LBGFu9HD!lq3&:q2_Q74>OL"KO*Ae/Y1WnPQdXs5pS$*Vo3c>9;7].ZB5m>aN(
%DRQ5hk0#94h+uXCKU`j@p6L6BF]D/f]e)(1#qq_)TDS/pnRt%ki3b4!X7FF\NH()/2eeZlpo@/'&g<7u"mM/87^H51A>_!jc-\I"
%.8<H1%<G`gO&J,W^7$n-W7]7GTf9)'BhXAY'a^SIm'8R*grK$VlhD"Z(qD^%b;o]rKsiMu;+4He+id,(G@PPU#7TB_#"5+Ec[QnT
%J<W[-b8N,?$m6XbP9C7'F%CfOPaD)_,W]ABroWb#ES^N:o>*p0T>tku5H!\B7tN"HXmaS6mWGS'C9Pua:OIV^Fpo\^q@PKEe5,+R
%(Z4(1/kja"S&<cJ$J]aume;YS5guI_aVhN(\cd"KoB,PY\)P`\c5T2<.jN(3LH(!EM+7Kr,iSLB[9**M\Ns79j9SV*KKruIJR?+V
%TJY="1l5r/&$Ih*+22jKrLEGach-,UQ\lS-LcIeiZ+<ZT52+Z@Xu:j9-9Rrt2ECbLQ9m:mPbumr%5-*b_UDdlA>*1&dmp/Z\]q!_
%-N)rUb&ptXg+A/$hQDTBZ23;B\GSDl*dtrm1BmUZ(O@GBPk3k;Rdn>Y,_,a<]Jn0'QDp`KH%I%3jTq3KED*14g@^-<T)94Bm.^WD
%VB\VGSUQc55_g<YGlGZH4e>K.q#mhs\pi@;M5.5C5:L/j*>B6"N:fG]>iD-7jF'*6lhLTiN%Me)S\]Eeju#SocC+HC8J.>VTDHO<
%l<SHSc;Q1.+e=X(,T>h$/BSReN/inI?t@GhR8Q5?_@VBp#83P>rDcmYo1?Y!Id$nF8uLE1oQTqVfi#H!fk:k2pJs,1eJm8rTk#Bq
%Cr,!QR%I&4L]<:?+fAbJO(Ms18>o%_8lWbOkE<>kfT*!R&`q"-:0r[bl\TB%Z&OQ:P4:*YI#eENV7#"`j`O@6EhUNR]X!!>UI?Vu
%U5@0>2d\]6W=e=[OV5^IbLI>:H<!1?:5'5Wn=n+?7fq[C-n;pROAtk$6.^56\VtEDMt7Y8=EX=K[`qP<BNlB&ZA$d]g<c!Z7%\'8
%A+V3jDE4b*)`&m\k=oOq.@W.V<++LGlc<M4c:\68R&cfc`Ra?^-=O<Z1:"m)eAVs7">92El[tA@e?X,'Zc;kn2'lj0iC#;&/P<sT
%XL*$WakEPq6m+UI?F\553-kD('85s#]tS0Wa&`3$N1cd^PL85bX.nWS3Jn(aGER6A\hL%Vi-L_4f8*7Ao?KV<bY`I:W5g6H.H?Ir
%epM=DXel@FT9EW?ND0ap7%*e'gqoSW6#C\/T<`RWZqY"ng&MlJ=5Z-I950mEGk+Z#A+LF5F-*T2+S5r='q`6,h:1b*&9DlJWe?l=
%/K@k;="kZTX5'Vln+&"g0.CO(Zu[WF#uf')7CJMI/*D,6AfoL7q)LQ.&a9WlY3ZGl-2H_]cMMCg)),XV2j*^\7`dB7M#!RclWUkm
%o^?mX49>AjqYW<S[q<rIOitCsCctKk"b+HLG4bU:+nIi1idF)65B&rZ23e>$T-]Bd,(\Bmjt'9\])COP-Sb.od-W%@1LiM%.X3JH
%K4GRLnOZc@XSt^hjHa?15mJrfC7ERX5kYme7ec?r!5uI'FcbZs9,7n1K'H/qrRHR<DW#CA!FKlSOM].M)#*XEMgkMRY^mnD*g&T#
%IR-d95XHdNKK6XEbt-lH7Ge@k_IeHf`*S==U;CBq&;_%)QTTuDe)eZsm44H_.hfI3&eGjOLpZgj%X4(nOLMEN?<V^"CbYm)n+s^W
%gt*uaIV-UQ!PWsin@?XH0oZrL8Nt37WDu5pWLjJH!%()VE?[ma7&\:Cc_R3lE/DSC))PE_R\3<m#K8:L6/Q>iSeG.]&X2UGl_dCm
%?$LN]q^$75e:h1IE3VV3(XEn[J^ECG_DqqUpcMm95.pIJ?iN52oT'8,/#Z[:NYKQd9U%tJ(8X=o%\b1jZmHIpn_ZXf:dD07H4WN&
%;)&gJ9>rqE"NZB7.S@oKCDjq:+;$\)KYBC_Hd6dj6g1bs8I+%]Uaqh['pKgb^p%rIK8DHc]b00tG.YtGg%Bsf%<tO+:"^sY#'mKd
%:M1T&,8kQ&RNHgij<u4rbu;DeL5/-jR:KZm2^Q6KG4FO3nlngCEfi6+(i22\]UcJ6.i3=?/5?t&*7stJBPUQ&%?O"!N*knE\&ZP8
%5?eL%[TKm?k*^b5^C@NqTJs224u6o\"ntBg9XY#`6akFoFjrDrV.ci7!c[q%jXf5Tn?E`LSf6,\gG$"p+dLg4B;R8MX78b#W.KJE
%(57m93!UEc]lt%f%Nr?FAAYt;N9(i-ius)P,hqHm>BgsieL:(lc;KqTO<UO.nc3iNa[fl&9CsnZV05.]pg%Um'l^<,H?_cN:L5+k
%NP;.`,4-(PROMLR<AW+6?!`\[G[tu]I[UH6@]365JQNeDl70<&+RFH5qLJfT7RF9=A^3+JY3ue<V![.572LKG_o1F"?Ic@::*"34
%(^gfO!1bi6Du"Aq]GNFh\BaJ[hI.5Ba2L*';lDM_`MIn-_FZ$3:lUSaTRUBF.C2T_a'b$11#ZBW08>J457L>%]%m<B;[;EI-DGnW
%Lu6rXX4A,2:Za9X@mGL2S;,D`Ur#+(T8.JQON/:eeN=TNA+TX0KfW81P!U+,c@u%ejpRW>A]EkVpYGI+R1iS/iYR..5;.+jS:'WH
%i8F2"[u7%'L]\%&I^A9u&rWKIa1%Z^GM7'IRPBdQ^qHj@4jmj)c3tmdnu:eS"HY5SZVOE<'QJ;MY&?5-#EHC8r6nFlQjd%C263M9
%dhBhEeJ?EXHF1bO!FcQNm8A[H/s?AM]/pf](+p&i8ZK\)G(MRVT@e0(n^0Ce+bZc>2O0E-aK?3[D4O9?bS:7r09>k+BG7<:_FbtI
%*d9:3l1K8o='<5GltolsH&XUeT6)'R=e5.q1RL%Uk#=bb$W*O9kL_c6p)$?#&jA3O-mPb_E95Wc."DSo&OtT>otq`ee)fe;WFY)X
%0l/,pgEnk-_0V1<m%_Qa?gn$Zp!7sN9*re5:8?*&R2)MeE7\&PhC7A@&lD2t1Q^nK^(CZdB3*<Hc8mfNClH9C're/C5M_K*nUo,q
%G"bWPG4dlJB3L%j)qB;8Ic>$_`q5ZPk<)C/hL'(L3tlsqS6''G1QsmFStu\"hIF!2!m5h]+dX#tpI3*d/%teC\PWOmIch340EpFf
%XLAG):'<gWc)c4=o%+#,KF]KuqP(<q'pWYpZ,Q9/@+Ojt5#R\i<g&J[_UIA6`jK.[.$)lmmmfI(LKf#_CU0tr]<obDk?cXi;ih(p
%h=UV@,[AkgjH?@*KDUqT!?YNhZqt+oRP(4onnZpmCjN"1VR'#iQhf+*q>OB4KC!aHD<Tg%bI^u0N]Ju7,86;)q1:!cVt_5J<F48*
%(t9ns___+AnRuE':i#LhHC;B.:tgM1.UdZ^pl-_sKX2i/>46:=R]>;OfAfZ7BZ.I;T(g\M@;D^)k=p6r75&7&S-DE<?fAD.`*pc[
%Uo)ZOWMA9<idZEWfW6SZ21\kQ[>A-8%86n#-jmTd-#$5YE.AoABAfY#R,SJBn?:KHRc<t>?+=`'%HPp$1LE"UkCX5Rl_rFsQ^Os_
%Ga\0m_;a@cEX_YVkmpae.rI7N^@i9EHho/pG(fj#%)<X@aW)n+l2-A'<1<dMVas:9l>VMH&Xqbt)%+eg=*l7pm?+62Gij:NN\'k7
%Zg";UMR(jGT;%%Pj<8O&V.fGV7La@P^?NaE<>oh*ak9e"fsHRCqe+f&\sQrXWe8[I:LW6Z,nm_oW$5t)`m*UOlcXV)G?0D3_](Y^
%,:-aXo4AJk^iVb'NmZ1?YG(j;Y<\S+1qQ,.&gKqjB;Q"i-#$Cl*//\,DfulmmX#l^,#iQo7X+be,OXD1Du!p*itEfaQf$$2=)$#n
%"XEp.G9/+HjF-DW-WCn#Q%855+$P+4@X7amYC62tGDdT2oiY8t:6$@2Y\tW.7&O#*dM36n)_d%HUqs*3:,u*.]c1'5M4EB"PXFQH
%4O:P!PO3\-/q5XKN_OkUPbR.O:Wjah03LR.bGM=Yms4ZVVseoBj3(6uqDN$$n&Y-Q-KIC>(A`E=WlJIcbqE:(Zn\KC(?VJbpA@1h
%:!n7l\H%Y9s"HNK1RDiX@GpgM`,a2pe&,FAFV2e;I9f'3\,ipAKBLlX6ho[$!+#>PVK/"6"@7*.ibDmbUPFNd$B`CRfF]p-$D+Se
%k:"Y>8#l1C)$eu_[1kO:9FK@TZk/hri12]?#'Fhk-)kAK\4RI&T3\WhYqh0'_,ori'9'8'eO,^nNf>NRk&c[Kbl8;<!/WP<I\msU
%$KPi@hs.)`7FbASUpFmRUYCQ>5:akDZZiXYCk^$]'Tc;XntQ%eNohW4Xe=BGEFoC(_tu]=19KS.6LVEq>cbj+ZlBp\+L#o"dG6Ze
%5K-.].pH-"?'D&Q=MmA1JJgk/q]s.o>T-3[">D_gd5drAE8h=Ql]W1^9t@@16ZT`90jNO,l'FB^5[^NQ>S)\>kj3%eKb/e6#)FbS
%\I4ALa":>7DF_9&S*?"?Mh/uPS".R%HIVOuh<B6J,d;qZ?eYP]b&lLWc`I8S2&E-ND.[ro];WK;$qjic8Vqjt)lP03[&b%&GdD.`
%1]k%YdLe9i8It$fY!Thc.fpnU#RQBo4Idp$7Ha$W*^;t;Xp2hF.:V^cr^u6*l/?HM1HLhRXS&89@Q$'e1a12".q1=)L1jSSaV]fn
%rR'0I@ZeL!2<lnhX=G6qR/N^r::&t!AS875E[]2`11:<9?<04Zb!+$Bc"h?3WB`_iY'N>[>h\f2d+C4m^qP3TZ;mo7@bRf]\::Hm
%2JX7U-D&JU+RaUU6RB/'oel)Z'bmt/7m1<N)-U$[g<G"o;*NJ<XKu4dh>g9?o9qK#T!>;_jRV?!*QK^<?+)t:]Um`F+f0/S$#]K>
%!AaINT6iRj\'Y/mNBDD9\Eq2JO98Qe,aiEkDo%%LiI\4E>NNlR!5aXR_8HYfTI9cIi)'q4.W,)3V]L_#b;N'*+u!e8,uA4N/=%:]
%q6[u+KAuO#e7DsiXct?fWeBNEQX!aj'L=40NE6Y;Ua17e*S`*.M%=oD.nb"3<e5Kd$A:1:djaCKqmqk$>Fp`LkmTE2!M?7.m;t+g
%*]qoA@^OU1Vi)kl`G9RoG^*N)EOGSRL,(m3Y@Xc]a*0i$U!&;S!XQ>%^b%Hies3[`m@!3-btFEC(H_*F@UGNa?kb`NXbh\8'.jle
%&rZt08I1b0b6`8,9IdLIF_)T"HJ'5E"65-4&jkf?]oX&PK(OmrUI=nTI"X"_[N[*92]#jCY3j8t(Dmb$r8(m-m5LgPq=E$E?#N<g
%nAJVF[8S=TYkWJ7,il+V;`odAgqa.H-K2)7-PoXr>_MT]G7(I0WT2<3/TB^r/S+PK,ecU<L/_M;SKd,/QGI,]j&`&V9'#G52daX<
%ckK68kBF&-BqPcb98Q_[:W(*WZ<[7U\-C;:W84>_UdLFA;92uFq_H.:MORM4g7lH/"0*++""T'T=.*u)rhL7C!CG"PJlZS2$H`fS
%:E^uD17aHN:3[cR$e1aR_ORTmK\70j7<=S%".<t(0P,?=E>]!F<=1O+(A6+S2]jt`W;"mfMOtgJC?P,"icQ_r"[7nt&in?GFDO'4
%cUc=o(Rf%D&<[;<Z'r3U4W?K9dGe-t<88GnThBG]@3N+t[fV17`0@W*1cF,Y=pLu3EPeHME4.V9]kENG!G$%h$KNI9)_3u\LY3-H
%Nb]*pkNI+Z@]YM6IBb6"Gug/(S`T\D2QAbOWX'CIL,HcSeTL$i"LLEka%8A9f9nn3-t4V=Hpag:fgrQK1=o-EJnoAnZk5-P(^aJ:
%eahC1WlG9'V?V2!Z:UlH?[2as_D-*)5$+91$N;C3EQ<1XJD-JbTVE1OCBV#1q0FMY$m:$`U3kO#H`5q[dR.,ZO<Gkd.OkG0VtT@J
%]BBfqXUBn&P:/QsC+[X0hINcS^J9NDp1rg#L05,hlMO?K1rFr4`&=!AD^MJI]._C*i"><U,)__Kk^q@'@:6Ffmq[SfnJ#LmP;6c&
%X;kk`l@L]=4+'4]VRkbgV%,F=;b"%De&R[MCpg57<I77XWcHm1r<>0#Qj)e\`Zjp&PA>NpI0b=ULc6[Nk/fG)I>rBO&_;s5FrWH(
%)=>9id:%Z+A;S1_7`\f[Kjpta\uUo$4$*N^p*^bQKS)"=EC%Zh?q.CrnR3;]Pe2CS!aGoUIrR%]=:*>PO2;j;c/nel>Th2*,U+ue
%)Ap4Wr2N?Qn?7F$!c'S$,H`>.*i<gK2SL'FBM9X$?\VLjG.Xp5@d=YX"t+^@O@At@lL?7Eba@*^n,bAkm"0#S]dd#*?l88t'pFe_
%_udJ9QDnj.TIou4l6rQ""rgdpV';7hM,r2;1W5">&.>SqFc:_TCeqnFFFF;WA.X[hUOh[I[$q+Glq,Ee#uO\/4pbJ5h%(Sn6!0[;
%N?,l><OC80$p5>7lJcsNbX8[kR"eAV@Q@g&M*%:Rm]r,'NuK]sCRrTrL,#R3OPQ9+W\"QTFb'1Ipum1:OQpu`YGNW+Y\%D0WDFh#
%/CW&BlcPl3R>UL^5\7l>&9f[0$],5db.d:GF^2tem(Z4e[5%`Q+cB:G3baj%lW_NAmare8J9;KWLc_3i3q,4`cB'L='@/+Cf\d&@
%8KZH0EBe%+O*.s?j3scg!O;SaNl#1-@$9qPb<u?Vm\gf>IWic2EisTc6Bbr.$^8k=SAQ:*Q0XolF/.``5CP>X!Eqf:VmKQbejC*G
%`H@e6KcNjd1EgD7DOrl:dVC1:mYD?=KnYSa+ek/?8+,'mm0-;K2@$HbYmfFD+Bri;OicC]!)X"YCV4Cl@G@ug#M0Y$Ksni>=\knG
%0h2ENL)j!ed=Q6mSX6l]Z^\A`]WZP$=7hO4+;p'B1eG_I^RPYZPu-kon!8B`IqFfZnS$X]Fl2=C=K4i:m-,J1r+4GCc$sB01;UG=
%)6g,]$0t3+gt%?j$p*tn7KQ7riDMe-189"40-=T)Ej,!k<"18E#BBm!;OpFa.<9l`]W.)[j#FdXaC+l6ch+ijFcJ9*5EK]Og'Isp
%*OrRLgZZh8@)0r_LDlGQ!&kPSRoXE&+O^NCZ\cjV7hE=en))=s'*+'p?YP_%T-J+SP#J6OUqBC=_hW'TEH<=j<6.$UU)s.KIeakS
%NK\.!6se7K4k.D!4,f_T$Gf)`P-GQ<Ci[D)/U@5\K>Z<(Y[D;6KZ0CYe@$ro,;141-)*j0=WD?tim^seS9o'%puTNkAh<<A]WO%)
%_ZB9:jf9Rt3rmWhFGe?TkC+^),Tn0j>s_++AZ6c)VB$6\,'T,C'is7?*/(W'$"Ob8haEU"&ie(Vp)qZ27GH>:'r)_2UUmb0%#S<?
%!o#/&]93gP\3,%kYq*$pYN87gD)t$3JGm;Xdb`UHYFK)\IEMmgRnZ:N-7?;WEOP,SIFm+rc`)$`g3$^s!;Rr[$fZN_CBil4aBBb.
%\!^P@6.bN1+u@LjJ66(\_SrB/UOog<kf"(U9Q?(23tkS(eTP@=`=RdNaaKCUYDUuRjN;Z\lS@>*QB*X`nW#rD^$U<kI8o/RkY:W!
%=@UmTMaK]CbA8LPZ.m$g\$;r(?WNISR?e=&Qs+YXXR2bdUaAQ6\tm/d,Z-h.[L1m.q*iuXZQ\8X/X?'OUanGpW5^,\YU4Ou1ZZ13
%jLU@.*;[ug\5J68`\DU*V&i8JL64u\E"F;8Tp[sWEu8*I,If!lojsM&*!bt*['=(6XMJpA1phCA4Nk_L*/u^oR*rE=KiK7WB!/S:
%h\hu;BsFj6`Ce7"9TqZfV#ssGNA;AFB>7m0FcO2@oM]"i0XlC\m1h\2Y8nhE5"r:Zj%=h]Bdq>[%IS?3bWT?iBVNRAc'K')`HC1F
%RE-ZlaJ;)$P3NsF7'^niL[B"!,f/WSF<6[3ZmRsL,.3YLE9%$Ud$0WR.Ab*UE3d4GfI06*1dO)E9H_d"$a%(A?XsW_%1Sj;M<g8"
%4c=:T^rDe,)JP9:K<8RufpY-bp!_(hqrU_LQ@j7u[p^qk*`"1qSE&H22SN'/'#<HsE@n.q?VA3.o[FEa@1-#qk_!Th@ghCie#=8d
%GVmq7HI,uor0"qK=;iV^9P5rJ2J%ne4B:%)k)]Qn"DB.m9HY:)c@$O=9%-F0Rn%nd=&'O%Y#/kaL]kgD"gcan*?8V!8UU<R,g+L!
%\)$1pprN.dc<q7b846Jf/q'H4,cMbj4V#F+357%,B@k4%<Pbr?"@JEraGFmIi4$t5`\L^k!AmdH_dOQeTQ2XsEHTjQU'(I`KtX^h
%=K\n09eF_.Ue+]sN2>3WKEs9tG_<E/\A;afP&Ii>Pbg8^l\L++Ok\oVErlE8[a*n^Io'tcKMO@?q@8lCOa(1m3A@N3+p#q/+*.:I
%o>@\/*t8Q;jB93*9%hq,R\e9!RKSbH,Bk@Y!c/I4Zs9(m?T+8E!-$?CkOasd.9J90$8RJfLaabo^fXH!F_mV]QD7C!>LgbL[k!"=
%`gB(4R$nZO`1.09n.!&]^rFK13L2f3Ro[uOVSN-V't`9jeGPl/LP@.VBWVm<Zh+@>f!SX#j$_[>Re:sY[/!g]23O[p8CuDYh&NIs
%mAWL.Nn,%KeV^Q53\tKe:n^f$VTQ]mF<'.RdrBDubs!Ad$K05?14`e0^XS/9h!gm(Ru,Y+.%Aj_Ea0V)ohr_4"T3L-JC95$gOL7)
%K`Z<sD<Pu6pm%2".EK,0F6lG1cqHlE$mf<jneI-ri<^^X*tC):*J$2>'P_$SifRi9m!<hO8hsK%Tb%7`LU6HkX1u/"$an*D#3cG^
%"J^0$VbS"l$5q&>j"qW)8fD\\c8Kdm0sV3"B.DPrqK:m6.b8G&0'L0`e(-n=[u.pY.2%0qm.<rJX;E&lmhMg-O9Nl6Ul?e9Y$E[R
%="3ed[B1ou,n!\bh+`8Q't3%U@/(Z`.uK4ME)@#2>I(cu`)3%6"%OF+KrAP$A_P);e3=p['bT/W,G'P*S.O^/CI,TaC'3GDaXW14
%i7%385%#;YidBNSa2'4RC>qcKkMA7*e;/7V*/[\!e"7^K]kSQW#aDr>\!:.N.ZDau'P=:A9Y.B%j*.<7PePkjH41A]G(2(=8Fl.&
%\ePl[c4CE7#M>J81Al_:#KGB6h^bB+!3XtN"&$ao)j,H_jl>pE"2-E0Z[WFYo!P\U^VBY9,$M3'WhG<XMN413pEPC?&qs[*n)[Jr
%RDS0fnMbmY'F^H"D;AeQ<Kt+EW'\B-p<&e*ECDm@Jtbl^^unmUM'ft!%)-$m]%ep7';15!QY0-;Vf,c.&$`]AnGlJ3PS@$U4=O'-
%4NF,#P\=)INal`5-j=#F.C,&/=qP'OA<i<'*%_B!Puk]nlaI`KIiOI$(ZL>1J<WL0.3&M62;`HJ]W=_C2afKeBkZ(H+K(,:FD_7G
%]&)1`@SRN-^\d8kiG*YLA\GG+*mW;3etkXa3H*em\<SCXqsMij'2J#`-#_AH0>)2sb"'4sGHYe*rp;Z%r58R2kF\[)\L:l13--Gh
%)#&G2LmVNIbr'\4<B=Leja[5ahu<"-rr)faAt[oE)c+5E$cS?0?N9-#aCDs5j1P?K1ZHsZ&sH+PI3pZDeq62jfQmMIs6%/pk'-iG
%s4on:L@Mr(n/mGMn?KjrkH>7[+Ub0S'f!/b*'Wbq6=LdmchjaSW@'h8C?]u`:$3_qhR$2m\-"98Xt<7@)qj7I:(%QN6Du+EJ_MPb
%2g);#kaLNlKfg926;LHAOiF+FI7M8TY`<N;A:h*)ece3\139Me(j^AEeOd)jPO0Nl<NR'mjC%63_,I?kiqU<=*(o8`9ZU(r!lDrq
%._(M":PFH\1a(PgI2&_-KIkpO&fI]5RGd.F1"E!QcUpY8/P/cHZS%g)Xn>LN)QIIli.ID[,$5eO5.j"J_4$SnK^"'TC,K4P9%r"H
%S,#>"8.*Nq@?h0k\j8[R/=0.hO<=l,!Sj/t*"gGk%i2kbf)or;L^Ol`LHIoB%00uOm+slRC-UC?/Aou8A)+)hm.pK$i\$UQ:h5r.
%0rKn(oAbE8DHsSF[N7s')Oq+9*Pip[i_Mr5jUhFV4a1SuX#]u&P;.Z>>q.SfUfIW<KG@BN=l(&=ZJ/q:,%;d9]CFgnI!Y1_Deb40
%fJii"pKN:LpoE2>>T3Y,W=Z[S&.;'_M,Q0uBQF]2Y&tMj[B#&nb=S\$rR8s7NLR>f%p:g%K(?kKZFiGQ*NKB3]1rpr"m29j3%e$;
%EU?s6?e5DMP#Bf9'c?tNNiluO-2m;f?_M"9B.iEH3JA<A&j-m8>i[DRr2q:A:Y2R1Z`8J1Jq(`h[te+UM*qh.B*)]Z6`t%X#gkQ0
%;8pD?am647EE[,\W'7n@gUH>*02^aMD34]VRI7g4NV?+?R/5pZMS+GBaF!o;,4AZNdcGPem11E0!!+mte\<)dpF.9,4?b^$hF6L2
%qQQl[Ipq::@6t.I,W\qk"Wa29L;_"%6*@HcJBegN,)&h@Wjo.gZ@2-53,P#8gjZ7Ydaaq,3UU^mLF\L:Z\fs%*tS3k6QjUW`n`fS
%Al<$rHHE',5(2DWFtZ)V:DP"=If>rb5!Z\UD>;`X^__q?]IgBTY'l"ikM:g(=VWZ_`:Od#].)_tb+A%aj(4.!>HoI>m?_>"WB2/=
%GdBP,a#bg(:R6UuI`0;`*$][6nM4BY_Kp.5s17N.00f68PO\%^QrWLe^\hVilbS(BPOX\_9Cf-R[^Y;R<8C2"GKsnOo8s\jp)9Z#
%JQXUY@*><K#ll#\,G?*d+Q<*]@go*ZdQg5P#"%'_#fOM%6J7=mJ@[#D?=*ZV(J82MZ-%WFcf-K[j:@Ol\Q<.18L[!=O3#<b@/&?8
%H?msmqk`bU4$@OWEcI8JO;nqW!VI#H/;d%-mT%W"=V3PIp_iT4!'/2(OW2suL%IA/c7>tpHEr&\<5#L:CI9s8?$.YbNS7#Ter!OX
%JOd]:/Id&,M,AXMQ>gEbUIIpNm!:-h(`g^[AJ5bVN>D;rNF\^'g2O^*MV=li(Ap98cK.6<m?nC0hP;8egLSQ;;f9Q0jSGs@DsS>%
%rg.-DP=0GgLsk/kZjiUcgc%q_SBfrQ(?GG*!8T,qhVuobUTF;N^fDX?+j7S6FG->6V4`Rg(1'rLi?7ETL[)^b[lR.^^?jW6_`ADp
%4k'=q2+4GBXZ9[`q47(!ib>'RZI=SC>LfF)2omlF5gI/I;Vor&^Kd1i%El]FP)Jale3^3bRbG7dZ_&S/BdcpiiC:<1,Z[i]TVo+]
%<E.*If2^A3nTcV6B6@KCiq.U%MF>g`k9c6#d`,ML<%7Y82Jnn_)eI)-a)K<]J3S'Z4"HD@da;P#;BETH(8`oF6#:AA#@=7SJ-7+Y
%^OXuOAM+spP4!T#@8X"_Mp*XpgD;?0kpBDCS[-V=EXk3eXco:m+("9:2`'+jTHI7:ml9\!L9t#J]rAiuW7I4XH3L@e!OVqc6Zt7Q
%,]J3Q2rs1OK<J^q*_%4C@=lL[0PkRr%TOW<#mm]kanj9t=']hudR8e)OG9dCa(,EWp1o0Z41$Iroubb=1_oAHM"IL*#JXjcLDKqJ
%$<2`9i\@E&An=G[Ep7n,+PRecIV"<n;7nG&kKC@b[j@q%8hlSi^%0EdMH+IIOhFD<+ZaJ2krTlSD;b;eDc:H&MI8cm?cc`]crL4-
%b,5)i(L_HS;1('sX$=9E!lEI\<IA!S210:Y:)$%$d*9a-Xb(VO^p^,%mZbUdif2(WLfDhGY(#Kk?R1=(DI^CkGk4i.30g`^X_4ci
%WA=(Oa;+tid3+(X6m_j"`k!I%AlnB*JuM]mo*/0-W@XpYUg]4I4UF[:Jo(VX-$cn=M*qa;eH()Ia-ai`jge$CcYssX&Stuj^nc8P
%CGB-9^S;"EX"K1j$_56?pcjY%Id9X5I.DJgFNEL0P7qCA<,n!kTBRX79b_/i5/25;\b:m7TV[Rfk_4+4gCa\<95:r\jft<R8aF>>
%[om";].*\&"-rR+(HG#tMbDshBP/V%6B4aQ]-ur$rJDBd2I0$G0g,@T:F;HY+<8d0H*c's)V.hu\T@s]OcKG62'X2,m`c^t7&^!R
%4+g^hf&Ws/G3So6ctQ;@&M-E:Su9g73-Z)LF^&o^mKmhV+k!@#;^HK^I>CQB^miiQWcmSGf_CGM>Xe&,>scpUWE<CH_D>ARJo:oe
%[@pNM;9*r2G)@pE)TX4\/=CTI9>*q[<n,mc&L(,QjbIpNQ1&s="!@Z/HV;,@'s*;CS7MdR(Mo?$#ddH7ikiM8MF5gkF^CpGBcJ.E
%DND^?YkB)qH>3MW'/ed^E:t8jP:MMnG'J.k5:#&^ieP#JW!K@6@RFlqkqks%Z(e=3#;[gt-cUFjU:u!942.U;cFD[,*BO>b%JjKW
%a=a/L\-Ae=EkY#:s3#,3&k&44I^U+qWWVj9_,*.0Wb2LJ"`p-T^e55]=DCV4@+2^`@YbS#&U(^Rd.'Z8KYHY@.GTtd62Whqd%"H%
%9R;j\/QEhccGDC:2,g/9^6[I$JGrs!h%L.KWAA=sDJkA0I>#7)r\`S=K.UMQ(B/rMoPLF?U*Y6BMahr4K3?Y%WUJH&5=/E/RR):G
%cuQ@]!cQZ]OkI_EY^n"\nI8OEiR2Xpl(?4a%Antp$/V`f]8DUmI>;!"$i*t2g`2bB/?H@RP]p(uI=O%A^kc?OU`,_$hrAm^3I__=
%"7\9&hu(`,$l(e#:Z$0;]SB+$Q2$&jij0KNIF:R:Tr(KMSR_RFPFE8W/u8j\h(;i&2J4Sa]1>DeIUN-lXX`2SV:)#?EaU-u!:[m<
%2If%kHd%TV:gPH-<7SI\LMX$QJBk0H4hl7/2go%k!RIAiN:YMR3Q6qgHd/P*h:9a"conFW-4_9Ff<\YI0S<QXM0kZn,Z.AET>k`e
%VXe8qE]^GmmN)F06H/bGZ@RTWgBCQ;=&;7V&t6EE]>EetbDT75#9s@?]6T[B#*ijl]'1>0Gp"*0*5p.n!%9Y@<;0D=REFhGe(8bH
%1s`Pqng_;C6360+CQ!K7fQM0SmQ!+o-2Ke%qN^hnV>a1M-TqXfXg\5Xg3nZS@hic!Mi5!DiSZ:gGcd^2Eeg5r)4NSH8m7mD)%fOe
%HEtRk.[u&Q9m_2W;7B3Rpm"qV+5\jl:35jt%"SB!aT1M3CATF%\XG-l5i#<+]3,"dAKbr\3"n`^2t0UpR0`9Knh!:(Vi<Q2N6,&_
%G'tW<6'qq<4<6TGjn((A'lbg2X4'<)/_aj0"@e`PlDYg'QrZ"a1^dblas#V'.1F>XngGRSL%:g:550EDmht,]rbPTHhuAWV!jaAb
%Y9B(cl<ODlPn?nNg-mE.WQ?RGBu)(7[cC\p73cu3&)n1f+K*AdF>T+OPqcKN=joXW(uk&lAcY2d<UkrI:','33Sk$SMeT%nDP]6q
%qE'e3+cn#4MUV_RSY3hE:c?;#?lbtA/s7N-#NldsKV*<8dFB+bBJHg,dOO/'OlqCC]YQhc49OpV[G:R-K"TRG.&;]q,RO>[5cQ:W
%mfoh:gs#6BSkH..;ZUF?6@SO&H@uM"YG9q&:tn_.99ptiVMLTB:<+aX/m*b-pkTOmR;oouGh#cK8c^]C>1H_tp4MB#h0noOJpe1U
%+>fPaoo'AMs-<'OSpI8^qBu=0rqU#jd[q2UjNSh`D.;4d^q6Z-#$;UeGd<3De5EHLfKJCN9NfpE<4E9>oX.&#?$r/O.&8I3:/Vm_
%:MFD$&,MED"#Hn+i&tYTd`YJO#2:-FKl)rWdOK4aiS\pbA"6m;U+hWI!Pr)/B66BKp*j&5+cS3rc#t+s[[[XTN=(UDna^lhRosjP
%WCU"h</)/9^d@^$E^g'J5jK0U\Xi"J8Yj-^ESl'qRea#1C)m3%a^(dND=A@!SA+F*KNq!LR!@OaF2<o@7:glt<>:5J[dq[AWF?LV
%ag`j$'^(X3qbaB7K\\.C<[tC-*q+O4<@SdT&L&C3<@X:aB!;07;Gk<m@bc1(@MOf3<S3Nl7DWP_j^Z&MV;dPqS5,G`bk)#oQ$aS8
%/4JIu8InGC9T>a/Dm?o>WV>CVbt&.4UZ+V1a9GD%Umion9)UnFcp_d#br+U@SDP3/2#MG)1gu*+S@'6`8g2Ht4YP^e0+3j@ZfQPA
%IV*Lr;?`1annkIZg=L4Cf"c.=-AB(`P,WRa&+H8.4$5s+*V(s.\K\=_7-l+P,aCA1VaY>t:B"4,h*jdB,$$.@,4Vm[D'tuYbTJSs
%rF&X')A?,FhJk.6:FehN('RK%n4dpX'J`lsVC;(gWM?RdZf#pc^Se*3+bJs"'.Iq[;k.u]rPGE/.]t^E#`E9C@<AGsD4"JVQ!$J>
%FQ=-uqH9hoVN,DYToi?_pDNfFda-tl[CK#8Q@IRV5@Em?87A/G9F"d1hc8WbQZd-\0DXE(3IWQSC5e(<2bH,f9uZG&8pA=cZPG8;
%R]C;DhBC@ee^bsA/uoUmbh#EEQJ4D"6Lpa.*s6.[eJK@P>_9F#<03D@nm1andf4aZYYY;rDKotEr++0Bj+e/5P/sIb]Y],q+$/nF
%[\3D9`K;<M7EEqEFBi=R9)9A^*9r9'Q+V5*/T:_!PC`0F7nqS#NN?DWeih;ZpLHbDIZ\=rW*%IG>"QOkQoaE!\*'4WE@[qqg2Q4s
%EYMd%&gCrG?YWiG5^RWt8-DL&BaUcLe'nFEi5`Lra(VJ*2=.s3'sZCae&09%r)!;9T_/4s<P%XR[@'_WAM"IH$_[2YFTa&Z4f0r*
%K`R"//JlpC@_t:VOYGGd`ba$rg4AmhYtuFP+mfi3D[t(^"g]Ho+Mnn3Bsb8Z*8skte?7H7cd*08&75p.W6hU'0qLtd0:iS^_5>-`
%Adt,$JZWH@X*be_;IK4\#u.KAZLngr0LE\\Sbb%)NS:MFN&?dp_\pn&kK9J866=DW*6cHI?%L$6XM0n;YLSP?4l_sCf%P&;A,tBG
%+.)KpbcQ[K+8<DILu%ui"n3ES+ZE%W@80Rc_ODks"]W,h@7S5B6pE8>(JBRAlNg.n%F[4LMqBss@5YD"Iob'.K$-/012U.u=:Nmo
%DjTl8<dHV$8u\Ni9.oabObWr>moN@CCPs!QR"D@D9D92TMho-hBoE%fGJqma,U?9\gC$i]Y>+sA0j;>3KsV"I:5VG&N\XdFr+pBh
%nVBmbdWBVOV.]k8i,+8J9g%,JYR)UBWDrP=%G2[^03a%]f??d]e"#Mqq9j`FZG#V'2odGH/kDC[$,\X?C4Yg("h\ek(UMK49;-N9
%M!4fE->(@^0,$?GG(#ZEQ4&i1iV\WD'jMsJ>Jj5NqcEpS+J,FL!RIR-HQ%4)ih-Em\HH#'GQ:GH?HRI5s(bj8JI80Y[\32i_I1s4
%_)BL+l;jEO!n1RSSj0-Q-/^pha#1g2dX5HM8OU^GD[Bc9Y,).p[68'n;I>U"]m-eS%d@.G4MZ)!&IrQf5<a4AP>"'"WtUU5<dLdK
%1mJ8@S)SU9E@DB.f(r0Y(p@06!Rr2T/mp)$"!1hN.VVTf,9V4K.-5i\j\-i[Z7Ye$1Mg0c?g5He#OY+/o).q]&%A/`JBY+K'#qcl
%:W5Rd!bOgJ:$SWgAd0]M:Fg."?@W/P;0l[Ei#*bcq"iT;?pNDtZjgo).&-8O1t1-J;=5'f]-7_-M6fdh:kZo1M?tN5l#I2G(@-_M
%*L[=q*]9?h\)66XR1n+*%*m$Mc+W\]^OCMAaXs,Bl\BZ&mfUV:KLR2@e):YF0CupNa'G)lVcBkCcm4M.ZQ[?hE=iVT<n`Y$(K@M]
%-K=oX1EA[>rrM0H%MDg5iL*,?gs;<Vl5B!CF/DjD4KNZe*),DPV1XJ.S;AoVj\5m!O):aI<:!0u:Us#XPk]Vi9P;\L2/1'[i1ucp
%.rM(DfLfB3YUP_GW4+fUndOA+62.66G,#/[&UT7H-D/rkD]ZB<k9;@>T\Q%\.]p`Dr6o$E&?#\ro'JtB2B`7?cBb0T8+D3%rZS2d
%Q_.:F_i$0p)d!&gh/b$J,CI:?ma1Q`f\l['fVuM2k:rO\[MG]cMklk<8l%aX=5&<;RSC1@+!phVeV(025rjgG6!)?2=,UFp"22LH
%)A7tNAsQ]UB1V-+ahDFsBP+su;W<qKU"5=5+Z0jV,;,G4Xa6gb^5Brp^@[mK_=q^A(\3Rcj_$,%%Da%i?f;_P_F>!:.lFCq/`0ME
%12U2k#E*-5'$lfT\,^h?8`XOsJFmoI&JJrASJNC%2:$f!BK`@=1.V+@=?eCnMHdA"'G:;T8!>k:;&tOn1+t<M3"OJa[8:dnfpUcH
%RR1/&>/s\aU%3.69fRWjV@ZZ%//E3A*\\SrD3:qQNtl8$d^Ru:1%;W?LR>=>=VCik<WEOYr[fTEOZd?b;I8K8#)hcn\B%CAq*rb^
%_>@,NGrTG!@%q;cOqNZShCT[H+bCj@MfHYqI0%bQ!BA+s53phWd,gU`DP[d;GKEI`ilO;9`U)!g7/Nu4YY*NJ9IXGu;qA='3DdH1
%kC0mo7N/dTBU"BYH!5?D]cenQ"o%QO3XLjDS2HTC6/>-[_oEpVLkg)?@.PGU0i'WK.?;jl;M<VX(6bNLV1E^mYuI:e,C->M=u#rt
%<]j\t"=S:_FJFRULuM+0A'#<9Bmp;01'F*sf')*,jfp)ZL%.PpAWfI#e;Tr1!t2AK=ngGPMmV<%]"Bn<#V8<-V1Q5r68^3LH*E<?
%#oX+i/H'Mr#7U,CHt<r]MldSpqC>o5Pn16e(*sgFKYRYGMFo>VZeU/hrbScU.$8OC[fbumQ3CugoGJ=)oHA"%f]a]:A/-6l@'cX;
%<ZE8PmWMr:d6=m4MW&^4<2X.n.!0)BkBZ?q0gSmSif&/`Z]Y.u%&Z]`b1FKUC[iHZQTLGQ'ui%\W5qk6IO&ZDCJti&$je,<d(LqW
%F&ncaB?hr@kQ&Uj:1PReZfd"hD5qI0pqO:qCTqt1Za>,DfZuo?#\Csf`;ut]C2ah:L0:5_j@NiAL[O@8BphTV_eh.gQ[:UPA6E\i
%p`RL)_-"5d%&cT(d49;,?'g8kaVd<QaN?S_V/#^l+k>\oV$]G:AdYnodYs&5j!&BmgE3o<n9gf7*<jN9M=k(3@.)Ig!M"\'Jm*J\
%!,dXMQQ;r*qZ4OW)78,!kQWeS&aqY1ku/Lu85CZ1K;D_EMa0kIc7;g4MZaqD(!IjtbsIe0XSYo.ICN7\ZK`f&.M(Z->[1P76;HJm
%^@Y4.QEu*^Ng)_+Q>_8aOqENA19L]KL!N(-g1/WPAu6,<gJIH[5,(B;93R.JP#)E&"-U2+d9/co%R#oq;CJd]APU!`0][J?<t,HJ
%cnj"ng>\W:8"pn8Le<NC5e#CL/!jNfOH61nAD1+n<JO:SWC_kZ/5sl)*=?MZe'?b1TkAY:j_R$^_]VIJG+Xrmb"[,QC2g=1<6cE<
%eBb+OR6)dKa;pP1"]9dt3<>E-=;tpg.9c:h,Y[*gmo'G:.PQU/H4^8JZau-/7HiG@Vt5U57h_0*;eUd1o,]cn!9F/2hIKLXgiRS!
%A?e<_fBbpf%0Zii7>7`VG?d^%b<c4"6UX0J<MfBi9q!5j=38&S>FHV`&k4"ZBZ7BV,;!lK*@4:JF/+ueLM&)0s7G`6he3J!9QM<%
%!I^thkS0,edk7QE,X[l-1)4%"qGmZX(U!Qba&>4XBL3"`gF4VmQOq+a;mSATPfr5,>%UXTUnYGYCOLN>BCrhl"l>7b&Tf)kLSN)N
%jAF-D*DbWa/-fNorDj)T&sYhP`Lp63S7d,UBi-GW_:$YkM<YmN=^o"PCVR;[aATheMi6#>iW1V8:#Pp4FpM!&4.iJHLd4#B_Cd?l
%s6([:@=!'<Z0$2V[6s@+50"/uF1L^Eb697J9f1@m9A_WZC;WFX0pE37Zr$,DCf=J0#fUYGi'1?bY616ESB2VJ%Z&Y_;cUdd`M\b(
%nO?GW9e'aL7=T\uLN>@QM6V;:NmIU22E(T>=u6[R9$)Bo)fjCC?AKD)?;IC[;L^2gh#Tc^a'@3;kEXp&;Oc5hAm^FqmS_00r5r`3
%HW,]<;/R[:3R&\]S76dOEJU6l3KSDZ\;IJ1XHe%$MWrX'*3Ze[:gfde'n_*`=;nF)Lc"H0/ul)5!i:cu_9b`=<C/btI*\[ip;"cl
%+0j#*2=d-YkKZ9Kf</Kh,!jhC]Non!PRa;61bl;*ee15E(-]D"4BduMR<XRpIP3Qp"39Mg(ALe$`:o07%d@Onak^ot>i/ni.*MuZ
%X-#6#KcM7CNkb0L<[=*ajGloX@PahX0"h&O.;r5u]mE+,5Y"Y<go!%`KA+>a1#$"*p_7%7:aDbVD+3`SLiotWEi88V-n2t$X)os[
%mlD^tU>QqaJ?SL.K0a9UQtW3GYoF9Cd92Z#Ur_65VF\eo#,;8Fg,;hj,RNH:W+6(01oe8&U7"9n0.T&]*L^/a;Lj=CWYN>=;GkAX
%q2Ja+!IBg<Y#h(R>Naa5Yp^)Z>0aqI<3_T81+LPA?iR(%r^DlLKU8/3Y*'es[DFL`gp\!N^TfM)/[NBQ-*%.rcq67Q,36"n`De)o
%-,C@[9GIG,/W>@Vfi]o,W,Omd4(Rr<,^D8ua<Ab5o<Ir!qugTR4G2fZa4NnE8j9Y?WDo)n*\RQ@/l=)0G%*J0)IIq?O`Z.]jErn#
%81E3W=p\fBN_kO/k!ed:;id`CD;niS;9iE0cELmg!ltQsH4AA!L/.:^mG'!n>f+umm^-oJi4d(g5Uq-BaMCR3;:("InR@LIegnH,
%2Ep5(i2(oeIfJe%Y=K$m1lEU">1]3%>drIEk2ElCjAIUuUm.i!SY4pM<VNWj8f-Q/Gl1Q@lFq>.C3MO?Qc`(a,8;qI_Xj!&YIr*R
%SHk/_In'(&H4F,9XE,^pf,RKFdpu13Bk7C49&K/jRRT]sk5@S$Aol"W6"14(KgpN0+o+$\^1ZZRaiZdM3!aLc1&3=>.3?'F8-*b1
%[(RY4d-Xn$"j/:g'Krg)^*So!-_,d=*lP[eR$lsNHKB4_&%$ASCjefSQ;%*!Np.,A5:I?n&6,)<'4`e`I(:FSn]00m,Y"e6Kh?Q1
%$A:b%Q(Y]g"LcV(/;^n&Csli<^EK"!-eoF=!A+n@>qj#@Emn72VqnnR8tL!p\Z)l3&1fW_%?NsAA;>p/EP50R"H]@f-ug<rqeNt(
%Za]q>q\-@h^fD,M$>[4]e!00DHm$fSeE_@+,PUEJ1>%,gXS\EfEr<&KhW=l0<5FA6G=gM'1X7+j2P:'5l;m+^k3;NWE7#nP3eT*a
%E:**UBI<Rm&#A&la"_--5Q&N"B'eimS+%&bD5jCWa\m3@B=#4tF;@gji:K`j>SC9s<%Z(YUR<cTnhdM[[9H2s-,mE$2T2**LlXN\
%j`m6_9$d',Eikf<j;AgG+rs/*&>2q^JZL9JH6aHU`$7IN:g-piOt<:n@-Xk2A83`/06cE:6]G]NAdXqP1"lojmt?g&CIWi\UrB;=
%)NtP78Z#?d,\n2lh]^\1/JC.L'RgM`/]nS><R>Y-B<AZp8C0B+I\8r@A-MQ35rD$Wk5l\GMMD:]]#t2@eE=+#cJiOjdTfKMZ]J70
%G^.nlDfStX;6VJ;j+KcR,Xrit*Ep-=LU09))p8X;X]t\.(MbGBfA>cG]ctk>Fr.bTa@^PPO^qbV"Er@8IcQb\[kNMiDDt5P^CD`G
%j;I@uE/LI0.;ki?5(K\.1rDF4q^'7rZDV:Rde%*T-Lpa!;r@:A`#_b<HP5h]"*b)!9:poY8sF@(<>*[0)UOU([=mLlk@rCA)Huud
%-'Fn=N0Q`HWb`u<H[@3YQcL;HBhWq]'+Z4EmKW,eNb=@t9kOs7L+t:'n]I*i(tYR#BjB8-]q!6ii\dScIIX;oMbr30r,=pfQg$0U
%F@uUhAhWJ%HO9L#US;.\<ghc9\:9LrE_5RT7I.-K1@<Nu8D8Hc)Yr[remi;5YN'BAmc"7M7G123K,;"dYI,?Kjn/aFK+?B5@)ZWV
%F3hSM'C;e4.Oij4%H<'p5PE:mfW-^%ZO%rL4[XCj_W(t/aMcC6Q2hQ_&L&6^X"tgKa4"E+^3%F>d5P*T0,Za!Q5V/FO>A7`R[V]P
%P=FaMS7N#aMe8Z9_E$R&AR8c[_V8I2L"cu6*/XR(Y[Glq-^W,dO:%pYW$BIk\/eLb:(%b/]<Rc\#YKI1l8>_U8D&)T=-k7\P&;).
%fVuE0q5n!`Wq7o,##;p+<>ecPn,`pP6BR%#`J5%>Q=5ll-ELf!mVGM"PHSXpWs[p`&.@]S%RYk@=*4ug"Z@+5b.Pf,"Jml*n3OpT
%k/foK<I7nIQ)l*75nHGn:R?lg;jet[:]cq-Tt[:oJY3/4)C#UNHL7k-GkfuGggr\jjGbq)O(D6U#=G>VcL/`/_@:s_%W*]B^^Y@B
%PdO+HJs^aO<r4C;0hU!dD$M/X!ZQ_Q;&inND\X[>$2&/G^j60a<)<)teT9(N!`)PBPuhI5'o*MSK`okW1`#Cn3cP3[,/g@$E2u`Z
%iMH2^Mn.2eS.mTO'RikY'e)YC!%8=Ed$H!]Ze+E<YGD7dr)F\*>Q38U9B<<G?A+hW;9918K2dF3">in699%u@$fkN4(p02:+YBEC
%`j;^rp#B"c=M8SJWbhOQWB02jUX31a9Or1"+qCL7f!!G1lf5iSjX!Mt&4ffM+Ke0G^B1B$L#lFCMLIu0@]o$fLC-sW7kXusQ%l<)
%\l>]VGiU,X(jm:)PZoBA]Rk5O;+HR83[OaK!FJr;9N&7oLhg?_&&ai=iX!>gLRq/UaDHgd3?0nn@g.#!c?3F'Y17]S8$QG8'CZ2d
%";O1q*ZS?!(kLm7O>EG`^lXFo!*C15+K)35e0Oh#6>H@^.J2K's"anAn&%G+k9O)/[1@9>_Gt.4jCg-P.HiQ.Tp.r^.:f&,;.P4d
%[e<HkI=&mR2BXr>dc%Nq=7(KS(mKjJe#Tq:@?N=r)T9?o7,7Q'b(0*;GIsP=X.*q"934ce.<T'ROC;t.**.7S1c$I:U=cd98FDTs
%23d5FBjBCU"b0XRrE<2cX<Ko.1";5!-,HaCp!0FA_J7(s[\-37-Dm%]"O9$tG+#dl@##$F]<OUH[1t#cNNjrdi/DKT1!U8I@EMn\
%ZdcM>F`!GZ5>9*ur'Q`U#]<Rb=>Vh,LR\GCl]%6V4GkB&IM!A:2eL^I9UD3jd\>H&'mBlN:eogqemg@,(F]Ui(@?VK.V^"Th)=J/
%*!C7EQUUTR>C^37L,7thhC7!1Gp.2T'(e8e]I(,peH3jW5gkR>5]qljF4BEBU0rntgC1To$CEI,N.QDu7kJ2'8Hi:Ll=Cc#E,AID
%OoDMJD1R+KAjq8S!;M02+'"7K2m^).`?i2TC.V2,k6`7sd1,TaQ)ZlAR5t>h6!45IJ<@'oO:Qb^MU)EoX9+mo"pIE5V+lQLbhIie
%WW5RadFo,*S]!Bp7MX=s!(i@A+`DI_le*](<"'o^K%R>u1S/cf=pRC-$D[FUJ><]S'7?j=FKl/He3Wl5)Ru\2kT*TC",P@>N\IRh
%c(O4>g0M)s4!rFF(S&q:m0+1TYP_jpqI?0fh[&BBr]sKZVeU6u`T?lf_Z23FO"*Oe246ae-%IP=!YMdJ(+u-?>iLs!FI,`G?lHJZ
%FFBkdAJk\3<"fMS@VLEL:*=]6:R8YM5_Z.)Wg=CLM-\5*SR#4DZ;mkaZpsE4K;On%e_kIO;_Yg!$R26@V4S<8L2C3MS[QF8>9&K'
%]hg4(kT=p7C!%Sdn3K7#m3H=s;+PZ3c5kB:.<mF+!+W`qkd>U<kR=B>K10P&UI\j0'[DLQMh@:_q4^BnHI&iBfG]at[_TCEkG@/O
%.Von.j5AmX?,a1+.n#Kf:>Q$;-kY*:;+e^f2HB[l[:q#_:gV0>Ch_F-l-6U"R:'@8[Z2q()?=4J?*"KC"tqB?KD/-C)Zl0KpCA6i
%gFZ4)l(OLkB3ssCHi(.1rF3,+mp;92^IJj59Mq4.Ju'kjFEW+VH=n>OXjI*LOaZ(\gB!)lE"h1XId>CH[b504NWcutS=K_0XBu@=
%r0),S9n5>XYh'RRNt4;6`;t-!dT\QE`K"<+2VB]kF%g_YR(++cF7C4"Ao?EWHCu<Yc=JbbjPGiG)^1C9_6K-fg"5u[\#m#ihcdQ+
%U(9+ejK!sj#sL0lgDNhU'\ZVp^.csILC6&BW<_ma0hn;W=kJMQnoXOb`UjZoS+Vgrq8?aGYRb9+,Ta_.Fm.o3"KLD?BpC#%2)?h*
%37RH#k1l1n:;+o)@ORd\C;SXLL8V3YMD&>cHIsF3>ko.=dPAsmR/i\coUOnn@TP$uG^re?1so4S\#"5cm&O8bFnFd1d;ZOdII3Ak
%IBTqh]cR%IR7U-hr$(lA74Y=%Wf2kkZK_oKVnkqMor-jjH0Nh#6'T@Qc.]-VR&;g4prYcE9)lsG"#hr'm7a`(F%7]pZ4NpfGl+_7
%f'9n]`O"hlaAE;[MH`$1L'+ZN=)?-HpcjpXn5,-\G8<&A=2K:\G>g:gW>H.sD.p"u-mAE(nRiD^@q1q=>TQ$!RA0Fa:*Ubf^kKO:
%`%N+"3Z['/Mf;]._6f9,O$A^?YSTOTS`J[UmS.PGUu<Q?hD8pBa;4)@6DXaDbVpR];o!_h%H;qHRAW<uAXMqJSE;h@KH<gV<jCh,
%ZUSVflnr8YO<Y;1/.!d-WIaPC%#X'bT)5cIA/isSD%re,alWn61+G*\i3Oh?Fb_CqU@9gpH_jH)VI4QKq]!V.IsdR9&LTdQakuk-
%Is1Q$V`MBWe%#^kepuQTPm7.1"5n5haZgCO<9LG!aYX[j%Wim<(I@#I";7#":0Zg*[+.V]mlQSd.[!mD2R:c1P4DF4Aqda]H#3[?
%^CnN<f3SGHd5c%TUsD44Wgm=:![8`^6OXX3+(I^#P!L75[XJM^P*f0CLNXDP%C)]<rNLN^+<Y.e+2WQ^)ShpK$^m%/hO&k(/&98g
%<a?kW<Bq<.pZ7i;K!-V\#O5,8:XPC`,@pJK<PK&!Yp"F]^SmsbPWL?;@O=n/m:!"!ROt+g+973clFKiJU*#q\TRc-mJON6O]Eo'G
%;plXjFs>.Tg`_de>UCQliG^IO\ZOUGQg(S(b*$kmPa#";,$0[0&hrc`P\EZOOjegU*H-**-!Fs%=arK*T!kcN,Khj3KfN<.]'8?Q
%b>4jdSGgVbaXh;0Qie)<3ltEQI;u,(bGX(P*oruiGiWi1Z-!/9ICY_hE3MgOdR]Xoc?jXmLLc!u.jC4ri4Gkc2Gk4TnO"B58`[sV
%+tl?4pNLdBXrJ(kS_@/#6\M0O*4Puun./ILin\]OT%\%j?`":E)W*R@f;:ZZd'eekYuiF8f>6JJJF*jZUXAVA.ueK`ElCYFAj)R<
%6CWNc=YXfWS(ctZ^5^cDdNP&?!uKs?8!bD#R7*Z94dm"Z$3_g5%BtFN_;mb#/<ResWM+=dYVAbR3]CVZ\3M%Tgb_TD;.(X4QG<.5
%2lq-eG_s2H?n&+c63("]I6"=A1n=Q8]HjCD1##eo3<BU8+>iJ`gaZ+CPlZk/9Z`!QK>%\s;RXUQ<%Af20.Y_GRWV/'if)2=/\*]!
%^)$lpVduZ_NGRbpL@J><S>oMbWLA&5fZ?,tnPcBNPbWsgV`\D-gB$[UMX9>.A%8W-%7BA-q4M,6&^_hePH2_?pt7H%`1:9.^7`cT
%dNXk@f#:K7Q!tj[aAO,@$k8RO9I5p1b(]3:Ta.SG,EXVl3T`5!]egj$Z>*$19/8r%FpKHrY"0m:fV,O9O5o.\fTfkl:VL-+U(Q"7
%:KOg3XO:hna:>OCmDVsiMJB.jYEP/l'H!e*W[28@9!H8hY@:Qb9ZWTX1.uFnJ-%"<W=ECd'0duD'?<)+pI5T[_h*So&TrCV\oGX:
%qGiVr3V^0f*f+'b#'8"$V2.;[pLS!&`7.fSb8>>$1c,WZd>',KLFnAQ8`'3cal8YV=,7rSK\&k'=a>*XLM$J2k\MXO7ES3?5nIem
%*?hd*Q=:3<BQBs+2/q4_CNGfL-"!.68-D#%&2cpkSk?=E3EN#CP%f6dHg`>X*7"fBUpL0Rc.UhTC[qJ%!hK9p]1>m.ms;mX*N,gh
%>'=`RV-].J<=h.oZC1E_FpNND0$0.:JmK%8&;$nD_&t_TBn@tFcRNmMi%QHP\Kg([#%2oNPXu62m4B,Lm%u3S-ZqLR2&1/9QUkq,
%1J`RDh5rm6_^ip[]*;i\O$WU)Y-RC2eJ7s(pPlo)g;U15ZXUL\i['AoA6LKR4h[^Ubspf*<`1QLKX$=VnGLmr+hcTm>Tq;d4f'9C
%'r\RQ/Z/l2E8[3IJ`,;PEprj6n@QYJ>5!Yk3*E[*7,Xr..V2jRJ\5PCgKo>M!Vt@(BX3:iP`%XUW?32E-h`T-fsWWPjk<V4Zg"Yq
%5FFJ$)R/_hSOkP%JP7;_1gm#Wm:=^mUe%uH"ft>s;5Hg'+<duV917k8^%&2Yrog-FmiGVlJ(3AJrjQt+s7i5`s8BG,q"LD0o7u6&
%mc2>tpilc22uiKYs8@/Vq1im;qn%@TDuSoas5prNIe_/PrZc@Rg])Eqdtdu!]ANVZ^\lRLIf&)rs5/>&s0-Iim=Ki^n,E$qr9s[Z
%hu*ML.Hk"~>
%AI9_PrivateDataEnd
